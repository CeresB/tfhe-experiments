Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 55.17     12.06    12.06                             fft_transform_reverse
 26.85     17.93     5.87                             fft_transform
  3.61     18.72     0.79   216822     0.00     0.00  FFT_Processor_nayuki::check_alternate_real()
  3.34     19.45     0.73    72274     0.01     0.02  FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*)
  2.24     19.94     0.49    72274     0.01     0.02  FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*)
  2.06     20.39     0.45   216822     0.00     0.00  FFT_Processor_nayuki::check_conjugate_cplx()
  1.33     20.68     0.29    72274     0.00     0.01  FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*)
  0.62     20.82     0.14 185023488     0.00     0.00  std::complex<double>::complex(double, double)
  0.55     20.93     0.12 148017152     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.55     21.05     0.12 148017152     0.00     0.00  double std::real<double>(std::complex<double> const&)
  0.48     21.16     0.10 148017152     0.00     0.00  double std::imag<double>(std::complex<double> const&)
  0.37     21.24     0.08    77072     0.00     0.00  torusPolynomialAddTo
  0.32     21.31     0.07 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.30     21.38     0.07 148017152     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.30     21.44     0.07 37004288     0.00     0.00  std::__complex_abs(double _Complex)
  0.27     21.50     0.06 37004288     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.25     21.55     0.06 111012864     0.00     0.00  std::complex<double>::__rep() const
  0.23     21.61     0.05 37004288     0.00     0.00  std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.18     21.64     0.04     4800     0.01     0.01  tGswTorus32PolynomialDecompH
  0.16     21.68     0.04 37004288     0.00     0.00  double std::abs<double>(std::complex<double> const&)
  0.14     21.71     0.03    24000     0.00     0.00  intPolynomialNormSq2
  0.14     21.74     0.03     8000     0.00     0.00  tLweCopy
  0.11     21.77     0.03 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.09     21.79     0.02   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int)
  0.09     21.80     0.02    72274     0.00     0.00  LagrangeHalfCPolynomialMul
  0.09     21.82     0.02                             _init
  0.07     21.84     0.01   433644     0.00     0.00  TLS wrapper function for fp1024_nayuki
  0.05     21.85     0.01    72272     0.00     0.05  torusPolynomialAddMulRFFT
  0.05     21.86     0.01     5256     0.00     0.00  torusPolynomialClear
  0.00     21.86     0.00  1570467     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.00     21.86     0.00  1570467     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
  0.00     21.86     0.00  1570467     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00     21.86     0.00  1436856     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00     21.86     0.00   718428     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00     21.86     0.00   708588     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.00     21.86     0.00   433644     0.00     0.00  TLS init function for fp1024_nayuki
  0.00     21.86     0.00   429679     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00     21.86     0.00   354294     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.00     21.86     0.00   354294     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00     21.86     0.00   240904     0.00     0.00  operator new(unsigned long, void*)
  0.00     21.86     0.00   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL()
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&)
  0.00     21.86     0.00   139280     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  dtot32
  0.00     21.86     0.00   139280     0.00     0.00  gaussian32
  0.00     21.86     0.00    72331     0.00     0.00  TorusPolynomial::TorusPolynomial(int)
  0.00     21.86     0.00    72286     0.00     0.00  TorusPolynomial::~TorusPolynomial()
  0.00     21.86     0.00    72277     0.00     0.00  delete_TorusPolynomial
  0.00     21.86     0.00    72277     0.00     0.00  new_TorusPolynomial
  0.00     21.86     0.00    72274     0.00     0.02  IntPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.02  TorusPolynomial_fft
  0.00     21.86     0.00    72274     0.00     0.01  TorusPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.00  alloc_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  delete_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  destroy_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  free_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  init_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  new_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    24006     0.00     0.00  IntPolynomial::IntPolynomial(int)
  0.00     21.86     0.00    24004     0.00     0.00  IntPolynomial::~IntPolynomial()
  0.00     21.86     0.00    24000     0.00     0.16  tLweAddMulRTo
  0.00     21.86     0.00     4802     0.00     0.00  torusPolynomialSubTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialAddMulZTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialSubMulZTo
  0.00     21.86     0.00     1744     0.00     0.01  tLweClear
  0.00     21.86     0.00     1602     0.00     0.00  alloc_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  init_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  new_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  delete_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  destroy_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  free_IntPolynomial_array
  0.00     21.86     0.00     1600     0.00     2.41  tGswExternProduct
  0.00     21.86     0.00     1600     0.00     0.03  tGswTLweDecompH
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubTo
  0.00     21.86     0.00     1025     0.00     0.00  approxPhase
  0.00     21.86     0.00      272     0.00     0.00  torusPolynomialUniform
  0.00     21.86     0.00      136     0.00     0.11  tLweSymEncryptZero
  0.00     21.86     0.00       24     0.00     0.00  lweClear
  0.00     21.86     0.00       18     0.00     0.00  TLweSample::TLweSample(TLweParams const*)
  0.00     21.86     0.00       18     0.00     0.00  alloc_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  init_TLweSample
  0.00     21.86     0.00       18     0.00     0.00  init_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  new_TorusPolynomial_array
  0.00     21.86     0.00       16     0.00     0.00  lweSymEncrypt
  0.00     21.86     0.00       16     0.00     0.00  modSwitchToTorus32
  0.00     21.86     0.00       16     0.00     0.11  tLweSymEncrypt
  0.00     21.86     0.00        8     0.00     0.09  tGswClear
  0.00     21.86     0.00        8     0.00     1.58  tGswEncryptZero
  0.00     21.86     0.00        4     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00     21.86     0.00        3     0.00     0.00  TLweSample::~TLweSample()
  0.00     21.86     0.00        3     0.00     0.00  LweSample::LweSample(LweParams const*)
  0.00     21.86     0.00        3     0.00     0.00  LweSample::~LweSample()
  0.00     21.86     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  alloc_LweSample
  0.00     21.86     0.00        3     0.00     0.00  alloc_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_LweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  destroy_LweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  free_LweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  init_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_TLweSample
  0.00     21.86     0.00        2     0.00     0.00  TLweKey::TLweKey(TLweParams const*)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::LweParams(int, double, double)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::~LweParams()
  0.00     21.86     0.00        2     0.00     0.00  delete_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.00  modSwitchFromTorus32
  0.00     21.86     0.00        2     0.00     0.00  new_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.05  torusPolynomialSubMulRFFT
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  TGswParams::TGswParams(int, int, TLweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TGswSample::TGswSample(TLweSample*, TLweSample**, int, int)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::TLweParams(int, int, double, double)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::~TLweParams()
  0.00     21.86     0.00        1     0.00     0.00  FFT_Processor_nayuki::FFT_Processor_nayuki(int)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::LweKey(LweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::~LweKey()
  0.00     21.86     0.00        1     0.00     0.00  TGswKey::TGswKey(TGswParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TLweKey::~TLweKey()
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00     21.86     0.00        1     0.00     0.00  alloc_LweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  delete_LweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_LweParams
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  destroy_LweKey
  0.00     21.86     0.00        1     0.00     0.00  destroy_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  free_LweKey
  0.00     21.86     0.00        1     0.00     0.00  free_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_LweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  init_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  lweKeyGen
  0.00     21.86     0.00        1     0.00     0.00  lwePhase
  0.00     21.86     0.00        1     0.00     0.00  lweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  new_LweKey
  0.00     21.86     0.00        1     0.00     0.00  new_LweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswKey
  0.00     21.86     0.00        1     0.00     0.00  new_TGswParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  new_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  new_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  tLweApproxPhase
  0.00     21.86     0.00        1     0.00     0.00  tLweKeyGen
  0.00     21.86     0.00        1     0.00     0.10  tLwePhase
  0.00     21.86     0.00        1     0.00     0.10  tLweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  torusPolynomialCopy

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.05% of 21.86 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     55.2   12.06    0.00                 fft_transform_reverse [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     26.9    5.87    0.00                 fft_transform [2]
-----------------------------------------------
                                                 <spontaneous>
[3]     17.9    0.00    3.91                 main [3]
                0.00    3.86    1600/1600        tGswExternProduct [4]
                0.03    0.00    8000/8000        tLweCopy [35]
                0.00    0.01       8/8           tGswEncryptZero [39]
                0.00    0.00    1600/1600        tLweAddTo [42]
                0.00    0.00      16/16          tLweSymEncrypt [43]
                0.00    0.00       8/8           tGswClear [44]
                0.00    0.00      24/1744        tLweClear [41]
                0.00    0.00       1/1           tLweSymDecrypt [47]
                0.00    0.00      24/5256        torusPolynomialClear [40]
                0.00    0.00    1600/1600        tLweSubTo [69]
                0.00    0.00    1600/1600        tLweAddMulTo [67]
                0.00    0.00    1600/1600        tLweSubMulTo [68]
                0.00    0.00      24/24          lweClear [72]
                0.00    0.00      16/16          modSwitchToTorus32 [78]
                0.00    0.00      16/16          lweSymEncrypt [77]
                0.00    0.00       3/72277       new_TorusPolynomial [53]
                0.00    0.00       3/3           new_LweSample [91]
                0.00    0.00       3/3           new_TLweSample [92]
                0.00    0.00       3/3           delete_TLweSample [82]
                0.00    0.00       3/3           delete_LweSample [81]
                0.00    0.00       3/72277       delete_TorusPolynomial [52]
                0.00    0.00       2/2           new_IntPolynomial [95]
                0.00    0.00       2/2           modSwitchFromTorus32 [94]
                0.00    0.00       2/2           delete_IntPolynomial [93]
                0.00    0.00       1/1           new_LweParams [116]
                0.00    0.00       1/1           new_TLweParams [121]
                0.00    0.00       1/1           new_TGswParams [118]
                0.00    0.00       1/1           new_LweKey [115]
                0.00    0.00       1/1           new_TLweKey [120]
                0.00    0.00       1/1           new_TGswKey [117]
                0.00    0.00       1/1           new_TGswSample [119]
                0.00    0.00       1/1           lweKeyGen [112]
                0.00    0.00       1/1           tLweKeyGen [124]
                0.00    0.00       1/1           lweSymDecrypt [114]
                0.00    0.00       1/1           delete_TLweKey [102]
                0.00    0.00       1/1           delete_LweKey [100]
                0.00    0.00       1/1           delete_TLweParams [103]
                0.00    0.00       1/1           delete_LweParams [101]
-----------------------------------------------
                0.00    3.86    1600/1600        main [3]
[4]     17.7    0.00    3.86    1600         tGswExternProduct [4]
                0.00    3.81   24000/24000       tLweAddMulRTo [5]
                0.00    0.04    1600/1600        tGswTLweDecompH [33]
                0.00    0.01    1600/1744        tLweClear [41]
                0.00    0.00    1600/1602        new_IntPolynomial_array [63]
                0.00    0.00    1600/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    3.81   24000/24000       tGswExternProduct [4]
[5]     17.4    0.00    3.81   24000         tLweAddMulRTo [5]
                0.01    3.77   72000/72272       torusPolynomialAddMulRFFT [6]
                0.03    0.00   24000/24000       intPolynomialNormSq2 [34]
-----------------------------------------------
                0.00    0.01     272/72272       tLweSymEncryptZero [38]
                0.01    3.77   72000/72272       tLweAddMulRTo [5]
[6]     17.4    0.01    3.78   72272         torusPolynomialAddMulRFFT [6]
                0.00    1.56   72272/72274       TorusPolynomial_fft [7]
                0.00    1.14   72272/72274       IntPolynomial_ifft [9]
                0.00    0.73   72272/72274       TorusPolynomial_ifft [12]
                0.02    0.15   72272/72274       LagrangeHalfCPolynomialMul [17]
                0.00    0.11   72272/72274       new_LagrangeHalfCPolynomial_array [23]
                0.08    0.00   72272/77072       torusPolynomialAddTo [27]
                0.00    0.00   72272/72277       new_TorusPolynomial [53]
                0.00    0.00   72272/72277       delete_TorusPolynomial [52]
                0.00    0.00   72272/72274       delete_LagrangeHalfCPolynomial_array [55]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.56   72272/72274       torusPolynomialAddMulRFFT [6]
[7]      7.1    0.00    1.56   72274         TorusPolynomial_fft [7]
                0.73    0.82   72274/72274       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.00    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.73    0.82   72274/72274       TorusPolynomial_fft [7]
[8]      7.1    0.73    0.82   72274         FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.12    0.12 148017152/148017152     double std::real<double>(std::complex<double> const&) [15]
                0.10    0.07 148017152/148017152     double std::imag<double>(std::complex<double> const&) [16]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [14]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.14   72272/72274       torusPolynomialAddMulRFFT [6]
[9]      5.2    0.00    1.14   72274         IntPolynomial_ifft [9]
                0.49    0.65   72274/72274       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.49    0.65   72274/72274       IntPolynomial_ifft [9]
[10]     5.2    0.49    0.65   72274         FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [14]
                0.04    0.08 37004288/37004288     double std::abs<double>(std::complex<double> const&) [21]
                0.05    0.04 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [25]
                0.03    0.00 37004288/185023488     std::complex<double>::complex(double, double) [19]
-----------------------------------------------
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[11]     3.6    0.79    0.00  216822         FFT_Processor_nayuki::check_alternate_real() [11]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.73   72272/72274       torusPolynomialAddMulRFFT [6]
[12]     3.4    0.00    0.73   72274         TorusPolynomial_ifft [12]
                0.29    0.44   72274/72274       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.00    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.29    0.44   72274/72274       TorusPolynomial_ifft [12]
[13]     3.3    0.29    0.44   72274         FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [14]
                0.03    0.00 37004288/185023488     std::complex<double>::complex(double, double) [19]
-----------------------------------------------
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[14]     2.1    0.45    0.00  216822         FFT_Processor_nayuki::check_conjugate_cplx() [14]
-----------------------------------------------
                0.12    0.12 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[15]     1.1    0.12    0.12 148017152         double std::real<double>(std::complex<double> const&) [15]
                0.12    0.00 148017152/148017152     std::complex<double>::real[abi:cxx11]() const [20]
-----------------------------------------------
                0.10    0.07 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[16]     0.8    0.10    0.07 148017152         double std::imag<double>(std::complex<double> const&) [16]
                0.07    0.00 148017152/148017152     std::complex<double>::imag[abi:cxx11]() const [28]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.02    0.15   72272/72274       torusPolynomialAddMulRFFT [6]
[17]     0.8    0.02    0.15   72274         LagrangeHalfCPolynomialMul [17]
                0.06    0.09 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
-----------------------------------------------
                0.06    0.09 37004288/37004288     LagrangeHalfCPolynomialMul [17]
[18]     0.7    0.06    0.09 37004288         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
                0.07    0.02 37004288/37004288     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [26]
-----------------------------------------------
                0.00    0.00    2048/185023488     FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.03    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.03    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.08    0.00 111012864/185023488     LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [24]
[19]     0.6    0.14    0.00 185023488         std::complex<double>::complex(double, double) [19]
-----------------------------------------------
                0.12    0.00 148017152/148017152     double std::real<double>(std::complex<double> const&) [15]
[20]     0.5    0.12    0.00 148017152         std::complex<double>::real[abi:cxx11]() const [20]
-----------------------------------------------
                0.04    0.08 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[21]     0.5    0.04    0.08 37004288         double std::abs<double>(std::complex<double> const&) [21]
                0.07    0.00 37004288/37004288     std::__complex_abs(double _Complex) [29]
                0.02    0.00 37004288/111012864     std::complex<double>::__rep() const [30]
-----------------------------------------------
                0.00    0.11   72274/72274       new_LagrangeHalfCPolynomial_array [23]
[22]     0.5    0.00    0.11   72274         init_LagrangeHalfCPolynomial_array [22]
                0.02    0.09  216822/216822      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [24]
                0.00    0.00  216822/240904      operator new(unsigned long, void*) [460]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.11   72272/72274       torusPolynomialAddMulRFFT [6]
[23]     0.5    0.00    0.11   72274         new_LagrangeHalfCPolynomial_array [23]
                0.00    0.11   72274/72274       init_LagrangeHalfCPolynomial_array [22]
                0.00    0.00   72274/72274       alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.02    0.09  216822/216822      init_LagrangeHalfCPolynomial_array [22]
[24]     0.5    0.02    0.09  216822         LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [24]
                0.08    0.00 111012864/185023488     std::complex<double>::complex(double, double) [19]
                0.01    0.00  216822/433644      TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.05    0.04 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[25]     0.4    0.05    0.04 37004288         std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [25]
                0.03    0.02 37004288/37004288     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [31]
-----------------------------------------------
                0.07    0.02 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
[26]     0.4    0.07    0.02 37004288         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [26]
                0.02    0.00 37004288/111012864     std::complex<double>::__rep() const [30]
-----------------------------------------------
                0.00    0.00    4800/77072       tLweAddTo [42]
                0.08    0.00   72272/77072       torusPolynomialAddMulRFFT [6]
[27]     0.4    0.08    0.00   77072         torusPolynomialAddTo [27]
-----------------------------------------------
                0.07    0.00 148017152/148017152     double std::imag<double>(std::complex<double> const&) [16]
[28]     0.3    0.07    0.00 148017152         std::complex<double>::imag[abi:cxx11]() const [28]
-----------------------------------------------
                0.07    0.00 37004288/37004288     double std::abs<double>(std::complex<double> const&) [21]
[29]     0.3    0.07    0.00 37004288         std::__complex_abs(double _Complex) [29]
-----------------------------------------------
                0.02    0.00 37004288/111012864     double std::abs<double>(std::complex<double> const&) [21]
                0.02    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [31]
                0.02    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [26]
[30]     0.3    0.06    0.00 111012864         std::complex<double>::__rep() const [30]
-----------------------------------------------
                0.03    0.02 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [25]
[31]     0.2    0.03    0.02 37004288         std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [31]
                0.02    0.00 37004288/111012864     std::complex<double>::__rep() const [30]
-----------------------------------------------
                0.04    0.00    4800/4800        tGswTLweDecompH [33]
[32]     0.2    0.04    0.00    4800         tGswTorus32PolynomialDecompH [32]
-----------------------------------------------
                0.00    0.04    1600/1600        tGswExternProduct [4]
[33]     0.2    0.00    0.04    1600         tGswTLweDecompH [33]
                0.04    0.00    4800/4800        tGswTorus32PolynomialDecompH [32]
-----------------------------------------------
                0.03    0.00   24000/24000       tLweAddMulRTo [5]
[34]     0.1    0.03    0.00   24000         intPolynomialNormSq2 [34]
-----------------------------------------------
                0.03    0.00    8000/8000        main [3]
[35]     0.1    0.03    0.00    8000         tLweCopy [35]
-----------------------------------------------
                                                 <spontaneous>
[36]     0.1    0.02    0.00                 _init [36]
-----------------------------------------------
                0.00    0.00   72274/433644      IntPolynomial_ifft [9]
                0.00    0.00   72274/433644      TorusPolynomial_ifft [12]
                0.00    0.00   72274/433644      TorusPolynomial_fft [7]
                0.01    0.00  216822/433644      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [24]
[37]     0.1    0.01    0.00  433644         TLS wrapper function for fp1024_nayuki [37]
                0.00    0.00  433644/433644      TLS init function for fp1024_nayuki [48]
-----------------------------------------------
                0.00    0.00      16/136         tLweSymEncrypt [43]
                0.00    0.01     120/136         tGswEncryptZero [39]
[38]     0.1    0.00    0.01     136         tLweSymEncryptZero [38]
                0.00    0.01     272/72272       torusPolynomialAddMulRFFT [6]
                0.00    0.00  139264/139280      gaussian32 [51]
                0.00    0.00     272/272         torusPolynomialUniform [71]
-----------------------------------------------
                0.00    0.01       8/8           main [3]
[39]     0.1    0.00    0.01       8         tGswEncryptZero [39]
                0.00    0.01     120/136         tLweSymEncryptZero [38]
-----------------------------------------------
                0.00    0.00      24/5256        main [3]
                0.01    0.00    5232/5256        tLweClear [41]
[40]     0.0    0.01    0.00    5256         torusPolynomialClear [40]
-----------------------------------------------
                0.00    0.00      24/1744        main [3]
                0.00    0.00     120/1744        tGswClear [44]
                0.00    0.01    1600/1744        tGswExternProduct [4]
[41]     0.0    0.00    0.01    1744         tLweClear [41]
                0.01    0.00    5232/5256        torusPolynomialClear [40]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[42]     0.0    0.00    0.00    1600         tLweAddTo [42]
                0.00    0.00    4800/77072       torusPolynomialAddTo [27]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[43]     0.0    0.00    0.00      16         tLweSymEncrypt [43]
                0.00    0.00      16/136         tLweSymEncryptZero [38]
-----------------------------------------------
                0.00    0.00       8/8           main [3]
[44]     0.0    0.00    0.00       8         tGswClear [44]
                0.00    0.00     120/1744        tLweClear [41]
-----------------------------------------------
                0.00    0.00       2/2           tLwePhase [46]
[45]     0.0    0.00    0.00       2         torusPolynomialSubMulRFFT [45]
                0.00    0.00       2/72274       TorusPolynomial_fft [7]
                0.00    0.00       2/72274       IntPolynomial_ifft [9]
                0.00    0.00       2/72274       TorusPolynomial_ifft [12]
                0.00    0.00       2/72274       LagrangeHalfCPolynomialMul [17]
                0.00    0.00       2/72274       new_LagrangeHalfCPolynomial_array [23]
                0.00    0.00       2/72277       new_TorusPolynomial [53]
                0.00    0.00       2/4802        torusPolynomialSubTo [58]
                0.00    0.00       2/72277       delete_TorusPolynomial [52]
                0.00    0.00       2/72274       delete_LagrangeHalfCPolynomial_array [55]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[46]     0.0    0.00    0.00       1         tLwePhase [46]
                0.00    0.00       2/2           torusPolynomialSubMulRFFT [45]
                0.00    0.00       1/1           torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[47]     0.0    0.00    0.00       1         tLweSymDecrypt [47]
                0.00    0.00       1/1           tLwePhase [46]
                0.00    0.00       1/1           tLweApproxPhase [123]
-----------------------------------------------
                0.00    0.00  433644/433644      TLS wrapper function for fp1024_nayuki [37]
[48]     0.0    0.00    0.00  433644         TLS init function for fp1024_nayuki [48]
                0.00    0.00       1/1           FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
-----------------------------------------------
                0.00    0.00       1/1           TLS init function for fp1024_nayuki [48]
[49]     0.0    0.00    0.00       1         FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.00    0.00    2048/185023488     std::complex<double>::complex(double, double) [19]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[50]     0.0    0.00    0.00  139280         dtot32 [50]
-----------------------------------------------
                0.00    0.00      16/139280      lweSymEncrypt [77]
                0.00    0.00  139264/139280      tLweSymEncryptZero [38]
[51]     0.0    0.00    0.00  139280         gaussian32 [51]
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [465]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
                0.00    0.00  139280/139280      dtot32 [50]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[52]     0.0    0.00    0.00   72277         delete_TorusPolynomial [52]
                0.00    0.00   72277/72286       TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[53]     0.0    0.00    0.00   72277         new_TorusPolynomial [53]
                0.00    0.00   72277/72331       TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00   72274/72274       new_LagrangeHalfCPolynomial_array [23]
[54]     0.0    0.00    0.00   72274         alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.00   72272/72274       torusPolynomialAddMulRFFT [6]
[55]     0.0    0.00    0.00   72274         delete_LagrangeHalfCPolynomial_array [55]
                0.00    0.00   72274/72274       destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00   72274/72274       free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[56]     0.0    0.00    0.00   72274         destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00  216822/216822      LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [461]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[57]     0.0    0.00    0.00   72274         free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00       2/4802        torusPolynomialSubMulRFFT [45]
                0.00    0.00    4800/4802        tLweSubTo [69]
[58]     0.0    0.00    0.00    4802         torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweAddMulTo [67]
[59]     0.0    0.00    0.00    4800         torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweSubMulTo [68]
[60]     0.0    0.00    0.00    4800         torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[61]     0.0    0.00    0.00    1602         alloc_IntPolynomial_array [61]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[62]     0.0    0.00    0.00    1602         init_IntPolynomial_array [62]
                0.00    0.00   24004/240904      operator new(unsigned long, void*) [460]
                0.00    0.00   24004/24006       IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       2/1602        TLweKey::TLweKey(TLweParams const*) [480]
                0.00    0.00    1600/1602        tGswExternProduct [4]
[63]     0.0    0.00    0.00    1602         new_IntPolynomial_array [63]
                0.00    0.00    1602/1602        alloc_IntPolynomial_array [61]
                0.00    0.00    1602/1602        init_IntPolynomial_array [62]
-----------------------------------------------
                0.00    0.00       1/1601        TLweKey::~TLweKey() [505]
                0.00    0.00    1600/1601        tGswExternProduct [4]
[64]     0.0    0.00    0.00    1601         delete_IntPolynomial_array [64]
                0.00    0.00    1601/1601        destroy_IntPolynomial_array [65]
                0.00    0.00    1601/1601        free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[65]     0.0    0.00    0.00    1601         destroy_IntPolynomial_array [65]
                0.00    0.00   24002/24004       IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[66]     0.0    0.00    0.00    1601         free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[67]     0.0    0.00    0.00    1600         tLweAddMulTo [67]
                0.00    0.00    4800/4800        torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[68]     0.0    0.00    0.00    1600         tLweSubMulTo [68]
                0.00    0.00    4800/4800        torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[69]     0.0    0.00    0.00    1600         tLweSubTo [69]
                0.00    0.00    4800/4802        torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00       1/1025        lweSymDecrypt [114]
                0.00    0.00    1024/1025        tLweApproxPhase [123]
[70]     0.0    0.00    0.00    1025         approxPhase [70]
-----------------------------------------------
                0.00    0.00     272/272         tLweSymEncryptZero [38]
[71]     0.0    0.00    0.00     272         torusPolynomialUniform [71]
                0.00    0.00  278528/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
-----------------------------------------------
                0.00    0.00      24/24          main [3]
[72]     0.0    0.00    0.00      24         lweClear [72]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[73]     0.0    0.00    0.00      18         alloc_TorusPolynomial_array [73]
-----------------------------------------------
                0.00    0.00       3/18          new_TLweSample [92]
                0.00    0.00      15/18          init_TLweSample_array [111]
[74]     0.0    0.00    0.00      18         init_TLweSample [74]
                0.00    0.00      18/240904      operator new(unsigned long, void*) [460]
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [473]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[75]     0.0    0.00    0.00      18         init_TorusPolynomial_array [75]
                0.00    0.00      54/240904      operator new(unsigned long, void*) [460]
                0.00    0.00      54/72331       TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [473]
[76]     0.0    0.00    0.00      18         new_TorusPolynomial_array [76]
                0.00    0.00      18/18          alloc_TorusPolynomial_array [73]
                0.00    0.00      18/18          init_TorusPolynomial_array [75]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[77]     0.0    0.00    0.00      16         lweSymEncrypt [77]
                0.00    0.00    7696/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
                0.00    0.00      16/139280      gaussian32 [51]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[78]     0.0    0.00    0.00      16         modSwitchToTorus32 [78]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[79]     0.0    0.00    0.00       3         alloc_LweSample [79]
-----------------------------------------------
                0.00    0.00       3/3           new_TLweSample [92]
[80]     0.0    0.00    0.00       3         alloc_TLweSample [80]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[81]     0.0    0.00    0.00       3         delete_LweSample [81]
                0.00    0.00       3/3           destroy_LweSample [84]
                0.00    0.00       3/3           free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[82]     0.0    0.00    0.00       3         delete_TLweSample [82]
                0.00    0.00       3/3           destroy_TLweSample [85]
                0.00    0.00       3/3           free_TLweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           TLweSample::~TLweSample() [475]
[83]     0.0    0.00    0.00       3         delete_TorusPolynomial_array [83]
                0.00    0.00       3/3           destroy_TorusPolynomial_array [86]
                0.00    0.00       3/3           free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[84]     0.0    0.00    0.00       3         destroy_LweSample [84]
                0.00    0.00       3/3           LweSample::~LweSample() [477]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [82]
[85]     0.0    0.00    0.00       3         destroy_TLweSample [85]
                0.00    0.00       3/3           TLweSample::~TLweSample() [475]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[86]     0.0    0.00    0.00       3         destroy_TorusPolynomial_array [86]
                0.00    0.00       9/72286       TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[87]     0.0    0.00    0.00       3         free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [82]
[88]     0.0    0.00    0.00       3         free_TLweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[89]     0.0    0.00    0.00       3         free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[90]     0.0    0.00    0.00       3         init_LweSample [90]
                0.00    0.00       3/240904      operator new(unsigned long, void*) [460]
                0.00    0.00       3/3           LweSample::LweSample(LweParams const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[91]     0.0    0.00    0.00       3         new_LweSample [91]
                0.00    0.00       3/3           alloc_LweSample [79]
                0.00    0.00       3/3           init_LweSample [90]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[92]     0.0    0.00    0.00       3         new_TLweSample [92]
                0.00    0.00       3/3           alloc_TLweSample [80]
                0.00    0.00       3/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[93]     0.0    0.00    0.00       2         delete_IntPolynomial [93]
                0.00    0.00       2/24004       IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[94]     0.0    0.00    0.00       2         modSwitchFromTorus32 [94]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[95]     0.0    0.00    0.00       2         new_IntPolynomial [95]
                0.00    0.00       2/24006       IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[96]     0.0    0.00    0.00       1         alloc_LweKey [96]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[97]     0.0    0.00    0.00       1         alloc_TGswSample [97]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[98]     0.0    0.00    0.00       1         alloc_TLweKey [98]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[99]     0.0    0.00    0.00       1         alloc_TLweSample_array [99]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[100]    0.0    0.00    0.00       1         delete_LweKey [100]
                0.00    0.00       1/1           free_LweKey [106]
                0.00    0.00       1/1           destroy_LweKey [104]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[101]    0.0    0.00    0.00       1         delete_LweParams [101]
                0.00    0.00       1/2           LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[102]    0.0    0.00    0.00       1         delete_TLweKey [102]
                0.00    0.00       1/1           destroy_TLweKey [105]
                0.00    0.00       1/1           free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[103]    0.0    0.00    0.00       1         delete_TLweParams [103]
                0.00    0.00       1/1           TLweParams::~TLweParams() [501]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[104]    0.0    0.00    0.00       1         destroy_LweKey [104]
                0.00    0.00       1/1           LweKey::~LweKey() [503]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[105]    0.0    0.00    0.00       1         destroy_TLweKey [105]
                0.00    0.00       1/1           TLweKey::~TLweKey() [505]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[106]    0.0    0.00    0.00       1         free_LweKey [106]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[107]    0.0    0.00    0.00       1         free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[108]    0.0    0.00    0.00       1         init_LweKey [108]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [460]
                0.00    0.00       1/1           LweKey::LweKey(LweParams const*) [502]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[109]    0.0    0.00    0.00       1         init_TGswSample [109]
                0.00    0.00       1/1           new_TLweSample_array [122]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [460]
                0.00    0.00       1/1           TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[110]    0.0    0.00    0.00       1         init_TLweKey [110]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [460]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [480]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[111]    0.0    0.00    0.00       1         init_TLweSample_array [111]
                0.00    0.00      15/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[112]    0.0    0.00    0.00       1         lweKeyGen [112]
                0.00    0.00     481/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           lweSymDecrypt [114]
[113]    0.0    0.00    0.00       1         lwePhase [113]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[114]    0.0    0.00    0.00       1         lweSymDecrypt [114]
                0.00    0.00       1/1           lwePhase [113]
                0.00    0.00       1/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[115]    0.0    0.00    0.00       1         new_LweKey [115]
                0.00    0.00       1/1           alloc_LweKey [96]
                0.00    0.00       1/1           init_LweKey [108]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[116]    0.0    0.00    0.00       1         new_LweParams [116]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[117]    0.0    0.00    0.00       1         new_TGswKey [117]
                0.00    0.00       1/1           TGswKey::TGswKey(TGswParams const*) [504]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[118]    0.0    0.00    0.00       1         new_TGswParams [118]
                0.00    0.00       1/1           TGswParams::TGswParams(int, int, TLweParams const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[119]    0.0    0.00    0.00       1         new_TGswSample [119]
                0.00    0.00       1/1           alloc_TGswSample [97]
                0.00    0.00       1/1           init_TGswSample [109]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[120]    0.0    0.00    0.00       1         new_TLweKey [120]
                0.00    0.00       1/1           alloc_TLweKey [98]
                0.00    0.00       1/1           init_TLweKey [110]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[121]    0.0    0.00    0.00       1         new_TLweParams [121]
                0.00    0.00       1/1           TLweParams::TLweParams(int, int, double, double) [500]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[122]    0.0    0.00    0.00       1         new_TLweSample_array [122]
                0.00    0.00       1/1           alloc_TLweSample_array [99]
                0.00    0.00       1/1           init_TLweSample_array [111]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[123]    0.0    0.00    0.00       1         tLweApproxPhase [123]
                0.00    0.00    1024/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[124]    0.0    0.00    0.00       1         tLweKeyGen [124]
                0.00    0.00    2048/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           tLwePhase [46]
[125]    0.0    0.00    0.00       1         torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00  708588/1570467     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00  861879/1570467     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
[449]    0.0    0.00    0.00 1570467         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [451]
-----------------------------------------------
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [451]
[450]    0.0    0.00    0.00 1570467         std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1570467/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
[451]    0.0    0.00    0.00 1570467         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [451]
                0.00    0.00 1570467/1570467     std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1436856/1436856     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
[452]    0.0    0.00    0.00 1436856         std::uniform_int_distribution<int>::param_type::a() const [452]
-----------------------------------------------
                0.00    0.00  718428/718428      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
[453]    0.0    0.00    0.00  718428         std::uniform_int_distribution<int>::param_type::b() const [453]
-----------------------------------------------
                0.00    0.00  708588/708588      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
[454]    0.0    0.00    0.00  708588         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [454]
-----------------------------------------------
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00  429675/429679      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
[455]    0.0    0.00    0.00  429679         std::uniform_int_distribution<int>::param_type::param_type(int, int) [455]
-----------------------------------------------
                0.00    0.00  354294/354294      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
[456]    0.0    0.00    0.00  354294         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [456]
                0.00    0.00  354294/354294      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
-----------------------------------------------
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [456]
[457]    0.0    0.00    0.00  354294         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00  708588/708588      std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [454]
                0.00    0.00  708588/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
-----------------------------------------------
                0.00    0.00     481/288753      lweKeyGen [112]
                0.00    0.00    2048/288753      tLweKeyGen [124]
                0.00    0.00    7696/288753      lweSymEncrypt [77]
                0.00    0.00  278528/288753      torusPolynomialUniform [71]
[458]    0.0    0.00    0.00  288753         int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
-----------------------------------------------
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
[459]    0.0    0.00    0.00  288753+429675  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
                0.00    0.00 1436856/1436856     std::uniform_int_distribution<int>::param_type::a() const [452]
                0.00    0.00  861879/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00  718428/718428      std::uniform_int_distribution<int>::param_type::b() const [453]
                0.00    0.00  429675/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [455]
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
-----------------------------------------------
                0.00    0.00       1/240904      init_LweKey [108]
                0.00    0.00       1/240904      init_TGswSample [109]
                0.00    0.00       1/240904      init_TLweKey [110]
                0.00    0.00       3/240904      init_LweSample [90]
                0.00    0.00      18/240904      init_TLweSample [74]
                0.00    0.00      54/240904      init_TorusPolynomial_array [75]
                0.00    0.00   24004/240904      init_IntPolynomial_array [62]
                0.00    0.00  216822/240904      init_LagrangeHalfCPolynomial_array [22]
[460]    0.0    0.00    0.00  240904         operator new(unsigned long, void*) [460]
-----------------------------------------------
                0.00    0.00  216822/216822      destroy_LagrangeHalfCPolynomial_array [56]
[461]    0.0    0.00    0.00  216822         LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
[462]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::mean() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
[463]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::stddev() const [463]
-----------------------------------------------
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [465]
[464]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::param_type(double, double) [464]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[465]    0.0    0.00    0.00  139280         std::normal_distribution<double>::normal_distribution(double, double) [465]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::param_type(double, double) [464]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[466]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
[467]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [456]
                0.00    0.00  139280/139280      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [468]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::stddev() const [463]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::mean() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
[468]    0.0    0.00    0.00  139280         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [468]
-----------------------------------------------
                0.00    0.00      54/72331       init_TorusPolynomial_array [75]
                0.00    0.00   72277/72331       new_TorusPolynomial [53]
[469]    0.0    0.00    0.00   72331         TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00       9/72286       destroy_TorusPolynomial_array [86]
                0.00    0.00   72277/72286       delete_TorusPolynomial [52]
[470]    0.0    0.00    0.00   72286         TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/24006       new_IntPolynomial [95]
                0.00    0.00   24004/24006       init_IntPolynomial_array [62]
[471]    0.0    0.00    0.00   24006         IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       2/24004       delete_IntPolynomial [93]
                0.00    0.00   24002/24004       destroy_IntPolynomial_array [65]
[472]    0.0    0.00    0.00   24004         IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00      18/18          init_TLweSample [74]
[473]    0.0    0.00    0.00      18         TLweSample::TLweSample(TLweParams const*) [473]
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
-----------------------------------------------
                0.00    0.00       1/4           lweKeyGen [112]
                0.00    0.00       1/4           tLweKeyGen [124]
                0.00    0.00       2/4           __static_initialization_and_destruction_0(int, int) [492]
[474]    0.0    0.00    0.00       4         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [455]
-----------------------------------------------
                0.00    0.00       3/3           destroy_TLweSample [85]
[475]    0.0    0.00    0.00       3         TLweSample::~TLweSample() [475]
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
-----------------------------------------------
                0.00    0.00       3/3           init_LweSample [90]
[476]    0.0    0.00    0.00       3         LweSample::LweSample(LweParams const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           destroy_LweSample [84]
[477]    0.0    0.00    0.00       3         LweSample::~LweSample() [477]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
[478]    0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
[479]    0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       1/2           TGswKey::TGswKey(TGswParams const*) [504]
                0.00    0.00       1/2           init_TLweKey [110]
[480]    0.0    0.00    0.00       2         TLweKey::TLweKey(TLweParams const*) [480]
                0.00    0.00       2/1602        new_IntPolynomial_array [63]
-----------------------------------------------
                0.00    0.00       1/2           new_LweParams [116]
                0.00    0.00       1/2           TLweParams::TLweParams(int, int, double, double) [500]
[481]    0.0    0.00    0.00       2         LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/2           delete_LweParams [101]
                0.00    0.00       1/2           TLweParams::~TLweParams() [501]
[482]    0.0    0.00    0.00       2         LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [522]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_bootsNAND [513]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKeyFFT [518]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKey [517]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_lweKeyGen [521]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16renormalizeKSkeyP15LweKeySwitchKeyPK6LweKeyPKi [509]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_debug_accum_key [514]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN19LweBootstrappingKeyC2EPK9LweParamsPK10TGswParamsPK10TLweParamsS2_P10TGswSampleP15LweKeySwitchKey [511]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN13IntPolynomialC2Ei [510]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [516]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
                0.00    0.00       2/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_die_dramatically [515]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK10StdIstream7getLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [512]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSampleFFT [520]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSample [519]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_tLweKeyGen [523]
[497]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswParams [118]
[498]    0.0    0.00    0.00       1         TGswParams::TGswParams(int, int, TLweParams const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[499]    0.0    0.00    0.00       1         TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweParams [121]
[500]    0.0    0.00    0.00       1         TLweParams::TLweParams(int, int, double, double) [500]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweParams [103]
[501]    0.0    0.00    0.00       1         TLweParams::~TLweParams() [501]
                0.00    0.00       1/2           LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           init_LweKey [108]
[502]    0.0    0.00    0.00       1         LweKey::LweKey(LweParams const*) [502]
-----------------------------------------------
                0.00    0.00       1/1           destroy_LweKey [104]
[503]    0.0    0.00    0.00       1         LweKey::~LweKey() [503]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswKey [117]
[504]    0.0    0.00    0.00       1         TGswKey::TGswKey(TGswParams const*) [504]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [480]
-----------------------------------------------
                0.00    0.00       1/1           destroy_TLweKey [105]
[505]    0.0    0.00    0.00       1         TLweKey::~TLweKey() [505]
                0.00    0.00       1/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
[506]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
[507]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [492]
[508]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [9] IntPolynomial_ifft    [506] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [51] gaussian32
  [17] LagrangeHalfCPolynomialMul [507] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [62] init_IntPolynomial_array
   [7] TorusPolynomial_fft   [508] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [22] init_LagrangeHalfCPolynomial_array
  [12] TorusPolynomial_ifft  [449] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [108] init_LweKey
 [483] __static_initialization_and_destruction_0(int, int) [19] std::complex<double>::complex(double, double) [90] init_LweSample
 [484] __static_initialization_and_destruction_0(int, int) [31] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [109] init_TGswSample
 [485] __static_initialization_and_destruction_0(int, int) [26] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [110] init_TLweKey
 [486] __static_initialization_and_destruction_0(int, int) [450] std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [74] init_TLweSample
 [487] __static_initialization_and_destruction_0(int, int) [478] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [111] init_TLweSample_array
 [488] __static_initialization_and_destruction_0(int, int) [451] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [75] init_TorusPolynomial_array
 [489] __static_initialization_and_destruction_0(int, int) [479] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [34] intPolynomialNormSq2
 [490] __static_initialization_and_destruction_0(int, int) [468] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [72] lweClear
 [491] __static_initialization_and_destruction_0(int, int) [456] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [112] lweKeyGen
 [492] __static_initialization_and_destruction_0(int, int) [29] std::__complex_abs(double _Complex) [113] lwePhase
 [493] __static_initialization_and_destruction_0(int, int) [457] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [114] lweSymDecrypt
 [494] __static_initialization_and_destruction_0(int, int) [21] double std::abs<double>(std::complex<double> const&) [77] lweSymEncrypt
 [495] __static_initialization_and_destruction_0(int, int) [16] double std::imag<double>(std::complex<double> const&) [94] modSwitchFromTorus32
 [496] __static_initialization_and_destruction_0(int, int) [15] double std::real<double>(std::complex<double> const&) [78] modSwitchToTorus32
 [497] __static_initialization_and_destruction_0(int, int) [25] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [95] new_IntPolynomial
 [498] TGswParams::TGswParams(int, int, TLweParams const*) [18] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [63] new_IntPolynomial_array
 [499] TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [48] TLS init function for fp1024_nayuki [23] new_LagrangeHalfCPolynomial_array
 [500] TLweParams::TLweParams(int, int, double, double) [37] TLS wrapper function for fp1024_nayuki [115] new_LweKey
 [501] TLweParams::~TLweParams() [460] operator new(unsigned long, void*) [116] new_LweParams
 [473] TLweSample::TLweSample(TLweParams const*) [36] _init [91] new_LweSample
 [475] TLweSample::~TLweSample() [61] alloc_IntPolynomial_array [117] new_TGswKey
 [471] IntPolynomial::IntPolynomial(int) [54] alloc_LagrangeHalfCPolynomial_array [118] new_TGswParams
 [472] IntPolynomial::~IntPolynomial() [96] alloc_LweKey [119] new_TGswSample
 [469] TorusPolynomial::TorusPolynomial(int) [79] alloc_LweSample [120] new_TLweKey
 [470] TorusPolynomial::~TorusPolynomial() [97] alloc_TGswSample [121] new_TLweParams
  [10] FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [98] alloc_TLweKey [92] new_TLweSample
  [11] FFT_Processor_nayuki::check_alternate_real() [80] alloc_TLweSample [122] new_TLweSample_array
  [14] FFT_Processor_nayuki::check_conjugate_cplx() [99] alloc_TLweSample_array [53] new_TorusPolynomial
   [8] FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [73] alloc_TorusPolynomial_array [76] new_TorusPolynomial_array
  [13] FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [70] approxPhase [44] tGswClear
  [49] FFT_Processor_nayuki::FFT_Processor_nayuki(int) [93] delete_IntPolynomial [39] tGswEncryptZero
  [24] LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [64] delete_IntPolynomial_array [4] tGswExternProduct
 [461] LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [55] delete_LagrangeHalfCPolynomial_array [33] tGswTLweDecompH
 [502] LweKey::LweKey(LweParams const*) [100] delete_LweKey [32] tGswTorus32PolynomialDecompH
 [503] LweKey::~LweKey()     [101] delete_LweParams        [5] tLweAddMulRTo
 [504] TGswKey::TGswKey(TGswParams const*) [81] delete_LweSample [67] tLweAddMulTo
 [480] TLweKey::TLweKey(TLweParams const*) [102] delete_TLweKey [42] tLweAddTo
 [505] TLweKey::~TLweKey()   [103] delete_TLweParams     [123] tLweApproxPhase
 [481] LweParams::LweParams(int, double, double) [82] delete_TLweSample [41] tLweClear
 [482] LweParams::~LweParams() [52] delete_TorusPolynomial [35] tLweCopy
 [476] LweSample::LweSample(LweParams const*) [83] delete_TorusPolynomial_array [124] tLweKeyGen
 [477] LweSample::~LweSample() [65] destroy_IntPolynomial_array [46] tLwePhase
 [462] std::normal_distribution<double>::param_type::mean() const [56] destroy_LagrangeHalfCPolynomial_array [68] tLweSubMulTo
 [463] std::normal_distribution<double>::param_type::stddev() const [104] destroy_LweKey [69] tLweSubTo
 [452] std::uniform_int_distribution<int>::param_type::a() const [84] destroy_LweSample [47] tLweSymDecrypt
 [453] std::uniform_int_distribution<int>::param_type::b() const [105] destroy_TLweKey [43] tLweSymEncrypt
  [28] std::complex<double>::imag[abi:cxx11]() const [85] destroy_TLweSample [38] tLweSymEncryptZero
  [20] std::complex<double>::real[abi:cxx11]() const [86] destroy_TorusPolynomial_array [6] torusPolynomialAddMulRFFT
  [30] std::complex<double>::__rep() const [50] dtot32    [59] torusPolynomialAddMulZTo
 [464] std::normal_distribution<double>::param_type::param_type(double, double) [2] fft_transform [27] torusPolynomialAddTo
 [465] std::normal_distribution<double>::normal_distribution(double, double) [1] fft_transform_reverse [40] torusPolynomialClear
 [466] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [66] free_IntPolynomial_array [125] torusPolynomialCopy
 [467] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [57] free_LagrangeHalfCPolynomial_array [45] torusPolynomialSubMulRFFT
 [455] std::uniform_int_distribution<int>::param_type::param_type(int, int) [106] free_LweKey [60] torusPolynomialSubMulZTo
 [474] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [87] free_LweSample [58] torusPolynomialSubTo
 [458] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [107] free_TLweKey [71] torusPolynomialUniform
 [459] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [88] free_TLweSample
 [454] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [89] free_TorusPolynomial_array
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 55.17     12.06    12.06                             fft_transform_reverse
 26.85     17.93     5.87                             fft_transform
  3.61     18.72     0.79   216822     0.00     0.00  FFT_Processor_nayuki::check_alternate_real()
  3.34     19.45     0.73    72274     0.01     0.02  FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*)
  2.24     19.94     0.49    72274     0.01     0.02  FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*)
  2.06     20.39     0.45   216822     0.00     0.00  FFT_Processor_nayuki::check_conjugate_cplx()
  1.33     20.68     0.29    72274     0.00     0.01  FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*)
  0.62     20.82     0.14 185023488     0.00     0.00  std::complex<double>::complex(double, double)
  0.55     20.93     0.12 148017152     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.55     21.05     0.12 148017152     0.00     0.00  double std::real<double>(std::complex<double> const&)
  0.48     21.16     0.10 148017152     0.00     0.00  double std::imag<double>(std::complex<double> const&)
  0.37     21.24     0.08    77072     0.00     0.00  torusPolynomialAddTo
  0.32     21.31     0.07 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.30     21.38     0.07 148017152     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.30     21.44     0.07 37004288     0.00     0.00  std::__complex_abs(double _Complex)
  0.27     21.50     0.06 37004288     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.25     21.55     0.06 111012864     0.00     0.00  std::complex<double>::__rep() const
  0.23     21.61     0.05 37004288     0.00     0.00  std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.18     21.64     0.04     4800     0.01     0.01  tGswTorus32PolynomialDecompH
  0.16     21.68     0.04 37004288     0.00     0.00  double std::abs<double>(std::complex<double> const&)
  0.14     21.71     0.03    24000     0.00     0.00  intPolynomialNormSq2
  0.14     21.74     0.03     8000     0.00     0.00  tLweCopy
  0.11     21.77     0.03 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.09     21.79     0.02   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int)
  0.09     21.80     0.02    72274     0.00     0.00  LagrangeHalfCPolynomialMul
  0.09     21.82     0.02                             _init
  0.07     21.84     0.01   433644     0.00     0.00  TLS wrapper function for fp1024_nayuki
  0.05     21.85     0.01    72272     0.00     0.05  torusPolynomialAddMulRFFT
  0.05     21.86     0.01     5256     0.00     0.00  torusPolynomialClear
  0.00     21.86     0.00  1570467     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.00     21.86     0.00  1570467     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
  0.00     21.86     0.00  1570467     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00     21.86     0.00  1436856     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00     21.86     0.00   718428     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00     21.86     0.00   708588     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.00     21.86     0.00   433644     0.00     0.00  TLS init function for fp1024_nayuki
  0.00     21.86     0.00   429679     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00     21.86     0.00   354294     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.00     21.86     0.00   354294     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00     21.86     0.00   240904     0.00     0.00  operator new(unsigned long, void*)
  0.00     21.86     0.00   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL()
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&)
  0.00     21.86     0.00   139280     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  dtot32
  0.00     21.86     0.00   139280     0.00     0.00  gaussian32
  0.00     21.86     0.00    72331     0.00     0.00  TorusPolynomial::TorusPolynomial(int)
  0.00     21.86     0.00    72286     0.00     0.00  TorusPolynomial::~TorusPolynomial()
  0.00     21.86     0.00    72277     0.00     0.00  delete_TorusPolynomial
  0.00     21.86     0.00    72277     0.00     0.00  new_TorusPolynomial
  0.00     21.86     0.00    72274     0.00     0.02  IntPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.02  TorusPolynomial_fft
  0.00     21.86     0.00    72274     0.00     0.01  TorusPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.00  alloc_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  delete_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  destroy_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  free_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  init_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  new_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    24006     0.00     0.00  IntPolynomial::IntPolynomial(int)
  0.00     21.86     0.00    24004     0.00     0.00  IntPolynomial::~IntPolynomial()
  0.00     21.86     0.00    24000     0.00     0.16  tLweAddMulRTo
  0.00     21.86     0.00     4802     0.00     0.00  torusPolynomialSubTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialAddMulZTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialSubMulZTo
  0.00     21.86     0.00     1744     0.00     0.01  tLweClear
  0.00     21.86     0.00     1602     0.00     0.00  alloc_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  init_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  new_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  delete_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  destroy_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  free_IntPolynomial_array
  0.00     21.86     0.00     1600     0.00     2.41  tGswExternProduct
  0.00     21.86     0.00     1600     0.00     0.03  tGswTLweDecompH
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubTo
  0.00     21.86     0.00     1025     0.00     0.00  approxPhase
  0.00     21.86     0.00      272     0.00     0.00  torusPolynomialUniform
  0.00     21.86     0.00      136     0.00     0.11  tLweSymEncryptZero
  0.00     21.86     0.00       24     0.00     0.00  lweClear
  0.00     21.86     0.00       18     0.00     0.00  TLweSample::TLweSample(TLweParams const*)
  0.00     21.86     0.00       18     0.00     0.00  alloc_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  init_TLweSample
  0.00     21.86     0.00       18     0.00     0.00  init_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  new_TorusPolynomial_array
  0.00     21.86     0.00       16     0.00     0.00  lweSymEncrypt
  0.00     21.86     0.00       16     0.00     0.00  modSwitchToTorus32
  0.00     21.86     0.00       16     0.00     0.11  tLweSymEncrypt
  0.00     21.86     0.00        8     0.00     0.09  tGswClear
  0.00     21.86     0.00        8     0.00     1.58  tGswEncryptZero
  0.00     21.86     0.00        4     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00     21.86     0.00        3     0.00     0.00  TLweSample::~TLweSample()
  0.00     21.86     0.00        3     0.00     0.00  LweSample::LweSample(LweParams const*)
  0.00     21.86     0.00        3     0.00     0.00  LweSample::~LweSample()
  0.00     21.86     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  alloc_LweSample
  0.00     21.86     0.00        3     0.00     0.00  alloc_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_LweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  destroy_LweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  free_LweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  init_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_TLweSample
  0.00     21.86     0.00        2     0.00     0.00  TLweKey::TLweKey(TLweParams const*)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::LweParams(int, double, double)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::~LweParams()
  0.00     21.86     0.00        2     0.00     0.00  delete_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.00  modSwitchFromTorus32
  0.00     21.86     0.00        2     0.00     0.00  new_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.05  torusPolynomialSubMulRFFT
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  TGswParams::TGswParams(int, int, TLweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TGswSample::TGswSample(TLweSample*, TLweSample**, int, int)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::TLweParams(int, int, double, double)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::~TLweParams()
  0.00     21.86     0.00        1     0.00     0.00  FFT_Processor_nayuki::FFT_Processor_nayuki(int)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::LweKey(LweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::~LweKey()
  0.00     21.86     0.00        1     0.00     0.00  TGswKey::TGswKey(TGswParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TLweKey::~TLweKey()
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00     21.86     0.00        1     0.00     0.00  alloc_LweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  delete_LweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_LweParams
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  destroy_LweKey
  0.00     21.86     0.00        1     0.00     0.00  destroy_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  free_LweKey
  0.00     21.86     0.00        1     0.00     0.00  free_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_LweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  init_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  lweKeyGen
  0.00     21.86     0.00        1     0.00     0.00  lwePhase
  0.00     21.86     0.00        1     0.00     0.00  lweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  new_LweKey
  0.00     21.86     0.00        1     0.00     0.00  new_LweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswKey
  0.00     21.86     0.00        1     0.00     0.00  new_TGswParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  new_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  new_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  tLweApproxPhase
  0.00     21.86     0.00        1     0.00     0.00  tLweKeyGen
  0.00     21.86     0.00        1     0.00     0.10  tLwePhase
  0.00     21.86     0.00        1     0.00     0.10  tLweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  torusPolynomialCopy

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.05% of 21.86 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     55.2   12.06    0.00                 fft_transform_reverse [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     26.9    5.87    0.00                 fft_transform [2]
-----------------------------------------------
                                                 <spontaneous>
[3]     17.9    0.00    3.91                 main [3]
                0.00    3.86    1600/1600        tGswExternProduct [4]
                0.03    0.00    8000/8000        tLweCopy [35]
                0.00    0.01       8/8           tGswEncryptZero [39]
                0.00    0.00    1600/1600        tLweAddTo [42]
                0.00    0.00      16/16          tLweSymEncrypt [43]
                0.00    0.00       8/8           tGswClear [44]
                0.00    0.00      24/1744        tLweClear [41]
                0.00    0.00       1/1           tLweSymDecrypt [47]
                0.00    0.00      24/5256        torusPolynomialClear [40]
                0.00    0.00    1600/1600        tLweSubTo [69]
                0.00    0.00    1600/1600        tLweAddMulTo [67]
                0.00    0.00    1600/1600        tLweSubMulTo [68]
                0.00    0.00      24/24          lweClear [72]
                0.00    0.00      16/16          modSwitchToTorus32 [78]
                0.00    0.00      16/16          lweSymEncrypt [77]
                0.00    0.00       3/72277       new_TorusPolynomial [53]
                0.00    0.00       3/3           new_LweSample [91]
                0.00    0.00       3/3           new_TLweSample [92]
                0.00    0.00       3/3           delete_TLweSample [82]
                0.00    0.00       3/3           delete_LweSample [81]
                0.00    0.00       3/72277       delete_TorusPolynomial [52]
                0.00    0.00       2/2           new_IntPolynomial [95]
                0.00    0.00       2/2           modSwitchFromTorus32 [94]
                0.00    0.00       2/2           delete_IntPolynomial [93]
                0.00    0.00       1/1           new_LweParams [116]
                0.00    0.00       1/1           new_TLweParams [121]
                0.00    0.00       1/1           new_TGswParams [118]
                0.00    0.00       1/1           new_LweKey [115]
                0.00    0.00       1/1           new_TLweKey [120]
                0.00    0.00       1/1           new_TGswKey [117]
                0.00    0.00       1/1           new_TGswSample [119]
                0.00    0.00       1/1           lweKeyGen [112]
                0.00    0.00       1/1           tLweKeyGen [124]
                0.00    0.00       1/1           lweSymDecrypt [114]
                0.00    0.00       1/1           delete_TLweKey [102]
                0.00    0.00       1/1           delete_LweKey [100]
                0.00    0.00       1/1           delete_TLweParams [103]
                0.00    0.00       1/1           delete_LweParams [101]
-----------------------------------------------
                0.00    3.86    1600/1600        main [3]
[4]     17.7    0.00    3.86    1600         tGswExternProduct [4]
                0.00    3.81   24000/24000       tLweAddMulRTo [5]
                0.00    0.04    1600/1600        tGswTLweDecompH [33]
                0.00    0.01    1600/1744        tLweClear [41]
                0.00    0.00    1600/1602        new_IntPolynomial_array [63]
                0.00    0.00    1600/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    3.81   24000/24000       tGswExternProduct [4]
[5]     17.4    0.00    3.81   24000         tLweAddMulRTo [5]
                0.01    3.77   72000/72272       torusPolynomialAddMulRFFT [6]
                0.03    0.00   24000/24000       intPolynomialNormSq2 [34]
-----------------------------------------------
                0.00    0.01     272/72272       tLweSymEncryptZero [38]
                0.01    3.77   72000/72272       tLweAddMulRTo [5]
[6]     17.4    0.01    3.78   72272         torusPolynomialAddMulRFFT [6]
                0.00    1.56   72272/72274       TorusPolynomial_fft [7]
                0.00    1.14   72272/72274       IntPolynomial_ifft [9]
                0.00    0.73   72272/72274       TorusPolynomial_ifft [12]
                0.02    0.15   72272/72274       LagrangeHalfCPolynomialMul [17]
                0.00    0.11   72272/72274       new_LagrangeHalfCPolynomial_array [23]
                0.08    0.00   72272/77072       torusPolynomialAddTo [27]
                0.00    0.00   72272/72277       new_TorusPolynomial [53]
                0.00    0.00   72272/72277       delete_TorusPolynomial [52]
                0.00    0.00   72272/72274       delete_LagrangeHalfCPolynomial_array [55]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.56   72272/72274       torusPolynomialAddMulRFFT [6]
[7]      7.1    0.00    1.56   72274         TorusPolynomial_fft [7]
                0.73    0.82   72274/72274       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.00    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.73    0.82   72274/72274       TorusPolynomial_fft [7]
[8]      7.1    0.73    0.82   72274         FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.12    0.12 148017152/148017152     double std::real<double>(std::complex<double> const&) [15]
                0.10    0.07 148017152/148017152     double std::imag<double>(std::complex<double> const&) [16]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [14]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.14   72272/72274       torusPolynomialAddMulRFFT [6]
[9]      5.2    0.00    1.14   72274         IntPolynomial_ifft [9]
                0.49    0.65   72274/72274       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.49    0.65   72274/72274       IntPolynomial_ifft [9]
[10]     5.2    0.49    0.65   72274         FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [14]
                0.04    0.08 37004288/37004288     double std::abs<double>(std::complex<double> const&) [21]
                0.05    0.04 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [25]
                0.03    0.00 37004288/185023488     std::complex<double>::complex(double, double) [19]
-----------------------------------------------
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[11]     3.6    0.79    0.00  216822         FFT_Processor_nayuki::check_alternate_real() [11]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.73   72272/72274       torusPolynomialAddMulRFFT [6]
[12]     3.4    0.00    0.73   72274         TorusPolynomial_ifft [12]
                0.29    0.44   72274/72274       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.00    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.29    0.44   72274/72274       TorusPolynomial_ifft [12]
[13]     3.3    0.29    0.44   72274         FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [14]
                0.03    0.00 37004288/185023488     std::complex<double>::complex(double, double) [19]
-----------------------------------------------
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[14]     2.1    0.45    0.00  216822         FFT_Processor_nayuki::check_conjugate_cplx() [14]
-----------------------------------------------
                0.12    0.12 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[15]     1.1    0.12    0.12 148017152         double std::real<double>(std::complex<double> const&) [15]
                0.12    0.00 148017152/148017152     std::complex<double>::real[abi:cxx11]() const [20]
-----------------------------------------------
                0.10    0.07 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[16]     0.8    0.10    0.07 148017152         double std::imag<double>(std::complex<double> const&) [16]
                0.07    0.00 148017152/148017152     std::complex<double>::imag[abi:cxx11]() const [28]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.02    0.15   72272/72274       torusPolynomialAddMulRFFT [6]
[17]     0.8    0.02    0.15   72274         LagrangeHalfCPolynomialMul [17]
                0.06    0.09 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
-----------------------------------------------
                0.06    0.09 37004288/37004288     LagrangeHalfCPolynomialMul [17]
[18]     0.7    0.06    0.09 37004288         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
                0.07    0.02 37004288/37004288     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [26]
-----------------------------------------------
                0.00    0.00    2048/185023488     FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.03    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.03    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.08    0.00 111012864/185023488     LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [24]
[19]     0.6    0.14    0.00 185023488         std::complex<double>::complex(double, double) [19]
-----------------------------------------------
                0.12    0.00 148017152/148017152     double std::real<double>(std::complex<double> const&) [15]
[20]     0.5    0.12    0.00 148017152         std::complex<double>::real[abi:cxx11]() const [20]
-----------------------------------------------
                0.04    0.08 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[21]     0.5    0.04    0.08 37004288         double std::abs<double>(std::complex<double> const&) [21]
                0.07    0.00 37004288/37004288     std::__complex_abs(double _Complex) [29]
                0.02    0.00 37004288/111012864     std::complex<double>::__rep() const [30]
-----------------------------------------------
                0.00    0.11   72274/72274       new_LagrangeHalfCPolynomial_array [23]
[22]     0.5    0.00    0.11   72274         init_LagrangeHalfCPolynomial_array [22]
                0.02    0.09  216822/216822      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [24]
                0.00    0.00  216822/240904      operator new(unsigned long, void*) [460]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.11   72272/72274       torusPolynomialAddMulRFFT [6]
[23]     0.5    0.00    0.11   72274         new_LagrangeHalfCPolynomial_array [23]
                0.00    0.11   72274/72274       init_LagrangeHalfCPolynomial_array [22]
                0.00    0.00   72274/72274       alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.02    0.09  216822/216822      init_LagrangeHalfCPolynomial_array [22]
[24]     0.5    0.02    0.09  216822         LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [24]
                0.08    0.00 111012864/185023488     std::complex<double>::complex(double, double) [19]
                0.01    0.00  216822/433644      TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.05    0.04 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[25]     0.4    0.05    0.04 37004288         std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [25]
                0.03    0.02 37004288/37004288     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [31]
-----------------------------------------------
                0.07    0.02 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
[26]     0.4    0.07    0.02 37004288         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [26]
                0.02    0.00 37004288/111012864     std::complex<double>::__rep() const [30]
-----------------------------------------------
                0.00    0.00    4800/77072       tLweAddTo [42]
                0.08    0.00   72272/77072       torusPolynomialAddMulRFFT [6]
[27]     0.4    0.08    0.00   77072         torusPolynomialAddTo [27]
-----------------------------------------------
                0.07    0.00 148017152/148017152     double std::imag<double>(std::complex<double> const&) [16]
[28]     0.3    0.07    0.00 148017152         std::complex<double>::imag[abi:cxx11]() const [28]
-----------------------------------------------
                0.07    0.00 37004288/37004288     double std::abs<double>(std::complex<double> const&) [21]
[29]     0.3    0.07    0.00 37004288         std::__complex_abs(double _Complex) [29]
-----------------------------------------------
                0.02    0.00 37004288/111012864     double std::abs<double>(std::complex<double> const&) [21]
                0.02    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [31]
                0.02    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [26]
[30]     0.3    0.06    0.00 111012864         std::complex<double>::__rep() const [30]
-----------------------------------------------
                0.03    0.02 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [25]
[31]     0.2    0.03    0.02 37004288         std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [31]
                0.02    0.00 37004288/111012864     std::complex<double>::__rep() const [30]
-----------------------------------------------
                0.04    0.00    4800/4800        tGswTLweDecompH [33]
[32]     0.2    0.04    0.00    4800         tGswTorus32PolynomialDecompH [32]
-----------------------------------------------
                0.00    0.04    1600/1600        tGswExternProduct [4]
[33]     0.2    0.00    0.04    1600         tGswTLweDecompH [33]
                0.04    0.00    4800/4800        tGswTorus32PolynomialDecompH [32]
-----------------------------------------------
                0.03    0.00   24000/24000       tLweAddMulRTo [5]
[34]     0.1    0.03    0.00   24000         intPolynomialNormSq2 [34]
-----------------------------------------------
                0.03    0.00    8000/8000        main [3]
[35]     0.1    0.03    0.00    8000         tLweCopy [35]
-----------------------------------------------
                                                 <spontaneous>
[36]     0.1    0.02    0.00                 _init [36]
-----------------------------------------------
                0.00    0.00   72274/433644      IntPolynomial_ifft [9]
                0.00    0.00   72274/433644      TorusPolynomial_ifft [12]
                0.00    0.00   72274/433644      TorusPolynomial_fft [7]
                0.01    0.00  216822/433644      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [24]
[37]     0.1    0.01    0.00  433644         TLS wrapper function for fp1024_nayuki [37]
                0.00    0.00  433644/433644      TLS init function for fp1024_nayuki [48]
-----------------------------------------------
                0.00    0.00      16/136         tLweSymEncrypt [43]
                0.00    0.01     120/136         tGswEncryptZero [39]
[38]     0.1    0.00    0.01     136         tLweSymEncryptZero [38]
                0.00    0.01     272/72272       torusPolynomialAddMulRFFT [6]
                0.00    0.00  139264/139280      gaussian32 [51]
                0.00    0.00     272/272         torusPolynomialUniform [71]
-----------------------------------------------
                0.00    0.01       8/8           main [3]
[39]     0.1    0.00    0.01       8         tGswEncryptZero [39]
                0.00    0.01     120/136         tLweSymEncryptZero [38]
-----------------------------------------------
                0.00    0.00      24/5256        main [3]
                0.01    0.00    5232/5256        tLweClear [41]
[40]     0.0    0.01    0.00    5256         torusPolynomialClear [40]
-----------------------------------------------
                0.00    0.00      24/1744        main [3]
                0.00    0.00     120/1744        tGswClear [44]
                0.00    0.01    1600/1744        tGswExternProduct [4]
[41]     0.0    0.00    0.01    1744         tLweClear [41]
                0.01    0.00    5232/5256        torusPolynomialClear [40]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[42]     0.0    0.00    0.00    1600         tLweAddTo [42]
                0.00    0.00    4800/77072       torusPolynomialAddTo [27]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[43]     0.0    0.00    0.00      16         tLweSymEncrypt [43]
                0.00    0.00      16/136         tLweSymEncryptZero [38]
-----------------------------------------------
                0.00    0.00       8/8           main [3]
[44]     0.0    0.00    0.00       8         tGswClear [44]
                0.00    0.00     120/1744        tLweClear [41]
-----------------------------------------------
                0.00    0.00       2/2           tLwePhase [46]
[45]     0.0    0.00    0.00       2         torusPolynomialSubMulRFFT [45]
                0.00    0.00       2/72274       TorusPolynomial_fft [7]
                0.00    0.00       2/72274       IntPolynomial_ifft [9]
                0.00    0.00       2/72274       TorusPolynomial_ifft [12]
                0.00    0.00       2/72274       LagrangeHalfCPolynomialMul [17]
                0.00    0.00       2/72274       new_LagrangeHalfCPolynomial_array [23]
                0.00    0.00       2/72277       new_TorusPolynomial [53]
                0.00    0.00       2/4802        torusPolynomialSubTo [58]
                0.00    0.00       2/72277       delete_TorusPolynomial [52]
                0.00    0.00       2/72274       delete_LagrangeHalfCPolynomial_array [55]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[46]     0.0    0.00    0.00       1         tLwePhase [46]
                0.00    0.00       2/2           torusPolynomialSubMulRFFT [45]
                0.00    0.00       1/1           torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[47]     0.0    0.00    0.00       1         tLweSymDecrypt [47]
                0.00    0.00       1/1           tLwePhase [46]
                0.00    0.00       1/1           tLweApproxPhase [123]
-----------------------------------------------
                0.00    0.00  433644/433644      TLS wrapper function for fp1024_nayuki [37]
[48]     0.0    0.00    0.00  433644         TLS init function for fp1024_nayuki [48]
                0.00    0.00       1/1           FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
-----------------------------------------------
                0.00    0.00       1/1           TLS init function for fp1024_nayuki [48]
[49]     0.0    0.00    0.00       1         FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.00    0.00    2048/185023488     std::complex<double>::complex(double, double) [19]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[50]     0.0    0.00    0.00  139280         dtot32 [50]
-----------------------------------------------
                0.00    0.00      16/139280      lweSymEncrypt [77]
                0.00    0.00  139264/139280      tLweSymEncryptZero [38]
[51]     0.0    0.00    0.00  139280         gaussian32 [51]
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [465]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
                0.00    0.00  139280/139280      dtot32 [50]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[52]     0.0    0.00    0.00   72277         delete_TorusPolynomial [52]
                0.00    0.00   72277/72286       TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[53]     0.0    0.00    0.00   72277         new_TorusPolynomial [53]
                0.00    0.00   72277/72331       TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00   72274/72274       new_LagrangeHalfCPolynomial_array [23]
[54]     0.0    0.00    0.00   72274         alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.00   72272/72274       torusPolynomialAddMulRFFT [6]
[55]     0.0    0.00    0.00   72274         delete_LagrangeHalfCPolynomial_array [55]
                0.00    0.00   72274/72274       destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00   72274/72274       free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[56]     0.0    0.00    0.00   72274         destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00  216822/216822      LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [461]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[57]     0.0    0.00    0.00   72274         free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00       2/4802        torusPolynomialSubMulRFFT [45]
                0.00    0.00    4800/4802        tLweSubTo [69]
[58]     0.0    0.00    0.00    4802         torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweAddMulTo [67]
[59]     0.0    0.00    0.00    4800         torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweSubMulTo [68]
[60]     0.0    0.00    0.00    4800         torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[61]     0.0    0.00    0.00    1602         alloc_IntPolynomial_array [61]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[62]     0.0    0.00    0.00    1602         init_IntPolynomial_array [62]
                0.00    0.00   24004/240904      operator new(unsigned long, void*) [460]
                0.00    0.00   24004/24006       IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       2/1602        TLweKey::TLweKey(TLweParams const*) [480]
                0.00    0.00    1600/1602        tGswExternProduct [4]
[63]     0.0    0.00    0.00    1602         new_IntPolynomial_array [63]
                0.00    0.00    1602/1602        alloc_IntPolynomial_array [61]
                0.00    0.00    1602/1602        init_IntPolynomial_array [62]
-----------------------------------------------
                0.00    0.00       1/1601        TLweKey::~TLweKey() [505]
                0.00    0.00    1600/1601        tGswExternProduct [4]
[64]     0.0    0.00    0.00    1601         delete_IntPolynomial_array [64]
                0.00    0.00    1601/1601        destroy_IntPolynomial_array [65]
                0.00    0.00    1601/1601        free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[65]     0.0    0.00    0.00    1601         destroy_IntPolynomial_array [65]
                0.00    0.00   24002/24004       IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[66]     0.0    0.00    0.00    1601         free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[67]     0.0    0.00    0.00    1600         tLweAddMulTo [67]
                0.00    0.00    4800/4800        torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[68]     0.0    0.00    0.00    1600         tLweSubMulTo [68]
                0.00    0.00    4800/4800        torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[69]     0.0    0.00    0.00    1600         tLweSubTo [69]
                0.00    0.00    4800/4802        torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00       1/1025        lweSymDecrypt [114]
                0.00    0.00    1024/1025        tLweApproxPhase [123]
[70]     0.0    0.00    0.00    1025         approxPhase [70]
-----------------------------------------------
                0.00    0.00     272/272         tLweSymEncryptZero [38]
[71]     0.0    0.00    0.00     272         torusPolynomialUniform [71]
                0.00    0.00  278528/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
-----------------------------------------------
                0.00    0.00      24/24          main [3]
[72]     0.0    0.00    0.00      24         lweClear [72]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[73]     0.0    0.00    0.00      18         alloc_TorusPolynomial_array [73]
-----------------------------------------------
                0.00    0.00       3/18          new_TLweSample [92]
                0.00    0.00      15/18          init_TLweSample_array [111]
[74]     0.0    0.00    0.00      18         init_TLweSample [74]
                0.00    0.00      18/240904      operator new(unsigned long, void*) [460]
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [473]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[75]     0.0    0.00    0.00      18         init_TorusPolynomial_array [75]
                0.00    0.00      54/240904      operator new(unsigned long, void*) [460]
                0.00    0.00      54/72331       TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [473]
[76]     0.0    0.00    0.00      18         new_TorusPolynomial_array [76]
                0.00    0.00      18/18          alloc_TorusPolynomial_array [73]
                0.00    0.00      18/18          init_TorusPolynomial_array [75]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[77]     0.0    0.00    0.00      16         lweSymEncrypt [77]
                0.00    0.00    7696/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
                0.00    0.00      16/139280      gaussian32 [51]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[78]     0.0    0.00    0.00      16         modSwitchToTorus32 [78]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[79]     0.0    0.00    0.00       3         alloc_LweSample [79]
-----------------------------------------------
                0.00    0.00       3/3           new_TLweSample [92]
[80]     0.0    0.00    0.00       3         alloc_TLweSample [80]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[81]     0.0    0.00    0.00       3         delete_LweSample [81]
                0.00    0.00       3/3           destroy_LweSample [84]
                0.00    0.00       3/3           free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[82]     0.0    0.00    0.00       3         delete_TLweSample [82]
                0.00    0.00       3/3           destroy_TLweSample [85]
                0.00    0.00       3/3           free_TLweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           TLweSample::~TLweSample() [475]
[83]     0.0    0.00    0.00       3         delete_TorusPolynomial_array [83]
                0.00    0.00       3/3           destroy_TorusPolynomial_array [86]
                0.00    0.00       3/3           free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[84]     0.0    0.00    0.00       3         destroy_LweSample [84]
                0.00    0.00       3/3           LweSample::~LweSample() [477]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [82]
[85]     0.0    0.00    0.00       3         destroy_TLweSample [85]
                0.00    0.00       3/3           TLweSample::~TLweSample() [475]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[86]     0.0    0.00    0.00       3         destroy_TorusPolynomial_array [86]
                0.00    0.00       9/72286       TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[87]     0.0    0.00    0.00       3         free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [82]
[88]     0.0    0.00    0.00       3         free_TLweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[89]     0.0    0.00    0.00       3         free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[90]     0.0    0.00    0.00       3         init_LweSample [90]
                0.00    0.00       3/240904      operator new(unsigned long, void*) [460]
                0.00    0.00       3/3           LweSample::LweSample(LweParams const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[91]     0.0    0.00    0.00       3         new_LweSample [91]
                0.00    0.00       3/3           alloc_LweSample [79]
                0.00    0.00       3/3           init_LweSample [90]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[92]     0.0    0.00    0.00       3         new_TLweSample [92]
                0.00    0.00       3/3           alloc_TLweSample [80]
                0.00    0.00       3/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[93]     0.0    0.00    0.00       2         delete_IntPolynomial [93]
                0.00    0.00       2/24004       IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[94]     0.0    0.00    0.00       2         modSwitchFromTorus32 [94]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[95]     0.0    0.00    0.00       2         new_IntPolynomial [95]
                0.00    0.00       2/24006       IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[96]     0.0    0.00    0.00       1         alloc_LweKey [96]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[97]     0.0    0.00    0.00       1         alloc_TGswSample [97]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[98]     0.0    0.00    0.00       1         alloc_TLweKey [98]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[99]     0.0    0.00    0.00       1         alloc_TLweSample_array [99]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[100]    0.0    0.00    0.00       1         delete_LweKey [100]
                0.00    0.00       1/1           free_LweKey [106]
                0.00    0.00       1/1           destroy_LweKey [104]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[101]    0.0    0.00    0.00       1         delete_LweParams [101]
                0.00    0.00       1/2           LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[102]    0.0    0.00    0.00       1         delete_TLweKey [102]
                0.00    0.00       1/1           destroy_TLweKey [105]
                0.00    0.00       1/1           free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[103]    0.0    0.00    0.00       1         delete_TLweParams [103]
                0.00    0.00       1/1           TLweParams::~TLweParams() [501]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[104]    0.0    0.00    0.00       1         destroy_LweKey [104]
                0.00    0.00       1/1           LweKey::~LweKey() [503]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[105]    0.0    0.00    0.00       1         destroy_TLweKey [105]
                0.00    0.00       1/1           TLweKey::~TLweKey() [505]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[106]    0.0    0.00    0.00       1         free_LweKey [106]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[107]    0.0    0.00    0.00       1         free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[108]    0.0    0.00    0.00       1         init_LweKey [108]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [460]
                0.00    0.00       1/1           LweKey::LweKey(LweParams const*) [502]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[109]    0.0    0.00    0.00       1         init_TGswSample [109]
                0.00    0.00       1/1           new_TLweSample_array [122]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [460]
                0.00    0.00       1/1           TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[110]    0.0    0.00    0.00       1         init_TLweKey [110]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [460]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [480]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[111]    0.0    0.00    0.00       1         init_TLweSample_array [111]
                0.00    0.00      15/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[112]    0.0    0.00    0.00       1         lweKeyGen [112]
                0.00    0.00     481/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           lweSymDecrypt [114]
[113]    0.0    0.00    0.00       1         lwePhase [113]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[114]    0.0    0.00    0.00       1         lweSymDecrypt [114]
                0.00    0.00       1/1           lwePhase [113]
                0.00    0.00       1/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[115]    0.0    0.00    0.00       1         new_LweKey [115]
                0.00    0.00       1/1           alloc_LweKey [96]
                0.00    0.00       1/1           init_LweKey [108]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[116]    0.0    0.00    0.00       1         new_LweParams [116]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[117]    0.0    0.00    0.00       1         new_TGswKey [117]
                0.00    0.00       1/1           TGswKey::TGswKey(TGswParams const*) [504]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[118]    0.0    0.00    0.00       1         new_TGswParams [118]
                0.00    0.00       1/1           TGswParams::TGswParams(int, int, TLweParams const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[119]    0.0    0.00    0.00       1         new_TGswSample [119]
                0.00    0.00       1/1           alloc_TGswSample [97]
                0.00    0.00       1/1           init_TGswSample [109]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[120]    0.0    0.00    0.00       1         new_TLweKey [120]
                0.00    0.00       1/1           alloc_TLweKey [98]
                0.00    0.00       1/1           init_TLweKey [110]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[121]    0.0    0.00    0.00       1         new_TLweParams [121]
                0.00    0.00       1/1           TLweParams::TLweParams(int, int, double, double) [500]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[122]    0.0    0.00    0.00       1         new_TLweSample_array [122]
                0.00    0.00       1/1           alloc_TLweSample_array [99]
                0.00    0.00       1/1           init_TLweSample_array [111]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[123]    0.0    0.00    0.00       1         tLweApproxPhase [123]
                0.00    0.00    1024/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[124]    0.0    0.00    0.00       1         tLweKeyGen [124]
                0.00    0.00    2048/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           tLwePhase [46]
[125]    0.0    0.00    0.00       1         torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00  708588/1570467     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00  861879/1570467     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
[449]    0.0    0.00    0.00 1570467         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [451]
-----------------------------------------------
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [451]
[450]    0.0    0.00    0.00 1570467         std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1570467/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
[451]    0.0    0.00    0.00 1570467         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [451]
                0.00    0.00 1570467/1570467     std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1436856/1436856     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
[452]    0.0    0.00    0.00 1436856         std::uniform_int_distribution<int>::param_type::a() const [452]
-----------------------------------------------
                0.00    0.00  718428/718428      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
[453]    0.0    0.00    0.00  718428         std::uniform_int_distribution<int>::param_type::b() const [453]
-----------------------------------------------
                0.00    0.00  708588/708588      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
[454]    0.0    0.00    0.00  708588         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [454]
-----------------------------------------------
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00  429675/429679      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
[455]    0.0    0.00    0.00  429679         std::uniform_int_distribution<int>::param_type::param_type(int, int) [455]
-----------------------------------------------
                0.00    0.00  354294/354294      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
[456]    0.0    0.00    0.00  354294         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [456]
                0.00    0.00  354294/354294      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
-----------------------------------------------
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [456]
[457]    0.0    0.00    0.00  354294         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00  708588/708588      std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [454]
                0.00    0.00  708588/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
-----------------------------------------------
                0.00    0.00     481/288753      lweKeyGen [112]
                0.00    0.00    2048/288753      tLweKeyGen [124]
                0.00    0.00    7696/288753      lweSymEncrypt [77]
                0.00    0.00  278528/288753      torusPolynomialUniform [71]
[458]    0.0    0.00    0.00  288753         int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
-----------------------------------------------
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [458]
[459]    0.0    0.00    0.00  288753+429675  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
                0.00    0.00 1436856/1436856     std::uniform_int_distribution<int>::param_type::a() const [452]
                0.00    0.00  861879/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00  718428/718428      std::uniform_int_distribution<int>::param_type::b() const [453]
                0.00    0.00  429675/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [455]
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [459]
-----------------------------------------------
                0.00    0.00       1/240904      init_LweKey [108]
                0.00    0.00       1/240904      init_TGswSample [109]
                0.00    0.00       1/240904      init_TLweKey [110]
                0.00    0.00       3/240904      init_LweSample [90]
                0.00    0.00      18/240904      init_TLweSample [74]
                0.00    0.00      54/240904      init_TorusPolynomial_array [75]
                0.00    0.00   24004/240904      init_IntPolynomial_array [62]
                0.00    0.00  216822/240904      init_LagrangeHalfCPolynomial_array [22]
[460]    0.0    0.00    0.00  240904         operator new(unsigned long, void*) [460]
-----------------------------------------------
                0.00    0.00  216822/216822      destroy_LagrangeHalfCPolynomial_array [56]
[461]    0.0    0.00    0.00  216822         LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
[462]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::mean() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
[463]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::stddev() const [463]
-----------------------------------------------
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [465]
[464]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::param_type(double, double) [464]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[465]    0.0    0.00    0.00  139280         std::normal_distribution<double>::normal_distribution(double, double) [465]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::param_type(double, double) [464]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[466]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
[467]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [456]
                0.00    0.00  139280/139280      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [468]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::stddev() const [463]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::mean() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [467]
[468]    0.0    0.00    0.00  139280         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [468]
-----------------------------------------------
                0.00    0.00      54/72331       init_TorusPolynomial_array [75]
                0.00    0.00   72277/72331       new_TorusPolynomial [53]
[469]    0.0    0.00    0.00   72331         TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00       9/72286       destroy_TorusPolynomial_array [86]
                0.00    0.00   72277/72286       delete_TorusPolynomial [52]
[470]    0.0    0.00    0.00   72286         TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/24006       new_IntPolynomial [95]
                0.00    0.00   24004/24006       init_IntPolynomial_array [62]
[471]    0.0    0.00    0.00   24006         IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       2/24004       delete_IntPolynomial [93]
                0.00    0.00   24002/24004       destroy_IntPolynomial_array [65]
[472]    0.0    0.00    0.00   24004         IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00      18/18          init_TLweSample [74]
[473]    0.0    0.00    0.00      18         TLweSample::TLweSample(TLweParams const*) [473]
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
-----------------------------------------------
                0.00    0.00       1/4           lweKeyGen [112]
                0.00    0.00       1/4           tLweKeyGen [124]
                0.00    0.00       2/4           __static_initialization_and_destruction_0(int, int) [492]
[474]    0.0    0.00    0.00       4         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [455]
-----------------------------------------------
                0.00    0.00       3/3           destroy_TLweSample [85]
[475]    0.0    0.00    0.00       3         TLweSample::~TLweSample() [475]
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
-----------------------------------------------
                0.00    0.00       3/3           init_LweSample [90]
[476]    0.0    0.00    0.00       3         LweSample::LweSample(LweParams const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           destroy_LweSample [84]
[477]    0.0    0.00    0.00       3         LweSample::~LweSample() [477]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
[478]    0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
[479]    0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       1/2           TGswKey::TGswKey(TGswParams const*) [504]
                0.00    0.00       1/2           init_TLweKey [110]
[480]    0.0    0.00    0.00       2         TLweKey::TLweKey(TLweParams const*) [480]
                0.00    0.00       2/1602        new_IntPolynomial_array [63]
-----------------------------------------------
                0.00    0.00       1/2           new_LweParams [116]
                0.00    0.00       1/2           TLweParams::TLweParams(int, int, double, double) [500]
[481]    0.0    0.00    0.00       2         LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/2           delete_LweParams [101]
                0.00    0.00       1/2           TLweParams::~TLweParams() [501]
[482]    0.0    0.00    0.00       2         LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [522]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_bootsNAND [513]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKeyFFT [518]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKey [517]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_lweKeyGen [521]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16renormalizeKSkeyP15LweKeySwitchKeyPK6LweKeyPKi [509]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_debug_accum_key [514]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN19LweBootstrappingKeyC2EPK9LweParamsPK10TGswParamsPK10TLweParamsS2_P10TGswSampleP15LweKeySwitchKey [511]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN13IntPolynomialC2Ei [510]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [516]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
                0.00    0.00       2/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_die_dramatically [515]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK10StdIstream7getLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [512]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSampleFFT [520]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSample [519]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_tLweKeyGen [523]
[497]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswParams [118]
[498]    0.0    0.00    0.00       1         TGswParams::TGswParams(int, int, TLweParams const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[499]    0.0    0.00    0.00       1         TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweParams [121]
[500]    0.0    0.00    0.00       1         TLweParams::TLweParams(int, int, double, double) [500]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweParams [103]
[501]    0.0    0.00    0.00       1         TLweParams::~TLweParams() [501]
                0.00    0.00       1/2           LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           init_LweKey [108]
[502]    0.0    0.00    0.00       1         LweKey::LweKey(LweParams const*) [502]
-----------------------------------------------
                0.00    0.00       1/1           destroy_LweKey [104]
[503]    0.0    0.00    0.00       1         LweKey::~LweKey() [503]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswKey [117]
[504]    0.0    0.00    0.00       1         TGswKey::TGswKey(TGswParams const*) [504]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [480]
-----------------------------------------------
                0.00    0.00       1/1           destroy_TLweKey [105]
[505]    0.0    0.00    0.00       1         TLweKey::~TLweKey() [505]
                0.00    0.00       1/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
[506]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
[507]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [492]
[508]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [9] IntPolynomial_ifft    [506] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [51] gaussian32
  [17] LagrangeHalfCPolynomialMul [507] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [62] init_IntPolynomial_array
   [7] TorusPolynomial_fft   [508] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [22] init_LagrangeHalfCPolynomial_array
  [12] TorusPolynomial_ifft  [449] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [108] init_LweKey
 [483] __static_initialization_and_destruction_0(int, int) [19] std::complex<double>::complex(double, double) [90] init_LweSample
 [484] __static_initialization_and_destruction_0(int, int) [31] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [109] init_TGswSample
 [485] __static_initialization_and_destruction_0(int, int) [26] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [110] init_TLweKey
 [486] __static_initialization_and_destruction_0(int, int) [450] std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [74] init_TLweSample
 [487] __static_initialization_and_destruction_0(int, int) [478] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [111] init_TLweSample_array
 [488] __static_initialization_and_destruction_0(int, int) [451] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [75] init_TorusPolynomial_array
 [489] __static_initialization_and_destruction_0(int, int) [479] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [34] intPolynomialNormSq2
 [490] __static_initialization_and_destruction_0(int, int) [468] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [72] lweClear
 [491] __static_initialization_and_destruction_0(int, int) [456] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [112] lweKeyGen
 [492] __static_initialization_and_destruction_0(int, int) [29] std::__complex_abs(double _Complex) [113] lwePhase
 [493] __static_initialization_and_destruction_0(int, int) [457] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [114] lweSymDecrypt
 [494] __static_initialization_and_destruction_0(int, int) [21] double std::abs<double>(std::complex<double> const&) [77] lweSymEncrypt
 [495] __static_initialization_and_destruction_0(int, int) [16] double std::imag<double>(std::complex<double> const&) [94] modSwitchFromTorus32
 [496] __static_initialization_and_destruction_0(int, int) [15] double std::real<double>(std::complex<double> const&) [78] modSwitchToTorus32
 [497] __static_initialization_and_destruction_0(int, int) [25] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [95] new_IntPolynomial
 [498] TGswParams::TGswParams(int, int, TLweParams const*) [18] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [63] new_IntPolynomial_array
 [499] TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [48] TLS init function for fp1024_nayuki [23] new_LagrangeHalfCPolynomial_array
 [500] TLweParams::TLweParams(int, int, double, double) [37] TLS wrapper function for fp1024_nayuki [115] new_LweKey
 [501] TLweParams::~TLweParams() [460] operator new(unsigned long, void*) [116] new_LweParams
 [473] TLweSample::TLweSample(TLweParams const*) [36] _init [91] new_LweSample
 [475] TLweSample::~TLweSample() [61] alloc_IntPolynomial_array [117] new_TGswKey
 [471] IntPolynomial::IntPolynomial(int) [54] alloc_LagrangeHalfCPolynomial_array [118] new_TGswParams
 [472] IntPolynomial::~IntPolynomial() [96] alloc_LweKey [119] new_TGswSample
 [469] TorusPolynomial::TorusPolynomial(int) [79] alloc_LweSample [120] new_TLweKey
 [470] TorusPolynomial::~TorusPolynomial() [97] alloc_TGswSample [121] new_TLweParams
  [10] FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [98] alloc_TLweKey [92] new_TLweSample
  [11] FFT_Processor_nayuki::check_alternate_real() [80] alloc_TLweSample [122] new_TLweSample_array
  [14] FFT_Processor_nayuki::check_conjugate_cplx() [99] alloc_TLweSample_array [53] new_TorusPolynomial
   [8] FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [73] alloc_TorusPolynomial_array [76] new_TorusPolynomial_array
  [13] FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [70] approxPhase [44] tGswClear
  [49] FFT_Processor_nayuki::FFT_Processor_nayuki(int) [93] delete_IntPolynomial [39] tGswEncryptZero
  [24] LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [64] delete_IntPolynomial_array [4] tGswExternProduct
 [461] LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [55] delete_LagrangeHalfCPolynomial_array [33] tGswTLweDecompH
 [502] LweKey::LweKey(LweParams const*) [100] delete_LweKey [32] tGswTorus32PolynomialDecompH
 [503] LweKey::~LweKey()     [101] delete_LweParams        [5] tLweAddMulRTo
 [504] TGswKey::TGswKey(TGswParams const*) [81] delete_LweSample [67] tLweAddMulTo
 [480] TLweKey::TLweKey(TLweParams const*) [102] delete_TLweKey [42] tLweAddTo
 [505] TLweKey::~TLweKey()   [103] delete_TLweParams     [123] tLweApproxPhase
 [481] LweParams::LweParams(int, double, double) [82] delete_TLweSample [41] tLweClear
 [482] LweParams::~LweParams() [52] delete_TorusPolynomial [35] tLweCopy
 [476] LweSample::LweSample(LweParams const*) [83] delete_TorusPolynomial_array [124] tLweKeyGen
 [477] LweSample::~LweSample() [65] destroy_IntPolynomial_array [46] tLwePhase
 [462] std::normal_distribution<double>::param_type::mean() const [56] destroy_LagrangeHalfCPolynomial_array [68] tLweSubMulTo
 [463] std::normal_distribution<double>::param_type::stddev() const [104] destroy_LweKey [69] tLweSubTo
 [452] std::uniform_int_distribution<int>::param_type::a() const [84] destroy_LweSample [47] tLweSymDecrypt
 [453] std::uniform_int_distribution<int>::param_type::b() const [105] destroy_TLweKey [43] tLweSymEncrypt
  [28] std::complex<double>::imag[abi:cxx11]() const [85] destroy_TLweSample [38] tLweSymEncryptZero
  [20] std::complex<double>::real[abi:cxx11]() const [86] destroy_TorusPolynomial_array [6] torusPolynomialAddMulRFFT
  [30] std::complex<double>::__rep() const [50] dtot32    [59] torusPolynomialAddMulZTo
 [464] std::normal_distribution<double>::param_type::param_type(double, double) [2] fft_transform [27] torusPolynomialAddTo
 [465] std::normal_distribution<double>::normal_distribution(double, double) [1] fft_transform_reverse [40] torusPolynomialClear
 [466] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [66] free_IntPolynomial_array [125] torusPolynomialCopy
 [467] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [57] free_LagrangeHalfCPolynomial_array [45] torusPolynomialSubMulRFFT
 [455] std::uniform_int_distribution<int>::param_type::param_type(int, int) [106] free_LweKey [60] torusPolynomialSubMulZTo
 [474] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [87] free_LweSample [58] torusPolynomialSubTo
 [458] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [107] free_TLweKey [71] torusPolynomialUniform
 [459] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [88] free_TLweSample
 [454] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [89] free_TorusPolynomial_array
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 55.17     12.06    12.06                             fft_transform_reverse
 26.85     17.93     5.87                             fft_transform
  3.61     18.72     0.79   216822     0.00     0.00  FFT_Processor_nayuki::check_alternate_real()
  3.34     19.45     0.73    72274     0.01     0.02  FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*)
  2.24     19.94     0.49    72274     0.01     0.02  FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*)
  2.06     20.39     0.45   216822     0.00     0.00  FFT_Processor_nayuki::check_conjugate_cplx()
  1.33     20.68     0.29    72274     0.00     0.01  FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*)
  0.73     20.84     0.16 148017152     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.50     20.95     0.11 185023488     0.00     0.00  std::complex<double>::complex(double, double)
  0.46     21.05     0.10 148017152     0.00     0.00  double std::real<double>(std::complex<double> const&)
  0.43     21.14     0.10 148017152     0.00     0.00  double std::imag<double>(std::complex<double> const&)
  0.37     21.23     0.08 148017152     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.37     21.30     0.08 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.37     21.39     0.08    77072     0.00     0.00  torusPolynomialAddTo
  0.23     21.43     0.05 37004288     0.00     0.00  double std::abs<double>(std::complex<double> const&)
  0.23     21.48     0.05 37004288     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.21     21.53     0.04 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.18     21.57     0.04 111012864     0.00     0.00  std::complex<double>::__rep() const
  0.18     21.61     0.04 37004288     0.00     0.00  std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.18     21.65     0.04     4800     0.01     0.01  tGswTorus32PolynomialDecompH
  0.14     21.68     0.03 37004288     0.00     0.00  std::__complex_abs(double _Complex)
  0.14     21.71     0.03   433644     0.00     0.00  TLS wrapper function for fp1024_nayuki
  0.14     21.74     0.03   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int)
  0.14     21.77     0.03    24000     0.00     0.00  intPolynomialNormSq2
  0.14     21.80     0.03     8000     0.00     0.00  tLweCopy
  0.09     21.82     0.02    72274     0.00     0.00  LagrangeHalfCPolynomialMul
  0.09     21.84     0.02                             _init
  0.05     21.85     0.01    72272     0.00     0.05  torusPolynomialAddMulRFFT
  0.05     21.86     0.01     5256     0.00     0.00  torusPolynomialClear
  0.00     21.86     0.00  1570467     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.00     21.86     0.00  1570467     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00     21.86     0.00  1436856     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00     21.86     0.00   718428     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00     21.86     0.00   708588     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.00     21.86     0.00   433644     0.00     0.00  TLS init function for fp1024_nayuki
  0.00     21.86     0.00   429679     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00     21.86     0.00   354294     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.00     21.86     0.00   354294     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00     21.86     0.00   240904     0.00     0.00  operator new(unsigned long, void*)
  0.00     21.86     0.00   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL()
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&)
  0.00     21.86     0.00   139280     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  dtot32
  0.00     21.86     0.00   139280     0.00     0.00  gaussian32
  0.00     21.86     0.00    72331     0.00     0.00  TorusPolynomial::TorusPolynomial(int)
  0.00     21.86     0.00    72286     0.00     0.00  TorusPolynomial::~TorusPolynomial()
  0.00     21.86     0.00    72277     0.00     0.00  delete_TorusPolynomial
  0.00     21.86     0.00    72277     0.00     0.00  new_TorusPolynomial
  0.00     21.86     0.00    72274     0.00     0.00  IntPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.02  TorusPolynomial_fft
  0.00     21.86     0.00    72274     0.00     0.03  TorusPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.00  alloc_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  delete_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  destroy_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  free_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  init_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  new_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    24006     0.00     0.00  IntPolynomial::IntPolynomial(int)
  0.00     21.86     0.00    24004     0.00     0.00  IntPolynomial::~IntPolynomial()
  0.00     21.86     0.00    24000     0.00     0.16  tLweAddMulRTo
  0.00     21.86     0.00     4802     0.00     0.00  torusPolynomialSubTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialAddMulZTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialSubMulZTo
  0.00     21.86     0.00     1744     0.00     0.01  tLweClear
  0.00     21.86     0.00     1602     0.00     0.00  alloc_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  init_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  new_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  delete_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  destroy_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  free_IntPolynomial_array
  0.00     21.86     0.00     1600     0.00     2.41  tGswExternProduct
  0.00     21.86     0.00     1600     0.00     0.03  tGswTLweDecompH
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubTo
  0.00     21.86     0.00     1025     0.00     0.00  approxPhase
  0.00     21.86     0.00      272     0.00     0.00  torusPolynomialUniform
  0.00     21.86     0.00      136     0.00     0.11  tLweSymEncryptZero
  0.00     21.86     0.00       24     0.00     0.00  lweClear
  0.00     21.86     0.00       18     0.00     0.00  TLweSample::TLweSample(TLweParams const*)
  0.00     21.86     0.00       18     0.00     0.00  alloc_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  init_TLweSample
  0.00     21.86     0.00       18     0.00     0.00  init_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  new_TorusPolynomial_array
  0.00     21.86     0.00       16     0.00     0.00  lweSymEncrypt
  0.00     21.86     0.00       16     0.00     0.00  modSwitchToTorus32
  0.00     21.86     0.00       16     0.00     0.11  tLweSymEncrypt
  0.00     21.86     0.00        8     0.00     0.09  tGswClear
  0.00     21.86     0.00        8     0.00     1.58  tGswEncryptZero
  0.00     21.86     0.00        4     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00     21.86     0.00        3     0.00     0.00  TLweSample::~TLweSample()
  0.00     21.86     0.00        3     0.00     0.00  LweSample::LweSample(LweParams const*)
  0.00     21.86     0.00        3     0.00     0.00  LweSample::~LweSample()
  0.00     21.86     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  alloc_LweSample
  0.00     21.86     0.00        3     0.00     0.00  alloc_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_LweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  destroy_LweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  free_LweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  init_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_TLweSample
  0.00     21.86     0.00        2     0.00     0.00  TLweKey::TLweKey(TLweParams const*)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::LweParams(int, double, double)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::~LweParams()
  0.00     21.86     0.00        2     0.00     0.00  delete_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.00  modSwitchFromTorus32
  0.00     21.86     0.00        2     0.00     0.00  new_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.05  torusPolynomialSubMulRFFT
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  TGswParams::TGswParams(int, int, TLweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TGswSample::TGswSample(TLweSample*, TLweSample**, int, int)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::TLweParams(int, int, double, double)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::~TLweParams()
  0.00     21.86     0.00        1     0.00     0.00  FFT_Processor_nayuki::FFT_Processor_nayuki(int)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::LweKey(LweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::~LweKey()
  0.00     21.86     0.00        1     0.00     0.00  TGswKey::TGswKey(TGswParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TLweKey::~TLweKey()
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00     21.86     0.00        1     0.00     0.00  alloc_LweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  delete_LweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_LweParams
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  destroy_LweKey
  0.00     21.86     0.00        1     0.00     0.00  destroy_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  free_LweKey
  0.00     21.86     0.00        1     0.00     0.00  free_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_LweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  init_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  lweKeyGen
  0.00     21.86     0.00        1     0.00     0.00  lwePhase
  0.00     21.86     0.00        1     0.00     0.00  lweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  new_LweKey
  0.00     21.86     0.00        1     0.00     0.00  new_LweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswKey
  0.00     21.86     0.00        1     0.00     0.00  new_TGswParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  new_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  new_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  tLweApproxPhase
  0.00     21.86     0.00        1     0.00     0.00  tLweKeyGen
  0.00     21.86     0.00        1     0.00     0.10  tLwePhase
  0.00     21.86     0.00        1     0.00     0.10  tLweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  torusPolynomialCopy

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.05% of 21.86 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     55.2   12.06    0.00                 fft_transform_reverse [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     26.9    5.87    0.00                 fft_transform [2]
-----------------------------------------------
                                                 <spontaneous>
[3]     17.9    0.00    3.91                 main [3]
                0.00    3.86    1600/1600        tGswExternProduct [4]
                0.03    0.00    8000/8000        tLweCopy [34]
                0.00    0.01       8/8           tGswEncryptZero [38]
                0.00    0.00    1600/1600        tLweAddTo [42]
                0.00    0.00      16/16          tLweSymEncrypt [43]
                0.00    0.00       8/8           tGswClear [44]
                0.00    0.00      24/1744        tLweClear [40]
                0.00    0.00       1/1           tLweSymDecrypt [47]
                0.00    0.00      24/5256        torusPolynomialClear [39]
                0.00    0.00    1600/1600        tLweSubTo [69]
                0.00    0.00    1600/1600        tLweAddMulTo [67]
                0.00    0.00    1600/1600        tLweSubMulTo [68]
                0.00    0.00      24/24          lweClear [72]
                0.00    0.00      16/16          modSwitchToTorus32 [78]
                0.00    0.00      16/16          lweSymEncrypt [77]
                0.00    0.00       3/72277       new_TorusPolynomial [53]
                0.00    0.00       3/3           new_LweSample [91]
                0.00    0.00       3/3           new_TLweSample [92]
                0.00    0.00       3/3           delete_TLweSample [82]
                0.00    0.00       3/3           delete_LweSample [81]
                0.00    0.00       3/72277       delete_TorusPolynomial [52]
                0.00    0.00       2/2           new_IntPolynomial [95]
                0.00    0.00       2/2           modSwitchFromTorus32 [94]
                0.00    0.00       2/2           delete_IntPolynomial [93]
                0.00    0.00       1/1           new_LweParams [116]
                0.00    0.00       1/1           new_TLweParams [121]
                0.00    0.00       1/1           new_TGswParams [118]
                0.00    0.00       1/1           new_LweKey [115]
                0.00    0.00       1/1           new_TLweKey [120]
                0.00    0.00       1/1           new_TGswKey [117]
                0.00    0.00       1/1           new_TGswSample [119]
                0.00    0.00       1/1           lweKeyGen [112]
                0.00    0.00       1/1           tLweKeyGen [124]
                0.00    0.00       1/1           lweSymDecrypt [114]
                0.00    0.00       1/1           delete_TLweKey [102]
                0.00    0.00       1/1           delete_LweKey [100]
                0.00    0.00       1/1           delete_TLweParams [103]
                0.00    0.00       1/1           delete_LweParams [101]
-----------------------------------------------
                0.00    3.86    1600/1600        main [3]
[4]     17.7    0.00    3.86    1600         tGswExternProduct [4]
                0.00    3.81   24000/24000       tLweAddMulRTo [5]
                0.00    0.04    1600/1600        tGswTLweDecompH [30]
                0.00    0.01    1600/1744        tLweClear [40]
                0.00    0.00    1600/1602        new_IntPolynomial_array [63]
                0.00    0.00    1600/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    3.81   24000/24000       tGswExternProduct [4]
[5]     17.4    0.00    3.81   24000         tLweAddMulRTo [5]
                0.01    3.77   72000/72272       torusPolynomialAddMulRFFT [6]
                0.03    0.00   24000/24000       intPolynomialNormSq2 [33]
-----------------------------------------------
                0.00    0.01     272/72272       tLweSymEncryptZero [37]
                0.01    3.77   72000/72272       tLweAddMulRTo [5]
[6]     17.4    0.01    3.78   72272         torusPolynomialAddMulRFFT [6]
                0.00    1.85   72272/72274       TorusPolynomial_ifft [7]
                0.00    1.58   72272/72274       TorusPolynomial_fft [8]
                0.02    0.14   72272/72274       LagrangeHalfCPolynomialMul [16]
                0.00    0.11   72272/72274       new_LagrangeHalfCPolynomial_array [20]
                0.08    0.00   72272/77072       torusPolynomialAddTo [26]
                0.00    0.01   72272/72274       IntPolynomial_ifft [41]
                0.00    0.00   72272/72277       new_TorusPolynomial [53]
                0.00    0.00   72272/72277       delete_TorusPolynomial [52]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.85   72272/72274       torusPolynomialAddMulRFFT [6]
[7]      8.5    0.00    1.85   72274         TorusPolynomial_ifft [7]
                0.49    0.63   72274/72274       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.29    0.44   72274/72274       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.58   72272/72274       torusPolynomialAddMulRFFT [6]
[8]      7.2    0.00    1.58   72274         TorusPolynomial_fft [8]
                0.73    0.85   72274/72274       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.73    0.85   72274/72274       TorusPolynomial_fft [8]
[9]      7.2    0.73    0.85   72274         FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.10    0.16 148017152/148017152     double std::real<double>(std::complex<double> const&) [14]
                0.10    0.08 148017152/148017152     double std::imag<double>(std::complex<double> const&) [15]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
-----------------------------------------------
                0.49    0.63   72274/72274       TorusPolynomial_ifft [7]
[10]     5.1    0.49    0.63   72274         FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
                0.04    0.06 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
                0.05    0.04 37004288/37004288     double std::abs<double>(std::complex<double> const&) [25]
                0.02    0.00 37004288/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[11]     3.6    0.79    0.00  216822         FFT_Processor_nayuki::check_alternate_real() [11]
-----------------------------------------------
                0.29    0.44   72274/72274       TorusPolynomial_ifft [7]
[12]     3.3    0.29    0.44   72274         FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
                0.02    0.00 37004288/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[13]     2.1    0.45    0.00  216822         FFT_Processor_nayuki::check_conjugate_cplx() [13]
-----------------------------------------------
                0.10    0.16 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[14]     1.2    0.10    0.16 148017152         double std::real<double>(std::complex<double> const&) [14]
                0.16    0.00 148017152/148017152     std::complex<double>::real[abi:cxx11]() const [17]
-----------------------------------------------
                0.10    0.08 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[15]     0.8    0.10    0.08 148017152         double std::imag<double>(std::complex<double> const&) [15]
                0.08    0.00 148017152/148017152     std::complex<double>::imag[abi:cxx11]() const [27]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.02    0.14   72272/72274       torusPolynomialAddMulRFFT [6]
[16]     0.7    0.02    0.14   72274         LagrangeHalfCPolynomialMul [16]
                0.05    0.09 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
-----------------------------------------------
                0.16    0.00 148017152/148017152     double std::real<double>(std::complex<double> const&) [14]
[17]     0.7    0.16    0.00 148017152         std::complex<double>::real[abi:cxx11]() const [17]
-----------------------------------------------
                0.05    0.09 37004288/37004288     LagrangeHalfCPolynomialMul [16]
[18]     0.7    0.05    0.09 37004288         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
                0.08    0.01 37004288/37004288     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
-----------------------------------------------
                0.00    0.11   72274/72274       new_LagrangeHalfCPolynomial_array [20]
[19]     0.5    0.00    0.11   72274         init_LagrangeHalfCPolynomial_array [19]
                0.03    0.08  216822/216822      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
                0.00    0.00  216822/240904      operator new(unsigned long, void*) [459]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.11   72272/72274       torusPolynomialAddMulRFFT [6]
[20]     0.5    0.00    0.11   72274         new_LagrangeHalfCPolynomial_array [20]
                0.00    0.11   72274/72274       init_LagrangeHalfCPolynomial_array [19]
                0.00    0.00   72274/72274       alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.03    0.08  216822/216822      init_LagrangeHalfCPolynomial_array [19]
[21]     0.5    0.03    0.08  216822         LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
                0.07    0.00 111012864/185023488     std::complex<double>::complex(double, double) [22]
                0.01    0.00  216822/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00    2048/185023488     FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.02    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.02    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.07    0.00 111012864/185023488     LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
[22]     0.5    0.11    0.00 185023488         std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.04    0.06 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[23]     0.4    0.04    0.06 37004288         std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
                0.04    0.01 37004288/37004288     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
-----------------------------------------------
                0.08    0.01 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
[24]     0.4    0.08    0.01 37004288         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.05    0.04 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[25]     0.4    0.05    0.04 37004288         double std::abs<double>(std::complex<double> const&) [25]
                0.03    0.00 37004288/37004288     std::__complex_abs(double _Complex) [35]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.00    0.00    4800/77072       tLweAddTo [42]
                0.08    0.00   72272/77072       torusPolynomialAddMulRFFT [6]
[26]     0.4    0.08    0.00   77072         torusPolynomialAddTo [26]
-----------------------------------------------
                0.08    0.00 148017152/148017152     double std::imag<double>(std::complex<double> const&) [15]
[27]     0.4    0.08    0.00 148017152         std::complex<double>::imag[abi:cxx11]() const [27]
-----------------------------------------------
                0.04    0.01 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
[28]     0.3    0.04    0.01 37004288         std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.04    0.00    4800/4800        tGswTLweDecompH [30]
[29]     0.2    0.04    0.00    4800         tGswTorus32PolynomialDecompH [29]
-----------------------------------------------
                0.00    0.04    1600/1600        tGswExternProduct [4]
[30]     0.2    0.00    0.04    1600         tGswTLweDecompH [30]
                0.04    0.00    4800/4800        tGswTorus32PolynomialDecompH [29]
-----------------------------------------------
                0.01    0.00 37004288/111012864     double std::abs<double>(std::complex<double> const&) [25]
                0.01    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
                0.01    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
[31]     0.2    0.04    0.00 111012864         std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.01    0.00   72274/433644      IntPolynomial_ifft [41]
                0.01    0.00   72274/433644      TorusPolynomial_ifft [7]
                0.01    0.00   72274/433644      TorusPolynomial_fft [8]
                0.01    0.00  216822/433644      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
[32]     0.1    0.03    0.00  433644         TLS wrapper function for fp1024_nayuki [32]
                0.00    0.00  433644/433644      TLS init function for fp1024_nayuki [48]
-----------------------------------------------
                0.03    0.00   24000/24000       tLweAddMulRTo [5]
[33]     0.1    0.03    0.00   24000         intPolynomialNormSq2 [33]
-----------------------------------------------
                0.03    0.00    8000/8000        main [3]
[34]     0.1    0.03    0.00    8000         tLweCopy [34]
-----------------------------------------------
                0.03    0.00 37004288/37004288     double std::abs<double>(std::complex<double> const&) [25]
[35]     0.1    0.03    0.00 37004288         std::__complex_abs(double _Complex) [35]
-----------------------------------------------
                                                 <spontaneous>
[36]     0.1    0.02    0.00                 _init [36]
-----------------------------------------------
                0.00    0.00      16/136         tLweSymEncrypt [43]
                0.00    0.01     120/136         tGswEncryptZero [38]
[37]     0.1    0.00    0.01     136         tLweSymEncryptZero [37]
                0.00    0.01     272/72272       torusPolynomialAddMulRFFT [6]
                0.00    0.00  139264/139280      gaussian32 [51]
                0.00    0.00     272/272         torusPolynomialUniform [71]
-----------------------------------------------
                0.00    0.01       8/8           main [3]
[38]     0.1    0.00    0.01       8         tGswEncryptZero [38]
                0.00    0.01     120/136         tLweSymEncryptZero [37]
-----------------------------------------------
                0.00    0.00      24/5256        main [3]
                0.01    0.00    5232/5256        tLweClear [40]
[39]     0.0    0.01    0.00    5256         torusPolynomialClear [39]
-----------------------------------------------
                0.00    0.00      24/1744        main [3]
                0.00    0.00     120/1744        tGswClear [44]
                0.00    0.01    1600/1744        tGswExternProduct [4]
[40]     0.0    0.00    0.01    1744         tLweClear [40]
                0.01    0.00    5232/5256        torusPolynomialClear [39]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.01   72272/72274       torusPolynomialAddMulRFFT [6]
[41]     0.0    0.00    0.01   72274         IntPolynomial_ifft [41]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[42]     0.0    0.00    0.00    1600         tLweAddTo [42]
                0.00    0.00    4800/77072       torusPolynomialAddTo [26]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[43]     0.0    0.00    0.00      16         tLweSymEncrypt [43]
                0.00    0.00      16/136         tLweSymEncryptZero [37]
-----------------------------------------------
                0.00    0.00       8/8           main [3]
[44]     0.0    0.00    0.00       8         tGswClear [44]
                0.00    0.00     120/1744        tLweClear [40]
-----------------------------------------------
                0.00    0.00       2/2           tLwePhase [46]
[45]     0.0    0.00    0.00       2         torusPolynomialSubMulRFFT [45]
                0.00    0.00       2/72274       TorusPolynomial_ifft [7]
                0.00    0.00       2/72274       TorusPolynomial_fft [8]
                0.00    0.00       2/72274       LagrangeHalfCPolynomialMul [16]
                0.00    0.00       2/72274       new_LagrangeHalfCPolynomial_array [20]
                0.00    0.00       2/72274       IntPolynomial_ifft [41]
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
                0.00    0.00       2/72277       new_TorusPolynomial [53]
                0.00    0.00       2/4802        torusPolynomialSubTo [58]
                0.00    0.00       2/72277       delete_TorusPolynomial [52]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[46]     0.0    0.00    0.00       1         tLwePhase [46]
                0.00    0.00       2/2           torusPolynomialSubMulRFFT [45]
                0.00    0.00       1/1           torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[47]     0.0    0.00    0.00       1         tLweSymDecrypt [47]
                0.00    0.00       1/1           tLwePhase [46]
                0.00    0.00       1/1           tLweApproxPhase [123]
-----------------------------------------------
                0.00    0.00  433644/433644      TLS wrapper function for fp1024_nayuki [32]
[48]     0.0    0.00    0.00  433644         TLS init function for fp1024_nayuki [48]
                0.00    0.00       1/1           FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
-----------------------------------------------
                0.00    0.00       1/1           TLS init function for fp1024_nayuki [48]
[49]     0.0    0.00    0.00       1         FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.00    0.00    2048/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[50]     0.0    0.00    0.00  139280         dtot32 [50]
-----------------------------------------------
                0.00    0.00      16/139280      lweSymEncrypt [77]
                0.00    0.00  139264/139280      tLweSymEncryptZero [37]
[51]     0.0    0.00    0.00  139280         gaussian32 [51]
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [464]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
                0.00    0.00  139280/139280      dtot32 [50]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[52]     0.0    0.00    0.00   72277         delete_TorusPolynomial [52]
                0.00    0.00   72277/72286       TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[53]     0.0    0.00    0.00   72277         new_TorusPolynomial [53]
                0.00    0.00   72277/72331       TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00   72274/72274       new_LagrangeHalfCPolynomial_array [20]
[54]     0.0    0.00    0.00   72274         alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.00    0.00   72274/72274       torusPolynomialSubMulRFFT [45]
[55]     0.0    0.00    0.00   72274         delete_LagrangeHalfCPolynomial_array [55]
                0.00    0.00   72274/72274       destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00   72274/72274       free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[56]     0.0    0.00    0.00   72274         destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00  216822/216822      LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [460]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[57]     0.0    0.00    0.00   72274         free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00       2/4802        torusPolynomialSubMulRFFT [45]
                0.00    0.00    4800/4802        tLweSubTo [69]
[58]     0.0    0.00    0.00    4802         torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweAddMulTo [67]
[59]     0.0    0.00    0.00    4800         torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweSubMulTo [68]
[60]     0.0    0.00    0.00    4800         torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[61]     0.0    0.00    0.00    1602         alloc_IntPolynomial_array [61]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[62]     0.0    0.00    0.00    1602         init_IntPolynomial_array [62]
                0.00    0.00   24004/240904      operator new(unsigned long, void*) [459]
                0.00    0.00   24004/24006       IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       2/1602        TLweKey::TLweKey(TLweParams const*) [479]
                0.00    0.00    1600/1602        tGswExternProduct [4]
[63]     0.0    0.00    0.00    1602         new_IntPolynomial_array [63]
                0.00    0.00    1602/1602        alloc_IntPolynomial_array [61]
                0.00    0.00    1602/1602        init_IntPolynomial_array [62]
-----------------------------------------------
                0.00    0.00       1/1601        TLweKey::~TLweKey() [504]
                0.00    0.00    1600/1601        tGswExternProduct [4]
[64]     0.0    0.00    0.00    1601         delete_IntPolynomial_array [64]
                0.00    0.00    1601/1601        destroy_IntPolynomial_array [65]
                0.00    0.00    1601/1601        free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[65]     0.0    0.00    0.00    1601         destroy_IntPolynomial_array [65]
                0.00    0.00   24002/24004       IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[66]     0.0    0.00    0.00    1601         free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[67]     0.0    0.00    0.00    1600         tLweAddMulTo [67]
                0.00    0.00    4800/4800        torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[68]     0.0    0.00    0.00    1600         tLweSubMulTo [68]
                0.00    0.00    4800/4800        torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[69]     0.0    0.00    0.00    1600         tLweSubTo [69]
                0.00    0.00    4800/4802        torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00       1/1025        lweSymDecrypt [114]
                0.00    0.00    1024/1025        tLweApproxPhase [123]
[70]     0.0    0.00    0.00    1025         approxPhase [70]
-----------------------------------------------
                0.00    0.00     272/272         tLweSymEncryptZero [37]
[71]     0.0    0.00    0.00     272         torusPolynomialUniform [71]
                0.00    0.00  278528/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
-----------------------------------------------
                0.00    0.00      24/24          main [3]
[72]     0.0    0.00    0.00      24         lweClear [72]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[73]     0.0    0.00    0.00      18         alloc_TorusPolynomial_array [73]
-----------------------------------------------
                0.00    0.00       3/18          new_TLweSample [92]
                0.00    0.00      15/18          init_TLweSample_array [111]
[74]     0.0    0.00    0.00      18         init_TLweSample [74]
                0.00    0.00      18/240904      operator new(unsigned long, void*) [459]
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [472]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[75]     0.0    0.00    0.00      18         init_TorusPolynomial_array [75]
                0.00    0.00      54/240904      operator new(unsigned long, void*) [459]
                0.00    0.00      54/72331       TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [472]
[76]     0.0    0.00    0.00      18         new_TorusPolynomial_array [76]
                0.00    0.00      18/18          alloc_TorusPolynomial_array [73]
                0.00    0.00      18/18          init_TorusPolynomial_array [75]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[77]     0.0    0.00    0.00      16         lweSymEncrypt [77]
                0.00    0.00    7696/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00      16/139280      gaussian32 [51]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[78]     0.0    0.00    0.00      16         modSwitchToTorus32 [78]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[79]     0.0    0.00    0.00       3         alloc_LweSample [79]
-----------------------------------------------
                0.00    0.00       3/3           new_TLweSample [92]
[80]     0.0    0.00    0.00       3         alloc_TLweSample [80]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[81]     0.0    0.00    0.00       3         delete_LweSample [81]
                0.00    0.00       3/3           destroy_LweSample [84]
                0.00    0.00       3/3           free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[82]     0.0    0.00    0.00       3         delete_TLweSample [82]
                0.00    0.00       3/3           destroy_TLweSample [85]
-----------------------------------------------
                0.00    0.00       3/3           TLweSample::~TLweSample() [474]
[83]     0.0    0.00    0.00       3         delete_TorusPolynomial_array [83]
                0.00    0.00       3/3           destroy_TorusPolynomial_array [86]
                0.00    0.00       3/3           free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[84]     0.0    0.00    0.00       3         destroy_LweSample [84]
                0.00    0.00       3/3           LweSample::~LweSample() [476]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [82]
[85]     0.0    0.00    0.00       3         destroy_TLweSample [85]
                0.00    0.00       3/3           TLweSample::~TLweSample() [474]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[86]     0.0    0.00    0.00       3         destroy_TorusPolynomial_array [86]
                0.00    0.00       9/72286       TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[87]     0.0    0.00    0.00       3         free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample_array [201]
[88]     0.0    0.00    0.00       3         free_TLweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[89]     0.0    0.00    0.00       3         free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[90]     0.0    0.00    0.00       3         init_LweSample [90]
                0.00    0.00       3/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       3/3           LweSample::LweSample(LweParams const*) [475]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[91]     0.0    0.00    0.00       3         new_LweSample [91]
                0.00    0.00       3/3           alloc_LweSample [79]
                0.00    0.00       3/3           init_LweSample [90]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[92]     0.0    0.00    0.00       3         new_TLweSample [92]
                0.00    0.00       3/3           alloc_TLweSample [80]
                0.00    0.00       3/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[93]     0.0    0.00    0.00       2         delete_IntPolynomial [93]
                0.00    0.00       2/24004       IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[94]     0.0    0.00    0.00       2         modSwitchFromTorus32 [94]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[95]     0.0    0.00    0.00       2         new_IntPolynomial [95]
                0.00    0.00       2/24006       IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[96]     0.0    0.00    0.00       1         alloc_LweKey [96]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[97]     0.0    0.00    0.00       1         alloc_TGswSample [97]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[98]     0.0    0.00    0.00       1         alloc_TLweKey [98]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[99]     0.0    0.00    0.00       1         alloc_TLweSample_array [99]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[100]    0.0    0.00    0.00       1         delete_LweKey [100]
                0.00    0.00       1/1           free_LweKey [106]
                0.00    0.00       1/1           destroy_LweKey [104]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[101]    0.0    0.00    0.00       1         delete_LweParams [101]
                0.00    0.00       1/2           LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[102]    0.0    0.00    0.00       1         delete_TLweKey [102]
                0.00    0.00       1/1           destroy_TLweKey [105]
                0.00    0.00       1/1           free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[103]    0.0    0.00    0.00       1         delete_TLweParams [103]
                0.00    0.00       1/1           TLweParams::~TLweParams() [500]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[104]    0.0    0.00    0.00       1         destroy_LweKey [104]
                0.00    0.00       1/1           LweKey::~LweKey() [502]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[105]    0.0    0.00    0.00       1         destroy_TLweKey [105]
                0.00    0.00       1/1           TLweKey::~TLweKey() [504]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[106]    0.0    0.00    0.00       1         free_LweKey [106]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[107]    0.0    0.00    0.00       1         free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[108]    0.0    0.00    0.00       1         init_LweKey [108]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/1           LweKey::LweKey(LweParams const*) [501]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[109]    0.0    0.00    0.00       1         init_TGswSample [109]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [494]
                0.00    0.00       1/1           new_TLweSample_array [122]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/1           TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[110]    0.0    0.00    0.00       1         init_TLweKey [110]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [479]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[111]    0.0    0.00    0.00       1         init_TLweSample_array [111]
                0.00    0.00      15/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[112]    0.0    0.00    0.00       1         lweKeyGen [112]
                0.00    0.00     481/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           lweSymDecrypt [114]
[113]    0.0    0.00    0.00       1         lwePhase [113]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[114]    0.0    0.00    0.00       1         lweSymDecrypt [114]
                0.00    0.00       1/1           lwePhase [113]
                0.00    0.00       1/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[115]    0.0    0.00    0.00       1         new_LweKey [115]
                0.00    0.00       1/1           alloc_LweKey [96]
                0.00    0.00       1/1           init_LweKey [108]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[116]    0.0    0.00    0.00       1         new_LweParams [116]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[117]    0.0    0.00    0.00       1         new_TGswKey [117]
                0.00    0.00       1/1           TGswKey::TGswKey(TGswParams const*) [503]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[118]    0.0    0.00    0.00       1         new_TGswParams [118]
                0.00    0.00       1/1           TGswParams::TGswParams(int, int, TLweParams const*) [497]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[119]    0.0    0.00    0.00       1         new_TGswSample [119]
                0.00    0.00       1/1           alloc_TGswSample [97]
                0.00    0.00       1/1           init_TGswSample [109]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[120]    0.0    0.00    0.00       1         new_TLweKey [120]
                0.00    0.00       1/1           alloc_TLweKey [98]
                0.00    0.00       1/1           init_TLweKey [110]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[121]    0.0    0.00    0.00       1         new_TLweParams [121]
                0.00    0.00       1/1           TLweParams::TLweParams(int, int, double, double) [499]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[122]    0.0    0.00    0.00       1         new_TLweSample_array [122]
                0.00    0.00       1/1           alloc_TLweSample_array [99]
                0.00    0.00       1/1           init_TLweSample_array [111]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[123]    0.0    0.00    0.00       1         tLweApproxPhase [123]
                0.00    0.00    1024/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[124]    0.0    0.00    0.00       1         tLweKeyGen [124]
                0.00    0.00    2048/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           tLwePhase [46]
[125]    0.0    0.00    0.00       1         torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00  708588/1570467     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
                0.00    0.00  861879/1570467     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[449]    0.0    0.00    0.00 1570467         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1570467/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
[450]    0.0    0.00    0.00 1570467         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1436856/1436856     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[451]    0.0    0.00    0.00 1436856         std::uniform_int_distribution<int>::param_type::a() const [451]
-----------------------------------------------
                0.00    0.00  718428/718428      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[452]    0.0    0.00    0.00  718428         std::uniform_int_distribution<int>::param_type::b() const [452]
-----------------------------------------------
                0.00    0.00  708588/708588      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
[453]    0.0    0.00    0.00  708588         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [453]
-----------------------------------------------
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00  429675/429679      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[454]    0.0    0.00    0.00  429679         std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
-----------------------------------------------
                0.00    0.00  354294/354294      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[455]    0.0    0.00    0.00  354294         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
                0.00    0.00  354294/354294      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
-----------------------------------------------
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
[456]    0.0    0.00    0.00  354294         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
                0.00    0.00  708588/708588      std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [453]
                0.00    0.00  708588/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
-----------------------------------------------
                0.00    0.00     481/288753      lweKeyGen [112]
                0.00    0.00    2048/288753      tLweKeyGen [124]
                0.00    0.00    7696/288753      lweSymEncrypt [77]
                0.00    0.00  278528/288753      torusPolynomialUniform [71]
[457]    0.0    0.00    0.00  288753         int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
-----------------------------------------------
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
[458]    0.0    0.00    0.00  288753+429675  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
                0.00    0.00 1436856/1436856     std::uniform_int_distribution<int>::param_type::a() const [451]
                0.00    0.00  861879/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00  718428/718428      std::uniform_int_distribution<int>::param_type::b() const [452]
                0.00    0.00  429675/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
-----------------------------------------------
                0.00    0.00       1/240904      init_LweKey [108]
                0.00    0.00       1/240904      init_TGswSample [109]
                0.00    0.00       1/240904      init_TLweKey [110]
                0.00    0.00       3/240904      init_LweSample [90]
                0.00    0.00      18/240904      init_TLweSample [74]
                0.00    0.00      54/240904      init_TorusPolynomial_array [75]
                0.00    0.00   24004/240904      init_IntPolynomial_array [62]
                0.00    0.00  216822/240904      init_LagrangeHalfCPolynomial_array [19]
[459]    0.0    0.00    0.00  240904         operator new(unsigned long, void*) [459]
-----------------------------------------------
                0.00    0.00  216822/216822      destroy_LagrangeHalfCPolynomial_array [56]
[460]    0.0    0.00    0.00  216822         LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [460]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[461]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::mean() const [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[462]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::stddev() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [464]
[463]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::param_type(double, double) [463]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[464]    0.0    0.00    0.00  139280         std::normal_distribution<double>::normal_distribution(double, double) [464]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::param_type(double, double) [463]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[465]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
[466]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
                0.00    0.00  139280/139280      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [467]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::stddev() const [462]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::mean() const [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[467]    0.0    0.00    0.00  139280         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [467]
-----------------------------------------------
                0.00    0.00      54/72331       init_TorusPolynomial_array [75]
                0.00    0.00   72277/72331       new_TorusPolynomial [53]
[468]    0.0    0.00    0.00   72331         TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00       9/72286       destroy_TorusPolynomial_array [86]
                0.00    0.00   72277/72286       delete_TorusPolynomial [52]
[469]    0.0    0.00    0.00   72286         TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       2/24006       new_IntPolynomial [95]
                0.00    0.00   24004/24006       init_IntPolynomial_array [62]
[470]    0.0    0.00    0.00   24006         IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       2/24004       delete_IntPolynomial [93]
                0.00    0.00   24002/24004       destroy_IntPolynomial_array [65]
[471]    0.0    0.00    0.00   24004         IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00      18/18          init_TLweSample [74]
[472]    0.0    0.00    0.00      18         TLweSample::TLweSample(TLweParams const*) [472]
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
-----------------------------------------------
                0.00    0.00       1/4           lweKeyGen [112]
                0.00    0.00       1/4           tLweKeyGen [124]
                0.00    0.00       2/4           __static_initialization_and_destruction_0(int, int) [491]
[473]    0.0    0.00    0.00       4         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
-----------------------------------------------
                0.00    0.00       3/3           destroy_TLweSample [85]
[474]    0.0    0.00    0.00       3         TLweSample::~TLweSample() [474]
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
-----------------------------------------------
                0.00    0.00       3/3           init_LweSample [90]
[475]    0.0    0.00    0.00       3         LweSample::LweSample(LweParams const*) [475]
-----------------------------------------------
                0.00    0.00       3/3           destroy_LweSample [84]
[476]    0.0    0.00    0.00       3         LweSample::~LweSample() [476]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
[477]    0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [477]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
[478]    0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [477]
-----------------------------------------------
                0.00    0.00       1/2           TGswKey::TGswKey(TGswParams const*) [503]
                0.00    0.00       1/2           init_TLweKey [110]
[479]    0.0    0.00    0.00       2         TLweKey::TLweKey(TLweParams const*) [479]
                0.00    0.00       2/1602        new_IntPolynomial_array [63]
-----------------------------------------------
                0.00    0.00       1/2           new_LweParams [116]
                0.00    0.00       1/2           TLweParams::TLweParams(int, int, double, double) [499]
[480]    0.0    0.00    0.00       2         LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/2           delete_LweParams [101]
                0.00    0.00       1/2           TLweParams::~TLweParams() [500]
[481]    0.0    0.00    0.00       2         LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [521]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_bootsNAND [512]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKeyFFT [517]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKey [516]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_lweKeyGen [520]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16renormalizeKSkeyP15LweKeySwitchKeyPK6LweKeyPKi [508]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_debug_accum_key [513]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN19LweBootstrappingKeyC2EPK9LweParamsPK10TGswParamsPK10TLweParamsS2_P10TGswSampleP15LweKeySwitchKey [510]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN13IntPolynomialC2Ei [509]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [515]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
                0.00    0.00       2/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
-----------------------------------------------
                0.00    0.00       1/1           TFheGateBootstrappingParameterSet::TFheGateBootstrappingParameterSet(int, int, LweParams const*, TGswParams const*) [626]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK10StdIstream7getLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [511]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSample [518]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_tLweKeyGen [522]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswParams [118]
[497]    0.0    0.00    0.00       1         TGswParams::TGswParams(int, int, TLweParams const*) [497]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[498]    0.0    0.00    0.00       1         TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweParams [121]
[499]    0.0    0.00    0.00       1         TLweParams::TLweParams(int, int, double, double) [499]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweParams [103]
[500]    0.0    0.00    0.00       1         TLweParams::~TLweParams() [500]
                0.00    0.00       1/2           LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           init_LweKey [108]
[501]    0.0    0.00    0.00       1         LweKey::LweKey(LweParams const*) [501]
-----------------------------------------------
                0.00    0.00       1/1           destroy_LweKey [104]
[502]    0.0    0.00    0.00       1         LweKey::~LweKey() [502]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswKey [117]
[503]    0.0    0.00    0.00       1         TGswKey::TGswKey(TGswParams const*) [503]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [479]
-----------------------------------------------
                0.00    0.00       1/1           destroy_TLweKey [105]
[504]    0.0    0.00    0.00       1         TLweKey::~TLweKey() [504]
                0.00    0.00       1/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
[505]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
[506]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [491]
[507]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
-----------------------------------------------
                             1570467             std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
[987]    0.0    0.00    0.00       0+1570467 std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
                             1570467             std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [41] IntPolynomial_ifft    [453] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [89] free_TorusPolynomial_array
  [16] LagrangeHalfCPolynomialMul [505] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [51] gaussian32
   [8] TorusPolynomial_fft   [506] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [62] init_IntPolynomial_array
   [7] TorusPolynomial_ifft  [507] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [19] init_LagrangeHalfCPolynomial_array
 [482] __static_initialization_and_destruction_0(int, int) [449] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [108] init_LweKey
 [483] __static_initialization_and_destruction_0(int, int) [22] std::complex<double>::complex(double, double) [90] init_LweSample
 [484] __static_initialization_and_destruction_0(int, int) [28] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [109] init_TGswSample
 [485] __static_initialization_and_destruction_0(int, int) [24] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [110] init_TLweKey
 [486] __static_initialization_and_destruction_0(int, int) [477] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [74] init_TLweSample
 [487] __static_initialization_and_destruction_0(int, int) [450] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [111] init_TLweSample_array
 [488] __static_initialization_and_destruction_0(int, int) [478] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [75] init_TorusPolynomial_array
 [489] __static_initialization_and_destruction_0(int, int) [467] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [33] intPolynomialNormSq2
 [490] __static_initialization_and_destruction_0(int, int) [455] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [72] lweClear
 [491] __static_initialization_and_destruction_0(int, int) [35] std::__complex_abs(double _Complex) [112] lweKeyGen
 [492] __static_initialization_and_destruction_0(int, int) [456] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [113] lwePhase
 [493] __static_initialization_and_destruction_0(int, int) [25] double std::abs<double>(std::complex<double> const&) [114] lweSymDecrypt
 [494] __static_initialization_and_destruction_0(int, int) [15] double std::imag<double>(std::complex<double> const&) [77] lweSymEncrypt
 [495] __static_initialization_and_destruction_0(int, int) [14] double std::real<double>(std::complex<double> const&) [94] modSwitchFromTorus32
 [496] __static_initialization_and_destruction_0(int, int) [23] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [78] modSwitchToTorus32
 [497] TGswParams::TGswParams(int, int, TLweParams const*) [18] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [95] new_IntPolynomial
 [498] TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [48] TLS init function for fp1024_nayuki [63] new_IntPolynomial_array
 [499] TLweParams::TLweParams(int, int, double, double) [32] TLS wrapper function for fp1024_nayuki [20] new_LagrangeHalfCPolynomial_array
 [500] TLweParams::~TLweParams() [459] operator new(unsigned long, void*) [115] new_LweKey
 [472] TLweSample::TLweSample(TLweParams const*) [36] _init [116] new_LweParams
 [474] TLweSample::~TLweSample() [61] alloc_IntPolynomial_array [91] new_LweSample
 [470] IntPolynomial::IntPolynomial(int) [54] alloc_LagrangeHalfCPolynomial_array [117] new_TGswKey
 [471] IntPolynomial::~IntPolynomial() [96] alloc_LweKey [118] new_TGswParams
 [468] TorusPolynomial::TorusPolynomial(int) [79] alloc_LweSample [119] new_TGswSample
 [469] TorusPolynomial::~TorusPolynomial() [97] alloc_TGswSample [120] new_TLweKey
  [10] FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [98] alloc_TLweKey [121] new_TLweParams
  [11] FFT_Processor_nayuki::check_alternate_real() [80] alloc_TLweSample [92] new_TLweSample
  [13] FFT_Processor_nayuki::check_conjugate_cplx() [99] alloc_TLweSample_array [122] new_TLweSample_array
   [9] FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [73] alloc_TorusPolynomial_array [53] new_TorusPolynomial
  [12] FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [70] approxPhase [76] new_TorusPolynomial_array
  [49] FFT_Processor_nayuki::FFT_Processor_nayuki(int) [93] delete_IntPolynomial [44] tGswClear
  [21] LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [64] delete_IntPolynomial_array [38] tGswEncryptZero
 [460] LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [55] delete_LagrangeHalfCPolynomial_array [4] tGswExternProduct
 [501] LweKey::LweKey(LweParams const*) [100] delete_LweKey [30] tGswTLweDecompH
 [502] LweKey::~LweKey()     [101] delete_LweParams       [29] tGswTorus32PolynomialDecompH
 [503] TGswKey::TGswKey(TGswParams const*) [81] delete_LweSample [5] tLweAddMulRTo
 [479] TLweKey::TLweKey(TLweParams const*) [102] delete_TLweKey [67] tLweAddMulTo
 [504] TLweKey::~TLweKey()   [103] delete_TLweParams      [42] tLweAddTo
 [480] LweParams::LweParams(int, double, double) [82] delete_TLweSample [123] tLweApproxPhase
 [481] LweParams::~LweParams() [52] delete_TorusPolynomial [40] tLweClear
 [475] LweSample::LweSample(LweParams const*) [83] delete_TorusPolynomial_array [34] tLweCopy
 [476] LweSample::~LweSample() [65] destroy_IntPolynomial_array [124] tLweKeyGen
 [461] std::normal_distribution<double>::param_type::mean() const [56] destroy_LagrangeHalfCPolynomial_array [46] tLwePhase
 [462] std::normal_distribution<double>::param_type::stddev() const [104] destroy_LweKey [68] tLweSubMulTo
 [451] std::uniform_int_distribution<int>::param_type::a() const [84] destroy_LweSample [69] tLweSubTo
 [452] std::uniform_int_distribution<int>::param_type::b() const [105] destroy_TLweKey [47] tLweSymDecrypt
  [27] std::complex<double>::imag[abi:cxx11]() const [85] destroy_TLweSample [43] tLweSymEncrypt
  [17] std::complex<double>::real[abi:cxx11]() const [86] destroy_TorusPolynomial_array [37] tLweSymEncryptZero
  [31] std::complex<double>::__rep() const [50] dtot32     [6] torusPolynomialAddMulRFFT
 [463] std::normal_distribution<double>::param_type::param_type(double, double) [2] fft_transform [59] torusPolynomialAddMulZTo
 [464] std::normal_distribution<double>::normal_distribution(double, double) [1] fft_transform_reverse [26] torusPolynomialAddTo
 [465] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [66] free_IntPolynomial_array [39] torusPolynomialClear
 [466] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [57] free_LagrangeHalfCPolynomial_array [125] torusPolynomialCopy
 [454] std::uniform_int_distribution<int>::param_type::param_type(int, int) [106] free_LweKey [45] torusPolynomialSubMulRFFT
 [473] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [87] free_LweSample [60] torusPolynomialSubMulZTo
 [457] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [107] free_TLweKey [58] torusPolynomialSubTo
 [458] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [88] free_TLweSample [71] torusPolynomialUniform
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 55.17     12.06    12.06                             fft_transform_reverse
 26.85     17.93     5.87                             fft_transform
  3.61     18.72     0.79   216822     0.00     0.00  FFT_Processor_nayuki::check_alternate_real()
  3.34     19.45     0.73    72274     0.01     0.02  FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*)
  2.24     19.94     0.49    72274     0.01     0.02  FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*)
  2.06     20.39     0.45   216822     0.00     0.00  FFT_Processor_nayuki::check_conjugate_cplx()
  1.33     20.68     0.29    72274     0.00     0.01  FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*)
  0.73     20.84     0.16 148017152     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.50     20.95     0.11 185023488     0.00     0.00  std::complex<double>::complex(double, double)
  0.46     21.05     0.10 148017152     0.00     0.00  double std::real<double>(std::complex<double> const&)
  0.43     21.14     0.10 148017152     0.00     0.00  double std::imag<double>(std::complex<double> const&)
  0.37     21.23     0.08 148017152     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.37     21.30     0.08 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.37     21.39     0.08    77072     0.00     0.00  torusPolynomialAddTo
  0.23     21.43     0.05 37004288     0.00     0.00  double std::abs<double>(std::complex<double> const&)
  0.23     21.48     0.05 37004288     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.21     21.53     0.04 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.18     21.57     0.04 111012864     0.00     0.00  std::complex<double>::__rep() const
  0.18     21.61     0.04 37004288     0.00     0.00  std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.18     21.65     0.04     4800     0.01     0.01  tGswTorus32PolynomialDecompH
  0.14     21.68     0.03 37004288     0.00     0.00  std::__complex_abs(double _Complex)
  0.14     21.71     0.03   433644     0.00     0.00  TLS wrapper function for fp1024_nayuki
  0.14     21.74     0.03   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int)
  0.14     21.77     0.03    24000     0.00     0.00  intPolynomialNormSq2
  0.14     21.80     0.03     8000     0.00     0.00  tLweCopy
  0.09     21.82     0.02    72274     0.00     0.00  LagrangeHalfCPolynomialMul
  0.09     21.84     0.02                             _init
  0.05     21.85     0.01    72272     0.00     0.05  torusPolynomialAddMulRFFT
  0.05     21.86     0.01     5256     0.00     0.00  torusPolynomialClear
  0.00     21.86     0.00  1570467     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.00     21.86     0.00  1570467     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00     21.86     0.00  1436856     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00     21.86     0.00   718428     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00     21.86     0.00   708588     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.00     21.86     0.00   433644     0.00     0.00  TLS init function for fp1024_nayuki
  0.00     21.86     0.00   429679     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00     21.86     0.00   354294     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.00     21.86     0.00   354294     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00     21.86     0.00   240904     0.00     0.00  operator new(unsigned long, void*)
  0.00     21.86     0.00   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL()
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&)
  0.00     21.86     0.00   139280     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  dtot32
  0.00     21.86     0.00   139280     0.00     0.00  gaussian32
  0.00     21.86     0.00    72331     0.00     0.00  TorusPolynomial::TorusPolynomial(int)
  0.00     21.86     0.00    72286     0.00     0.00  TorusPolynomial::~TorusPolynomial()
  0.00     21.86     0.00    72277     0.00     0.00  delete_TorusPolynomial
  0.00     21.86     0.00    72277     0.00     0.00  new_TorusPolynomial
  0.00     21.86     0.00    72274     0.00     0.00  IntPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.02  TorusPolynomial_fft
  0.00     21.86     0.00    72274     0.00     0.03  TorusPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.00  alloc_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  delete_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  destroy_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  free_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  init_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  new_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    24006     0.00     0.00  IntPolynomial::IntPolynomial(int)
  0.00     21.86     0.00    24004     0.00     0.00  IntPolynomial::~IntPolynomial()
  0.00     21.86     0.00    24000     0.00     0.16  tLweAddMulRTo
  0.00     21.86     0.00     4802     0.00     0.00  torusPolynomialSubTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialAddMulZTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialSubMulZTo
  0.00     21.86     0.00     1744     0.00     0.01  tLweClear
  0.00     21.86     0.00     1602     0.00     0.00  alloc_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  init_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  new_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  delete_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  destroy_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  free_IntPolynomial_array
  0.00     21.86     0.00     1600     0.00     2.41  tGswExternProduct
  0.00     21.86     0.00     1600     0.00     0.03  tGswTLweDecompH
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubTo
  0.00     21.86     0.00     1025     0.00     0.00  approxPhase
  0.00     21.86     0.00      272     0.00     0.00  torusPolynomialUniform
  0.00     21.86     0.00      136     0.00     0.11  tLweSymEncryptZero
  0.00     21.86     0.00       24     0.00     0.00  lweClear
  0.00     21.86     0.00       18     0.00     0.00  TLweSample::TLweSample(TLweParams const*)
  0.00     21.86     0.00       18     0.00     0.00  alloc_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  init_TLweSample
  0.00     21.86     0.00       18     0.00     0.00  init_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  new_TorusPolynomial_array
  0.00     21.86     0.00       16     0.00     0.00  lweSymEncrypt
  0.00     21.86     0.00       16     0.00     0.00  modSwitchToTorus32
  0.00     21.86     0.00       16     0.00     0.11  tLweSymEncrypt
  0.00     21.86     0.00        8     0.00     0.09  tGswClear
  0.00     21.86     0.00        8     0.00     1.58  tGswEncryptZero
  0.00     21.86     0.00        4     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00     21.86     0.00        3     0.00     0.00  TLweSample::~TLweSample()
  0.00     21.86     0.00        3     0.00     0.00  LweSample::LweSample(LweParams const*)
  0.00     21.86     0.00        3     0.00     0.00  LweSample::~LweSample()
  0.00     21.86     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  alloc_LweSample
  0.00     21.86     0.00        3     0.00     0.00  alloc_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_LweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  destroy_LweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  free_LweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  init_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_TLweSample
  0.00     21.86     0.00        2     0.00     0.00  TLweKey::TLweKey(TLweParams const*)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::LweParams(int, double, double)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::~LweParams()
  0.00     21.86     0.00        2     0.00     0.00  delete_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.00  modSwitchFromTorus32
  0.00     21.86     0.00        2     0.00     0.00  new_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.05  torusPolynomialSubMulRFFT
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  TGswParams::TGswParams(int, int, TLweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TGswSample::TGswSample(TLweSample*, TLweSample**, int, int)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::TLweParams(int, int, double, double)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::~TLweParams()
  0.00     21.86     0.00        1     0.00     0.00  FFT_Processor_nayuki::FFT_Processor_nayuki(int)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::LweKey(LweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::~LweKey()
  0.00     21.86     0.00        1     0.00     0.00  TGswKey::TGswKey(TGswParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TLweKey::~TLweKey()
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00     21.86     0.00        1     0.00     0.00  alloc_LweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  delete_LweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_LweParams
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  destroy_LweKey
  0.00     21.86     0.00        1     0.00     0.00  destroy_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  free_LweKey
  0.00     21.86     0.00        1     0.00     0.00  free_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_LweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  init_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  lweKeyGen
  0.00     21.86     0.00        1     0.00     0.00  lwePhase
  0.00     21.86     0.00        1     0.00     0.00  lweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  new_LweKey
  0.00     21.86     0.00        1     0.00     0.00  new_LweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswKey
  0.00     21.86     0.00        1     0.00     0.00  new_TGswParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  new_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  new_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  tLweApproxPhase
  0.00     21.86     0.00        1     0.00     0.00  tLweKeyGen
  0.00     21.86     0.00        1     0.00     0.10  tLwePhase
  0.00     21.86     0.00        1     0.00     0.10  tLweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  torusPolynomialCopy

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.05% of 21.86 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     55.2   12.06    0.00                 fft_transform_reverse [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     26.9    5.87    0.00                 fft_transform [2]
-----------------------------------------------
                                                 <spontaneous>
[3]     17.9    0.00    3.91                 main [3]
                0.00    3.86    1600/1600        tGswExternProduct [4]
                0.03    0.00    8000/8000        tLweCopy [34]
                0.00    0.01       8/8           tGswEncryptZero [38]
                0.00    0.00    1600/1600        tLweAddTo [42]
                0.00    0.00      16/16          tLweSymEncrypt [43]
                0.00    0.00       8/8           tGswClear [44]
                0.00    0.00      24/1744        tLweClear [40]
                0.00    0.00       1/1           tLweSymDecrypt [47]
                0.00    0.00      24/5256        torusPolynomialClear [39]
                0.00    0.00    1600/1600        tLweSubTo [69]
                0.00    0.00    1600/1600        tLweAddMulTo [67]
                0.00    0.00    1600/1600        tLweSubMulTo [68]
                0.00    0.00      24/24          lweClear [72]
                0.00    0.00      16/16          modSwitchToTorus32 [78]
                0.00    0.00      16/16          lweSymEncrypt [77]
                0.00    0.00       3/72277       new_TorusPolynomial [53]
                0.00    0.00       3/3           new_LweSample [91]
                0.00    0.00       3/3           new_TLweSample [92]
                0.00    0.00       3/3           delete_TLweSample [82]
                0.00    0.00       3/3           delete_LweSample [81]
                0.00    0.00       3/72277       delete_TorusPolynomial [52]
                0.00    0.00       2/2           new_IntPolynomial [95]
                0.00    0.00       2/2           modSwitchFromTorus32 [94]
                0.00    0.00       2/2           delete_IntPolynomial [93]
                0.00    0.00       1/1           new_LweParams [116]
                0.00    0.00       1/1           new_TLweParams [121]
                0.00    0.00       1/1           new_TGswParams [118]
                0.00    0.00       1/1           new_LweKey [115]
                0.00    0.00       1/1           new_TLweKey [120]
                0.00    0.00       1/1           new_TGswKey [117]
                0.00    0.00       1/1           new_TGswSample [119]
                0.00    0.00       1/1           lweKeyGen [112]
                0.00    0.00       1/1           tLweKeyGen [124]
                0.00    0.00       1/1           lweSymDecrypt [114]
                0.00    0.00       1/1           delete_TLweKey [102]
                0.00    0.00       1/1           delete_LweKey [100]
                0.00    0.00       1/1           delete_TLweParams [103]
                0.00    0.00       1/1           delete_LweParams [101]
-----------------------------------------------
                0.00    3.86    1600/1600        main [3]
[4]     17.7    0.00    3.86    1600         tGswExternProduct [4]
                0.00    3.81   24000/24000       tLweAddMulRTo [5]
                0.00    0.04    1600/1600        tGswTLweDecompH [30]
                0.00    0.01    1600/1744        tLweClear [40]
                0.00    0.00    1600/1602        new_IntPolynomial_array [63]
                0.00    0.00    1600/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    3.81   24000/24000       tGswExternProduct [4]
[5]     17.4    0.00    3.81   24000         tLweAddMulRTo [5]
                0.01    3.77   72000/72272       torusPolynomialAddMulRFFT [6]
                0.03    0.00   24000/24000       intPolynomialNormSq2 [33]
-----------------------------------------------
                0.00    0.01     272/72272       tLweSymEncryptZero [37]
                0.01    3.77   72000/72272       tLweAddMulRTo [5]
[6]     17.4    0.01    3.78   72272         torusPolynomialAddMulRFFT [6]
                0.00    1.85   72272/72274       TorusPolynomial_ifft [7]
                0.00    1.58   72272/72274       TorusPolynomial_fft [8]
                0.02    0.14   72272/72274       LagrangeHalfCPolynomialMul [16]
                0.00    0.11   72272/72274       new_LagrangeHalfCPolynomial_array [20]
                0.08    0.00   72272/77072       torusPolynomialAddTo [26]
                0.00    0.01   72272/72274       IntPolynomial_ifft [41]
                0.00    0.00   72272/72277       new_TorusPolynomial [53]
                0.00    0.00   72272/72277       delete_TorusPolynomial [52]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.85   72272/72274       torusPolynomialAddMulRFFT [6]
[7]      8.5    0.00    1.85   72274         TorusPolynomial_ifft [7]
                0.49    0.63   72274/72274       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.29    0.44   72274/72274       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.58   72272/72274       torusPolynomialAddMulRFFT [6]
[8]      7.2    0.00    1.58   72274         TorusPolynomial_fft [8]
                0.73    0.85   72274/72274       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.73    0.85   72274/72274       TorusPolynomial_fft [8]
[9]      7.2    0.73    0.85   72274         FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.10    0.16 148017152/148017152     double std::real<double>(std::complex<double> const&) [14]
                0.10    0.08 148017152/148017152     double std::imag<double>(std::complex<double> const&) [15]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
-----------------------------------------------
                0.49    0.63   72274/72274       TorusPolynomial_ifft [7]
[10]     5.1    0.49    0.63   72274         FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
                0.04    0.06 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
                0.05    0.04 37004288/37004288     double std::abs<double>(std::complex<double> const&) [25]
                0.02    0.00 37004288/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[11]     3.6    0.79    0.00  216822         FFT_Processor_nayuki::check_alternate_real() [11]
-----------------------------------------------
                0.29    0.44   72274/72274       TorusPolynomial_ifft [7]
[12]     3.3    0.29    0.44   72274         FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
                0.02    0.00 37004288/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[13]     2.1    0.45    0.00  216822         FFT_Processor_nayuki::check_conjugate_cplx() [13]
-----------------------------------------------
                0.10    0.16 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[14]     1.2    0.10    0.16 148017152         double std::real<double>(std::complex<double> const&) [14]
                0.16    0.00 148017152/148017152     std::complex<double>::real[abi:cxx11]() const [17]
-----------------------------------------------
                0.10    0.08 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[15]     0.8    0.10    0.08 148017152         double std::imag<double>(std::complex<double> const&) [15]
                0.08    0.00 148017152/148017152     std::complex<double>::imag[abi:cxx11]() const [27]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.02    0.14   72272/72274       torusPolynomialAddMulRFFT [6]
[16]     0.7    0.02    0.14   72274         LagrangeHalfCPolynomialMul [16]
                0.05    0.09 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
-----------------------------------------------
                0.16    0.00 148017152/148017152     double std::real<double>(std::complex<double> const&) [14]
[17]     0.7    0.16    0.00 148017152         std::complex<double>::real[abi:cxx11]() const [17]
-----------------------------------------------
                0.05    0.09 37004288/37004288     LagrangeHalfCPolynomialMul [16]
[18]     0.7    0.05    0.09 37004288         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
                0.08    0.01 37004288/37004288     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
-----------------------------------------------
                0.00    0.11   72274/72274       new_LagrangeHalfCPolynomial_array [20]
[19]     0.5    0.00    0.11   72274         init_LagrangeHalfCPolynomial_array [19]
                0.03    0.08  216822/216822      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
                0.00    0.00  216822/240904      operator new(unsigned long, void*) [459]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.11   72272/72274       torusPolynomialAddMulRFFT [6]
[20]     0.5    0.00    0.11   72274         new_LagrangeHalfCPolynomial_array [20]
                0.00    0.11   72274/72274       init_LagrangeHalfCPolynomial_array [19]
                0.00    0.00   72274/72274       alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.03    0.08  216822/216822      init_LagrangeHalfCPolynomial_array [19]
[21]     0.5    0.03    0.08  216822         LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
                0.07    0.00 111012864/185023488     std::complex<double>::complex(double, double) [22]
                0.01    0.00  216822/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00    2048/185023488     FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.02    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.02    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.07    0.00 111012864/185023488     LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
[22]     0.5    0.11    0.00 185023488         std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.04    0.06 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[23]     0.4    0.04    0.06 37004288         std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
                0.04    0.01 37004288/37004288     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
-----------------------------------------------
                0.08    0.01 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
[24]     0.4    0.08    0.01 37004288         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.05    0.04 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[25]     0.4    0.05    0.04 37004288         double std::abs<double>(std::complex<double> const&) [25]
                0.03    0.00 37004288/37004288     std::__complex_abs(double _Complex) [35]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.00    0.00    4800/77072       tLweAddTo [42]
                0.08    0.00   72272/77072       torusPolynomialAddMulRFFT [6]
[26]     0.4    0.08    0.00   77072         torusPolynomialAddTo [26]
-----------------------------------------------
                0.08    0.00 148017152/148017152     double std::imag<double>(std::complex<double> const&) [15]
[27]     0.4    0.08    0.00 148017152         std::complex<double>::imag[abi:cxx11]() const [27]
-----------------------------------------------
                0.04    0.01 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
[28]     0.3    0.04    0.01 37004288         std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.04    0.00    4800/4800        tGswTLweDecompH [30]
[29]     0.2    0.04    0.00    4800         tGswTorus32PolynomialDecompH [29]
-----------------------------------------------
                0.00    0.04    1600/1600        tGswExternProduct [4]
[30]     0.2    0.00    0.04    1600         tGswTLweDecompH [30]
                0.04    0.00    4800/4800        tGswTorus32PolynomialDecompH [29]
-----------------------------------------------
                0.01    0.00 37004288/111012864     double std::abs<double>(std::complex<double> const&) [25]
                0.01    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
                0.01    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
[31]     0.2    0.04    0.00 111012864         std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.01    0.00   72274/433644      IntPolynomial_ifft [41]
                0.01    0.00   72274/433644      TorusPolynomial_ifft [7]
                0.01    0.00   72274/433644      TorusPolynomial_fft [8]
                0.01    0.00  216822/433644      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
[32]     0.1    0.03    0.00  433644         TLS wrapper function for fp1024_nayuki [32]
                0.00    0.00  433644/433644      TLS init function for fp1024_nayuki [48]
-----------------------------------------------
                0.03    0.00   24000/24000       tLweAddMulRTo [5]
[33]     0.1    0.03    0.00   24000         intPolynomialNormSq2 [33]
-----------------------------------------------
                0.03    0.00    8000/8000        main [3]
[34]     0.1    0.03    0.00    8000         tLweCopy [34]
-----------------------------------------------
                0.03    0.00 37004288/37004288     double std::abs<double>(std::complex<double> const&) [25]
[35]     0.1    0.03    0.00 37004288         std::__complex_abs(double _Complex) [35]
-----------------------------------------------
                                                 <spontaneous>
[36]     0.1    0.02    0.00                 _init [36]
-----------------------------------------------
                0.00    0.00      16/136         tLweSymEncrypt [43]
                0.00    0.01     120/136         tGswEncryptZero [38]
[37]     0.1    0.00    0.01     136         tLweSymEncryptZero [37]
                0.00    0.01     272/72272       torusPolynomialAddMulRFFT [6]
                0.00    0.00  139264/139280      gaussian32 [51]
                0.00    0.00     272/272         torusPolynomialUniform [71]
-----------------------------------------------
                0.00    0.01       8/8           main [3]
[38]     0.1    0.00    0.01       8         tGswEncryptZero [38]
                0.00    0.01     120/136         tLweSymEncryptZero [37]
-----------------------------------------------
                0.00    0.00      24/5256        main [3]
                0.01    0.00    5232/5256        tLweClear [40]
[39]     0.0    0.01    0.00    5256         torusPolynomialClear [39]
-----------------------------------------------
                0.00    0.00      24/1744        main [3]
                0.00    0.00     120/1744        tGswClear [44]
                0.00    0.01    1600/1744        tGswExternProduct [4]
[40]     0.0    0.00    0.01    1744         tLweClear [40]
                0.01    0.00    5232/5256        torusPolynomialClear [39]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.01   72272/72274       torusPolynomialAddMulRFFT [6]
[41]     0.0    0.00    0.01   72274         IntPolynomial_ifft [41]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[42]     0.0    0.00    0.00    1600         tLweAddTo [42]
                0.00    0.00    4800/77072       torusPolynomialAddTo [26]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[43]     0.0    0.00    0.00      16         tLweSymEncrypt [43]
                0.00    0.00      16/136         tLweSymEncryptZero [37]
-----------------------------------------------
                0.00    0.00       8/8           main [3]
[44]     0.0    0.00    0.00       8         tGswClear [44]
                0.00    0.00     120/1744        tLweClear [40]
-----------------------------------------------
                0.00    0.00       2/2           tLwePhase [46]
[45]     0.0    0.00    0.00       2         torusPolynomialSubMulRFFT [45]
                0.00    0.00       2/72274       TorusPolynomial_ifft [7]
                0.00    0.00       2/72274       TorusPolynomial_fft [8]
                0.00    0.00       2/72274       LagrangeHalfCPolynomialMul [16]
                0.00    0.00       2/72274       new_LagrangeHalfCPolynomial_array [20]
                0.00    0.00       2/72274       IntPolynomial_ifft [41]
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
                0.00    0.00       2/72277       new_TorusPolynomial [53]
                0.00    0.00       2/4802        torusPolynomialSubTo [58]
                0.00    0.00       2/72277       delete_TorusPolynomial [52]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[46]     0.0    0.00    0.00       1         tLwePhase [46]
                0.00    0.00       2/2           torusPolynomialSubMulRFFT [45]
                0.00    0.00       1/1           torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[47]     0.0    0.00    0.00       1         tLweSymDecrypt [47]
                0.00    0.00       1/1           tLwePhase [46]
                0.00    0.00       1/1           tLweApproxPhase [123]
-----------------------------------------------
                0.00    0.00  433644/433644      TLS wrapper function for fp1024_nayuki [32]
[48]     0.0    0.00    0.00  433644         TLS init function for fp1024_nayuki [48]
                0.00    0.00       1/1           FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
-----------------------------------------------
                0.00    0.00       1/1           TLS init function for fp1024_nayuki [48]
[49]     0.0    0.00    0.00       1         FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.00    0.00    2048/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[50]     0.0    0.00    0.00  139280         dtot32 [50]
-----------------------------------------------
                0.00    0.00      16/139280      lweSymEncrypt [77]
                0.00    0.00  139264/139280      tLweSymEncryptZero [37]
[51]     0.0    0.00    0.00  139280         gaussian32 [51]
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [464]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
                0.00    0.00  139280/139280      dtot32 [50]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[52]     0.0    0.00    0.00   72277         delete_TorusPolynomial [52]
                0.00    0.00   72277/72286       TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[53]     0.0    0.00    0.00   72277         new_TorusPolynomial [53]
                0.00    0.00   72277/72331       TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00   72274/72274       new_LagrangeHalfCPolynomial_array [20]
[54]     0.0    0.00    0.00   72274         alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.00    0.00   72274/72274       torusPolynomialSubMulRFFT [45]
[55]     0.0    0.00    0.00   72274         delete_LagrangeHalfCPolynomial_array [55]
                0.00    0.00   72274/72274       destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00   72274/72274       free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[56]     0.0    0.00    0.00   72274         destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00  216822/216822      LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [460]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[57]     0.0    0.00    0.00   72274         free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00       2/4802        torusPolynomialSubMulRFFT [45]
                0.00    0.00    4800/4802        tLweSubTo [69]
[58]     0.0    0.00    0.00    4802         torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweAddMulTo [67]
[59]     0.0    0.00    0.00    4800         torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweSubMulTo [68]
[60]     0.0    0.00    0.00    4800         torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[61]     0.0    0.00    0.00    1602         alloc_IntPolynomial_array [61]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[62]     0.0    0.00    0.00    1602         init_IntPolynomial_array [62]
                0.00    0.00   24004/240904      operator new(unsigned long, void*) [459]
                0.00    0.00   24004/24006       IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       2/1602        TLweKey::TLweKey(TLweParams const*) [479]
                0.00    0.00    1600/1602        tGswExternProduct [4]
[63]     0.0    0.00    0.00    1602         new_IntPolynomial_array [63]
                0.00    0.00    1602/1602        alloc_IntPolynomial_array [61]
                0.00    0.00    1602/1602        init_IntPolynomial_array [62]
-----------------------------------------------
                0.00    0.00       1/1601        TLweKey::~TLweKey() [504]
                0.00    0.00    1600/1601        tGswExternProduct [4]
[64]     0.0    0.00    0.00    1601         delete_IntPolynomial_array [64]
                0.00    0.00    1601/1601        destroy_IntPolynomial_array [65]
                0.00    0.00    1601/1601        free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[65]     0.0    0.00    0.00    1601         destroy_IntPolynomial_array [65]
                0.00    0.00   24002/24004       IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[66]     0.0    0.00    0.00    1601         free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[67]     0.0    0.00    0.00    1600         tLweAddMulTo [67]
                0.00    0.00    4800/4800        torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[68]     0.0    0.00    0.00    1600         tLweSubMulTo [68]
                0.00    0.00    4800/4800        torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[69]     0.0    0.00    0.00    1600         tLweSubTo [69]
                0.00    0.00    4800/4802        torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00       1/1025        lweSymDecrypt [114]
                0.00    0.00    1024/1025        tLweApproxPhase [123]
[70]     0.0    0.00    0.00    1025         approxPhase [70]
-----------------------------------------------
                0.00    0.00     272/272         tLweSymEncryptZero [37]
[71]     0.0    0.00    0.00     272         torusPolynomialUniform [71]
                0.00    0.00  278528/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
-----------------------------------------------
                0.00    0.00      24/24          main [3]
[72]     0.0    0.00    0.00      24         lweClear [72]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[73]     0.0    0.00    0.00      18         alloc_TorusPolynomial_array [73]
-----------------------------------------------
                0.00    0.00       3/18          new_TLweSample [92]
                0.00    0.00      15/18          init_TLweSample_array [111]
[74]     0.0    0.00    0.00      18         init_TLweSample [74]
                0.00    0.00      18/240904      operator new(unsigned long, void*) [459]
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [472]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[75]     0.0    0.00    0.00      18         init_TorusPolynomial_array [75]
                0.00    0.00      54/240904      operator new(unsigned long, void*) [459]
                0.00    0.00      54/72331       TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [472]
[76]     0.0    0.00    0.00      18         new_TorusPolynomial_array [76]
                0.00    0.00      18/18          alloc_TorusPolynomial_array [73]
                0.00    0.00      18/18          init_TorusPolynomial_array [75]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[77]     0.0    0.00    0.00      16         lweSymEncrypt [77]
                0.00    0.00    7696/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00      16/139280      gaussian32 [51]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[78]     0.0    0.00    0.00      16         modSwitchToTorus32 [78]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[79]     0.0    0.00    0.00       3         alloc_LweSample [79]
-----------------------------------------------
                0.00    0.00       3/3           new_TLweSample [92]
[80]     0.0    0.00    0.00       3         alloc_TLweSample [80]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[81]     0.0    0.00    0.00       3         delete_LweSample [81]
                0.00    0.00       3/3           destroy_LweSample [84]
                0.00    0.00       3/3           free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[82]     0.0    0.00    0.00       3         delete_TLweSample [82]
                0.00    0.00       3/3           destroy_TLweSample [85]
-----------------------------------------------
                0.00    0.00       3/3           TLweSample::~TLweSample() [474]
[83]     0.0    0.00    0.00       3         delete_TorusPolynomial_array [83]
                0.00    0.00       3/3           destroy_TorusPolynomial_array [86]
                0.00    0.00       3/3           free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[84]     0.0    0.00    0.00       3         destroy_LweSample [84]
                0.00    0.00       3/3           LweSample::~LweSample() [476]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [82]
[85]     0.0    0.00    0.00       3         destroy_TLweSample [85]
                0.00    0.00       3/3           TLweSample::~TLweSample() [474]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[86]     0.0    0.00    0.00       3         destroy_TorusPolynomial_array [86]
                0.00    0.00       9/72286       TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[87]     0.0    0.00    0.00       3         free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample_array [201]
[88]     0.0    0.00    0.00       3         free_TLweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[89]     0.0    0.00    0.00       3         free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[90]     0.0    0.00    0.00       3         init_LweSample [90]
                0.00    0.00       3/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       3/3           LweSample::LweSample(LweParams const*) [475]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[91]     0.0    0.00    0.00       3         new_LweSample [91]
                0.00    0.00       3/3           alloc_LweSample [79]
                0.00    0.00       3/3           init_LweSample [90]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[92]     0.0    0.00    0.00       3         new_TLweSample [92]
                0.00    0.00       3/3           alloc_TLweSample [80]
                0.00    0.00       3/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[93]     0.0    0.00    0.00       2         delete_IntPolynomial [93]
                0.00    0.00       2/24004       IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[94]     0.0    0.00    0.00       2         modSwitchFromTorus32 [94]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[95]     0.0    0.00    0.00       2         new_IntPolynomial [95]
                0.00    0.00       2/24006       IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[96]     0.0    0.00    0.00       1         alloc_LweKey [96]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[97]     0.0    0.00    0.00       1         alloc_TGswSample [97]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[98]     0.0    0.00    0.00       1         alloc_TLweKey [98]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[99]     0.0    0.00    0.00       1         alloc_TLweSample_array [99]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[100]    0.0    0.00    0.00       1         delete_LweKey [100]
                0.00    0.00       1/1           free_LweKey [106]
                0.00    0.00       1/1           destroy_LweKey [104]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[101]    0.0    0.00    0.00       1         delete_LweParams [101]
                0.00    0.00       1/2           LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[102]    0.0    0.00    0.00       1         delete_TLweKey [102]
                0.00    0.00       1/1           destroy_TLweKey [105]
                0.00    0.00       1/1           free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[103]    0.0    0.00    0.00       1         delete_TLweParams [103]
                0.00    0.00       1/1           TLweParams::~TLweParams() [500]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[104]    0.0    0.00    0.00       1         destroy_LweKey [104]
                0.00    0.00       1/1           LweKey::~LweKey() [502]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[105]    0.0    0.00    0.00       1         destroy_TLweKey [105]
                0.00    0.00       1/1           TLweKey::~TLweKey() [504]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[106]    0.0    0.00    0.00       1         free_LweKey [106]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[107]    0.0    0.00    0.00       1         free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[108]    0.0    0.00    0.00       1         init_LweKey [108]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/1           LweKey::LweKey(LweParams const*) [501]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[109]    0.0    0.00    0.00       1         init_TGswSample [109]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [494]
                0.00    0.00       1/1           new_TLweSample_array [122]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/1           TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[110]    0.0    0.00    0.00       1         init_TLweKey [110]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [479]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[111]    0.0    0.00    0.00       1         init_TLweSample_array [111]
                0.00    0.00      15/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[112]    0.0    0.00    0.00       1         lweKeyGen [112]
                0.00    0.00     481/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           lweSymDecrypt [114]
[113]    0.0    0.00    0.00       1         lwePhase [113]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[114]    0.0    0.00    0.00       1         lweSymDecrypt [114]
                0.00    0.00       1/1           lwePhase [113]
                0.00    0.00       1/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[115]    0.0    0.00    0.00       1         new_LweKey [115]
                0.00    0.00       1/1           alloc_LweKey [96]
                0.00    0.00       1/1           init_LweKey [108]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[116]    0.0    0.00    0.00       1         new_LweParams [116]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[117]    0.0    0.00    0.00       1         new_TGswKey [117]
                0.00    0.00       1/1           TGswKey::TGswKey(TGswParams const*) [503]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[118]    0.0    0.00    0.00       1         new_TGswParams [118]
                0.00    0.00       1/1           TGswParams::TGswParams(int, int, TLweParams const*) [497]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[119]    0.0    0.00    0.00       1         new_TGswSample [119]
                0.00    0.00       1/1           alloc_TGswSample [97]
                0.00    0.00       1/1           init_TGswSample [109]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[120]    0.0    0.00    0.00       1         new_TLweKey [120]
                0.00    0.00       1/1           alloc_TLweKey [98]
                0.00    0.00       1/1           init_TLweKey [110]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[121]    0.0    0.00    0.00       1         new_TLweParams [121]
                0.00    0.00       1/1           TLweParams::TLweParams(int, int, double, double) [499]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[122]    0.0    0.00    0.00       1         new_TLweSample_array [122]
                0.00    0.00       1/1           alloc_TLweSample_array [99]
                0.00    0.00       1/1           init_TLweSample_array [111]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[123]    0.0    0.00    0.00       1         tLweApproxPhase [123]
                0.00    0.00    1024/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[124]    0.0    0.00    0.00       1         tLweKeyGen [124]
                0.00    0.00    2048/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           tLwePhase [46]
[125]    0.0    0.00    0.00       1         torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00  708588/1570467     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
                0.00    0.00  861879/1570467     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[449]    0.0    0.00    0.00 1570467         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1570467/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
[450]    0.0    0.00    0.00 1570467         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1436856/1436856     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[451]    0.0    0.00    0.00 1436856         std::uniform_int_distribution<int>::param_type::a() const [451]
-----------------------------------------------
                0.00    0.00  718428/718428      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[452]    0.0    0.00    0.00  718428         std::uniform_int_distribution<int>::param_type::b() const [452]
-----------------------------------------------
                0.00    0.00  708588/708588      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
[453]    0.0    0.00    0.00  708588         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [453]
-----------------------------------------------
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00  429675/429679      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[454]    0.0    0.00    0.00  429679         std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
-----------------------------------------------
                0.00    0.00  354294/354294      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[455]    0.0    0.00    0.00  354294         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
                0.00    0.00  354294/354294      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
-----------------------------------------------
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
[456]    0.0    0.00    0.00  354294         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
                0.00    0.00  708588/708588      std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [453]
                0.00    0.00  708588/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
-----------------------------------------------
                0.00    0.00     481/288753      lweKeyGen [112]
                0.00    0.00    2048/288753      tLweKeyGen [124]
                0.00    0.00    7696/288753      lweSymEncrypt [77]
                0.00    0.00  278528/288753      torusPolynomialUniform [71]
[457]    0.0    0.00    0.00  288753         int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
-----------------------------------------------
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
[458]    0.0    0.00    0.00  288753+429675  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
                0.00    0.00 1436856/1436856     std::uniform_int_distribution<int>::param_type::a() const [451]
                0.00    0.00  861879/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00  718428/718428      std::uniform_int_distribution<int>::param_type::b() const [452]
                0.00    0.00  429675/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
-----------------------------------------------
                0.00    0.00       1/240904      init_LweKey [108]
                0.00    0.00       1/240904      init_TGswSample [109]
                0.00    0.00       1/240904      init_TLweKey [110]
                0.00    0.00       3/240904      init_LweSample [90]
                0.00    0.00      18/240904      init_TLweSample [74]
                0.00    0.00      54/240904      init_TorusPolynomial_array [75]
                0.00    0.00   24004/240904      init_IntPolynomial_array [62]
                0.00    0.00  216822/240904      init_LagrangeHalfCPolynomial_array [19]
[459]    0.0    0.00    0.00  240904         operator new(unsigned long, void*) [459]
-----------------------------------------------
                0.00    0.00  216822/216822      destroy_LagrangeHalfCPolynomial_array [56]
[460]    0.0    0.00    0.00  216822         LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [460]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[461]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::mean() const [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[462]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::stddev() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [464]
[463]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::param_type(double, double) [463]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[464]    0.0    0.00    0.00  139280         std::normal_distribution<double>::normal_distribution(double, double) [464]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::param_type(double, double) [463]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[465]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
[466]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
                0.00    0.00  139280/139280      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [467]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::stddev() const [462]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::mean() const [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[467]    0.0    0.00    0.00  139280         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [467]
-----------------------------------------------
                0.00    0.00      54/72331       init_TorusPolynomial_array [75]
                0.00    0.00   72277/72331       new_TorusPolynomial [53]
[468]    0.0    0.00    0.00   72331         TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00       9/72286       destroy_TorusPolynomial_array [86]
                0.00    0.00   72277/72286       delete_TorusPolynomial [52]
[469]    0.0    0.00    0.00   72286         TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       2/24006       new_IntPolynomial [95]
                0.00    0.00   24004/24006       init_IntPolynomial_array [62]
[470]    0.0    0.00    0.00   24006         IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       2/24004       delete_IntPolynomial [93]
                0.00    0.00   24002/24004       destroy_IntPolynomial_array [65]
[471]    0.0    0.00    0.00   24004         IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00      18/18          init_TLweSample [74]
[472]    0.0    0.00    0.00      18         TLweSample::TLweSample(TLweParams const*) [472]
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
-----------------------------------------------
                0.00    0.00       1/4           lweKeyGen [112]
                0.00    0.00       1/4           tLweKeyGen [124]
                0.00    0.00       2/4           __static_initialization_and_destruction_0(int, int) [491]
[473]    0.0    0.00    0.00       4         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
-----------------------------------------------
                0.00    0.00       3/3           destroy_TLweSample [85]
[474]    0.0    0.00    0.00       3         TLweSample::~TLweSample() [474]
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
-----------------------------------------------
                0.00    0.00       3/3           init_LweSample [90]
[475]    0.0    0.00    0.00       3         LweSample::LweSample(LweParams const*) [475]
-----------------------------------------------
                0.00    0.00       3/3           destroy_LweSample [84]
[476]    0.0    0.00    0.00       3         LweSample::~LweSample() [476]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
[477]    0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [477]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
[478]    0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [477]
-----------------------------------------------
                0.00    0.00       1/2           TGswKey::TGswKey(TGswParams const*) [503]
                0.00    0.00       1/2           init_TLweKey [110]
[479]    0.0    0.00    0.00       2         TLweKey::TLweKey(TLweParams const*) [479]
                0.00    0.00       2/1602        new_IntPolynomial_array [63]
-----------------------------------------------
                0.00    0.00       1/2           new_LweParams [116]
                0.00    0.00       1/2           TLweParams::TLweParams(int, int, double, double) [499]
[480]    0.0    0.00    0.00       2         LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/2           delete_LweParams [101]
                0.00    0.00       1/2           TLweParams::~TLweParams() [500]
[481]    0.0    0.00    0.00       2         LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [521]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_bootsNAND [512]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKeyFFT [517]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKey [516]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_lweKeyGen [520]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16renormalizeKSkeyP15LweKeySwitchKeyPK6LweKeyPKi [508]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_debug_accum_key [513]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN19LweBootstrappingKeyC2EPK9LweParamsPK10TGswParamsPK10TLweParamsS2_P10TGswSampleP15LweKeySwitchKey [510]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN13IntPolynomialC2Ei [509]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [515]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
                0.00    0.00       2/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
-----------------------------------------------
                0.00    0.00       1/1           TFheGateBootstrappingParameterSet::TFheGateBootstrappingParameterSet(int, int, LweParams const*, TGswParams const*) [626]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK10StdIstream7getLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [511]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSample [518]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_tLweKeyGen [522]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswParams [118]
[497]    0.0    0.00    0.00       1         TGswParams::TGswParams(int, int, TLweParams const*) [497]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[498]    0.0    0.00    0.00       1         TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweParams [121]
[499]    0.0    0.00    0.00       1         TLweParams::TLweParams(int, int, double, double) [499]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweParams [103]
[500]    0.0    0.00    0.00       1         TLweParams::~TLweParams() [500]
                0.00    0.00       1/2           LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           init_LweKey [108]
[501]    0.0    0.00    0.00       1         LweKey::LweKey(LweParams const*) [501]
-----------------------------------------------
                0.00    0.00       1/1           destroy_LweKey [104]
[502]    0.0    0.00    0.00       1         LweKey::~LweKey() [502]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswKey [117]
[503]    0.0    0.00    0.00       1         TGswKey::TGswKey(TGswParams const*) [503]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [479]
-----------------------------------------------
                0.00    0.00       1/1           destroy_TLweKey [105]
[504]    0.0    0.00    0.00       1         TLweKey::~TLweKey() [504]
                0.00    0.00       1/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
[505]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
[506]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [491]
[507]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
-----------------------------------------------
                             1570467             std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
[987]    0.0    0.00    0.00       0+1570467 std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
                             1570467             std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [41] IntPolynomial_ifft    [453] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [89] free_TorusPolynomial_array
  [16] LagrangeHalfCPolynomialMul [505] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [51] gaussian32
   [8] TorusPolynomial_fft   [506] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [62] init_IntPolynomial_array
   [7] TorusPolynomial_ifft  [507] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [19] init_LagrangeHalfCPolynomial_array
 [482] __static_initialization_and_destruction_0(int, int) [449] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [108] init_LweKey
 [483] __static_initialization_and_destruction_0(int, int) [22] std::complex<double>::complex(double, double) [90] init_LweSample
 [484] __static_initialization_and_destruction_0(int, int) [28] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [109] init_TGswSample
 [485] __static_initialization_and_destruction_0(int, int) [24] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [110] init_TLweKey
 [486] __static_initialization_and_destruction_0(int, int) [477] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [74] init_TLweSample
 [487] __static_initialization_and_destruction_0(int, int) [450] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [111] init_TLweSample_array
 [488] __static_initialization_and_destruction_0(int, int) [478] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [75] init_TorusPolynomial_array
 [489] __static_initialization_and_destruction_0(int, int) [467] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [33] intPolynomialNormSq2
 [490] __static_initialization_and_destruction_0(int, int) [455] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [72] lweClear
 [491] __static_initialization_and_destruction_0(int, int) [35] std::__complex_abs(double _Complex) [112] lweKeyGen
 [492] __static_initialization_and_destruction_0(int, int) [456] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [113] lwePhase
 [493] __static_initialization_and_destruction_0(int, int) [25] double std::abs<double>(std::complex<double> const&) [114] lweSymDecrypt
 [494] __static_initialization_and_destruction_0(int, int) [15] double std::imag<double>(std::complex<double> const&) [77] lweSymEncrypt
 [495] __static_initialization_and_destruction_0(int, int) [14] double std::real<double>(std::complex<double> const&) [94] modSwitchFromTorus32
 [496] __static_initialization_and_destruction_0(int, int) [23] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [78] modSwitchToTorus32
 [497] TGswParams::TGswParams(int, int, TLweParams const*) [18] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [95] new_IntPolynomial
 [498] TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [48] TLS init function for fp1024_nayuki [63] new_IntPolynomial_array
 [499] TLweParams::TLweParams(int, int, double, double) [32] TLS wrapper function for fp1024_nayuki [20] new_LagrangeHalfCPolynomial_array
 [500] TLweParams::~TLweParams() [459] operator new(unsigned long, void*) [115] new_LweKey
 [472] TLweSample::TLweSample(TLweParams const*) [36] _init [116] new_LweParams
 [474] TLweSample::~TLweSample() [61] alloc_IntPolynomial_array [91] new_LweSample
 [470] IntPolynomial::IntPolynomial(int) [54] alloc_LagrangeHalfCPolynomial_array [117] new_TGswKey
 [471] IntPolynomial::~IntPolynomial() [96] alloc_LweKey [118] new_TGswParams
 [468] TorusPolynomial::TorusPolynomial(int) [79] alloc_LweSample [119] new_TGswSample
 [469] TorusPolynomial::~TorusPolynomial() [97] alloc_TGswSample [120] new_TLweKey
  [10] FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [98] alloc_TLweKey [121] new_TLweParams
  [11] FFT_Processor_nayuki::check_alternate_real() [80] alloc_TLweSample [92] new_TLweSample
  [13] FFT_Processor_nayuki::check_conjugate_cplx() [99] alloc_TLweSample_array [122] new_TLweSample_array
   [9] FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [73] alloc_TorusPolynomial_array [53] new_TorusPolynomial
  [12] FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [70] approxPhase [76] new_TorusPolynomial_array
  [49] FFT_Processor_nayuki::FFT_Processor_nayuki(int) [93] delete_IntPolynomial [44] tGswClear
  [21] LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [64] delete_IntPolynomial_array [38] tGswEncryptZero
 [460] LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [55] delete_LagrangeHalfCPolynomial_array [4] tGswExternProduct
 [501] LweKey::LweKey(LweParams const*) [100] delete_LweKey [30] tGswTLweDecompH
 [502] LweKey::~LweKey()     [101] delete_LweParams       [29] tGswTorus32PolynomialDecompH
 [503] TGswKey::TGswKey(TGswParams const*) [81] delete_LweSample [5] tLweAddMulRTo
 [479] TLweKey::TLweKey(TLweParams const*) [102] delete_TLweKey [67] tLweAddMulTo
 [504] TLweKey::~TLweKey()   [103] delete_TLweParams      [42] tLweAddTo
 [480] LweParams::LweParams(int, double, double) [82] delete_TLweSample [123] tLweApproxPhase
 [481] LweParams::~LweParams() [52] delete_TorusPolynomial [40] tLweClear
 [475] LweSample::LweSample(LweParams const*) [83] delete_TorusPolynomial_array [34] tLweCopy
 [476] LweSample::~LweSample() [65] destroy_IntPolynomial_array [124] tLweKeyGen
 [461] std::normal_distribution<double>::param_type::mean() const [56] destroy_LagrangeHalfCPolynomial_array [46] tLwePhase
 [462] std::normal_distribution<double>::param_type::stddev() const [104] destroy_LweKey [68] tLweSubMulTo
 [451] std::uniform_int_distribution<int>::param_type::a() const [84] destroy_LweSample [69] tLweSubTo
 [452] std::uniform_int_distribution<int>::param_type::b() const [105] destroy_TLweKey [47] tLweSymDecrypt
  [27] std::complex<double>::imag[abi:cxx11]() const [85] destroy_TLweSample [43] tLweSymEncrypt
  [17] std::complex<double>::real[abi:cxx11]() const [86] destroy_TorusPolynomial_array [37] tLweSymEncryptZero
  [31] std::complex<double>::__rep() const [50] dtot32     [6] torusPolynomialAddMulRFFT
 [463] std::normal_distribution<double>::param_type::param_type(double, double) [2] fft_transform [59] torusPolynomialAddMulZTo
 [464] std::normal_distribution<double>::normal_distribution(double, double) [1] fft_transform_reverse [26] torusPolynomialAddTo
 [465] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [66] free_IntPolynomial_array [39] torusPolynomialClear
 [466] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [57] free_LagrangeHalfCPolynomial_array [125] torusPolynomialCopy
 [454] std::uniform_int_distribution<int>::param_type::param_type(int, int) [106] free_LweKey [45] torusPolynomialSubMulRFFT
 [473] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [87] free_LweSample [60] torusPolynomialSubMulZTo
 [457] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [107] free_TLweKey [58] torusPolynomialSubTo
 [458] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [88] free_TLweSample [71] torusPolynomialUniform
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 55.17     12.06    12.06                             fft_transform_reverse
 26.85     17.93     5.87                             fft_transform
  3.61     18.72     0.79   216822     0.00     0.00  FFT_Processor_nayuki::check_alternate_real()
  3.34     19.45     0.73    72274     0.01     0.02  FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*)
  2.24     19.94     0.49    72274     0.01     0.02  FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*)
  2.06     20.39     0.45   216822     0.00     0.00  FFT_Processor_nayuki::check_conjugate_cplx()
  1.33     20.68     0.29    72274     0.00     0.01  FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*)
  0.73     20.84     0.16 148017152     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.50     20.95     0.11 185023488     0.00     0.00  std::complex<double>::complex(double, double)
  0.46     21.05     0.10 148017152     0.00     0.00  double std::real<double>(std::complex<double> const&)
  0.43     21.14     0.10 148017152     0.00     0.00  double std::imag<double>(std::complex<double> const&)
  0.37     21.23     0.08 148017152     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.37     21.30     0.08 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.37     21.39     0.08    77072     0.00     0.00  torusPolynomialAddTo
  0.23     21.43     0.05 37004288     0.00     0.00  double std::abs<double>(std::complex<double> const&)
  0.23     21.48     0.05 37004288     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.21     21.53     0.04 37004288     0.00     0.00  std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.18     21.57     0.04 111012864     0.00     0.00  std::complex<double>::__rep() const
  0.18     21.61     0.04 37004288     0.00     0.00  std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.18     21.65     0.04     4800     0.01     0.01  tGswTorus32PolynomialDecompH
  0.14     21.68     0.03 37004288     0.00     0.00  std::__complex_abs(double _Complex)
  0.14     21.71     0.03   433644     0.00     0.00  TLS wrapper function for fp1024_nayuki
  0.14     21.74     0.03   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int)
  0.14     21.77     0.03    24000     0.00     0.00  intPolynomialNormSq2
  0.14     21.80     0.03     8000     0.00     0.00  tLweCopy
  0.09     21.82     0.02    72274     0.00     0.00  LagrangeHalfCPolynomialMul
  0.09     21.84     0.02                             _init
  0.05     21.85     0.01    72272     0.00     0.05  torusPolynomialAddMulRFFT
  0.05     21.86     0.01     5256     0.00     0.00  torusPolynomialClear
  0.00     21.86     0.00  1570467     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.00     21.86     0.00  1570467     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00     21.86     0.00  1436856     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00     21.86     0.00   718428     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00     21.86     0.00   708588     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.00     21.86     0.00   433644     0.00     0.00  TLS init function for fp1024_nayuki
  0.00     21.86     0.00   429679     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00     21.86     0.00   354294     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.00     21.86     0.00   354294     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00     21.86     0.00   240904     0.00     0.00  operator new(unsigned long, void*)
  0.00     21.86     0.00   216822     0.00     0.00  LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL()
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&)
  0.00     21.86     0.00   139280     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00     21.86     0.00   139280     0.00     0.00  dtot32
  0.00     21.86     0.00   139280     0.00     0.00  gaussian32
  0.00     21.86     0.00    72331     0.00     0.00  TorusPolynomial::TorusPolynomial(int)
  0.00     21.86     0.00    72286     0.00     0.00  TorusPolynomial::~TorusPolynomial()
  0.00     21.86     0.00    72277     0.00     0.00  delete_TorusPolynomial
  0.00     21.86     0.00    72277     0.00     0.00  new_TorusPolynomial
  0.00     21.86     0.00    72274     0.00     0.00  IntPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.02  TorusPolynomial_fft
  0.00     21.86     0.00    72274     0.00     0.03  TorusPolynomial_ifft
  0.00     21.86     0.00    72274     0.00     0.00  alloc_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  delete_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  destroy_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  free_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  init_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    72274     0.00     0.00  new_LagrangeHalfCPolynomial_array
  0.00     21.86     0.00    24006     0.00     0.00  IntPolynomial::IntPolynomial(int)
  0.00     21.86     0.00    24004     0.00     0.00  IntPolynomial::~IntPolynomial()
  0.00     21.86     0.00    24000     0.00     0.16  tLweAddMulRTo
  0.00     21.86     0.00     4802     0.00     0.00  torusPolynomialSubTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialAddMulZTo
  0.00     21.86     0.00     4800     0.00     0.00  torusPolynomialSubMulZTo
  0.00     21.86     0.00     1744     0.00     0.01  tLweClear
  0.00     21.86     0.00     1602     0.00     0.00  alloc_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  init_IntPolynomial_array
  0.00     21.86     0.00     1602     0.00     0.00  new_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  delete_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  destroy_IntPolynomial_array
  0.00     21.86     0.00     1601     0.00     0.00  free_IntPolynomial_array
  0.00     21.86     0.00     1600     0.00     2.41  tGswExternProduct
  0.00     21.86     0.00     1600     0.00     0.03  tGswTLweDecompH
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweAddTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubMulTo
  0.00     21.86     0.00     1600     0.00     0.00  tLweSubTo
  0.00     21.86     0.00     1025     0.00     0.00  approxPhase
  0.00     21.86     0.00      272     0.00     0.00  torusPolynomialUniform
  0.00     21.86     0.00      136     0.00     0.11  tLweSymEncryptZero
  0.00     21.86     0.00       24     0.00     0.00  lweClear
  0.00     21.86     0.00       18     0.00     0.00  TLweSample::TLweSample(TLweParams const*)
  0.00     21.86     0.00       18     0.00     0.00  alloc_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  init_TLweSample
  0.00     21.86     0.00       18     0.00     0.00  init_TorusPolynomial_array
  0.00     21.86     0.00       18     0.00     0.00  new_TorusPolynomial_array
  0.00     21.86     0.00       16     0.00     0.00  lweSymEncrypt
  0.00     21.86     0.00       16     0.00     0.00  modSwitchToTorus32
  0.00     21.86     0.00       16     0.00     0.11  tLweSymEncrypt
  0.00     21.86     0.00        8     0.00     0.09  tGswClear
  0.00     21.86     0.00        8     0.00     1.58  tGswEncryptZero
  0.00     21.86     0.00        4     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00     21.86     0.00        3     0.00     0.00  TLweSample::~TLweSample()
  0.00     21.86     0.00        3     0.00     0.00  LweSample::LweSample(LweParams const*)
  0.00     21.86     0.00        3     0.00     0.00  LweSample::~LweSample()
  0.00     21.86     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00     21.86     0.00        3     0.00     0.00  alloc_LweSample
  0.00     21.86     0.00        3     0.00     0.00  alloc_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_LweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  delete_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  destroy_LweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  destroy_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  free_LweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TLweSample
  0.00     21.86     0.00        3     0.00     0.00  free_TorusPolynomial_array
  0.00     21.86     0.00        3     0.00     0.00  init_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_LweSample
  0.00     21.86     0.00        3     0.00     0.00  new_TLweSample
  0.00     21.86     0.00        2     0.00     0.00  TLweKey::TLweKey(TLweParams const*)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::LweParams(int, double, double)
  0.00     21.86     0.00        2     0.00     0.00  LweParams::~LweParams()
  0.00     21.86     0.00        2     0.00     0.00  delete_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.00  modSwitchFromTorus32
  0.00     21.86     0.00        2     0.00     0.00  new_IntPolynomial
  0.00     21.86     0.00        2     0.00     0.05  torusPolynomialSubMulRFFT
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00     21.86     0.00        1     0.00     0.00  TGswParams::TGswParams(int, int, TLweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TGswSample::TGswSample(TLweSample*, TLweSample**, int, int)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::TLweParams(int, int, double, double)
  0.00     21.86     0.00        1     0.00     0.00  TLweParams::~TLweParams()
  0.00     21.86     0.00        1     0.00     0.00  FFT_Processor_nayuki::FFT_Processor_nayuki(int)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::LweKey(LweParams const*)
  0.00     21.86     0.00        1     0.00     0.00  LweKey::~LweKey()
  0.00     21.86     0.00        1     0.00     0.00  TGswKey::TGswKey(TGswParams const*)
  0.00     21.86     0.00        1     0.00     0.00  TLweKey::~TLweKey()
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00     21.86     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00     21.86     0.00        1     0.00     0.00  alloc_LweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  alloc_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  delete_LweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_LweParams
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  delete_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  destroy_LweKey
  0.00     21.86     0.00        1     0.00     0.00  destroy_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  free_LweKey
  0.00     21.86     0.00        1     0.00     0.00  free_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_LweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  init_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  init_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  lweKeyGen
  0.00     21.86     0.00        1     0.00     0.00  lwePhase
  0.00     21.86     0.00        1     0.00     0.00  lweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  new_LweKey
  0.00     21.86     0.00        1     0.00     0.00  new_LweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswKey
  0.00     21.86     0.00        1     0.00     0.00  new_TGswParams
  0.00     21.86     0.00        1     0.00     0.00  new_TGswSample
  0.00     21.86     0.00        1     0.00     0.00  new_TLweKey
  0.00     21.86     0.00        1     0.00     0.00  new_TLweParams
  0.00     21.86     0.00        1     0.00     0.00  new_TLweSample_array
  0.00     21.86     0.00        1     0.00     0.00  tLweApproxPhase
  0.00     21.86     0.00        1     0.00     0.00  tLweKeyGen
  0.00     21.86     0.00        1     0.00     0.10  tLwePhase
  0.00     21.86     0.00        1     0.00     0.10  tLweSymDecrypt
  0.00     21.86     0.00        1     0.00     0.00  torusPolynomialCopy

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.05% of 21.86 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     55.2   12.06    0.00                 fft_transform_reverse [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     26.9    5.87    0.00                 fft_transform [2]
-----------------------------------------------
                                                 <spontaneous>
[3]     17.9    0.00    3.91                 main [3]
                0.00    3.86    1600/1600        tGswExternProduct [4]
                0.03    0.00    8000/8000        tLweCopy [34]
                0.00    0.01       8/8           tGswEncryptZero [38]
                0.00    0.00    1600/1600        tLweAddTo [42]
                0.00    0.00      16/16          tLweSymEncrypt [43]
                0.00    0.00       8/8           tGswClear [44]
                0.00    0.00      24/1744        tLweClear [40]
                0.00    0.00       1/1           tLweSymDecrypt [47]
                0.00    0.00      24/5256        torusPolynomialClear [39]
                0.00    0.00    1600/1600        tLweSubTo [69]
                0.00    0.00    1600/1600        tLweAddMulTo [67]
                0.00    0.00    1600/1600        tLweSubMulTo [68]
                0.00    0.00      24/24          lweClear [72]
                0.00    0.00      16/16          modSwitchToTorus32 [78]
                0.00    0.00      16/16          lweSymEncrypt [77]
                0.00    0.00       3/72277       new_TorusPolynomial [53]
                0.00    0.00       3/3           new_LweSample [91]
                0.00    0.00       3/3           new_TLweSample [92]
                0.00    0.00       3/3           delete_TLweSample [82]
                0.00    0.00       3/3           delete_LweSample [81]
                0.00    0.00       3/72277       delete_TorusPolynomial [52]
                0.00    0.00       2/2           new_IntPolynomial [95]
                0.00    0.00       2/2           modSwitchFromTorus32 [94]
                0.00    0.00       2/2           delete_IntPolynomial [93]
                0.00    0.00       1/1           new_LweParams [116]
                0.00    0.00       1/1           new_TLweParams [121]
                0.00    0.00       1/1           new_TGswParams [118]
                0.00    0.00       1/1           new_LweKey [115]
                0.00    0.00       1/1           new_TLweKey [120]
                0.00    0.00       1/1           new_TGswKey [117]
                0.00    0.00       1/1           new_TGswSample [119]
                0.00    0.00       1/1           lweKeyGen [112]
                0.00    0.00       1/1           tLweKeyGen [124]
                0.00    0.00       1/1           lweSymDecrypt [114]
                0.00    0.00       1/1           delete_TLweKey [102]
                0.00    0.00       1/1           delete_LweKey [100]
                0.00    0.00       1/1           delete_TLweParams [103]
                0.00    0.00       1/1           delete_LweParams [101]
-----------------------------------------------
                0.00    3.86    1600/1600        main [3]
[4]     17.7    0.00    3.86    1600         tGswExternProduct [4]
                0.00    3.81   24000/24000       tLweAddMulRTo [5]
                0.00    0.04    1600/1600        tGswTLweDecompH [30]
                0.00    0.01    1600/1744        tLweClear [40]
                0.00    0.00    1600/1602        new_IntPolynomial_array [63]
                0.00    0.00    1600/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    3.81   24000/24000       tGswExternProduct [4]
[5]     17.4    0.00    3.81   24000         tLweAddMulRTo [5]
                0.01    3.77   72000/72272       torusPolynomialAddMulRFFT [6]
                0.03    0.00   24000/24000       intPolynomialNormSq2 [33]
-----------------------------------------------
                0.00    0.01     272/72272       tLweSymEncryptZero [37]
                0.01    3.77   72000/72272       tLweAddMulRTo [5]
[6]     17.4    0.01    3.78   72272         torusPolynomialAddMulRFFT [6]
                0.00    1.85   72272/72274       TorusPolynomial_ifft [7]
                0.00    1.58   72272/72274       TorusPolynomial_fft [8]
                0.02    0.14   72272/72274       LagrangeHalfCPolynomialMul [16]
                0.00    0.11   72272/72274       new_LagrangeHalfCPolynomial_array [20]
                0.08    0.00   72272/77072       torusPolynomialAddTo [26]
                0.00    0.01   72272/72274       IntPolynomial_ifft [41]
                0.00    0.00   72272/72277       new_TorusPolynomial [53]
                0.00    0.00   72272/72277       delete_TorusPolynomial [52]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.85   72272/72274       torusPolynomialAddMulRFFT [6]
[7]      8.5    0.00    1.85   72274         TorusPolynomial_ifft [7]
                0.49    0.63   72274/72274       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.29    0.44   72274/72274       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    1.58   72272/72274       torusPolynomialAddMulRFFT [6]
[8]      7.2    0.00    1.58   72274         TorusPolynomial_fft [8]
                0.73    0.85   72274/72274       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.73    0.85   72274/72274       TorusPolynomial_fft [8]
[9]      7.2    0.73    0.85   72274         FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.10    0.16 148017152/148017152     double std::real<double>(std::complex<double> const&) [14]
                0.10    0.08 148017152/148017152     double std::imag<double>(std::complex<double> const&) [15]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
-----------------------------------------------
                0.49    0.63   72274/72274       TorusPolynomial_ifft [7]
[10]     5.1    0.49    0.63   72274         FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
                0.04    0.06 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
                0.05    0.04 37004288/37004288     double std::abs<double>(std::complex<double> const&) [25]
                0.02    0.00 37004288/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[11]     3.6    0.79    0.00  216822         FFT_Processor_nayuki::check_alternate_real() [11]
-----------------------------------------------
                0.29    0.44   72274/72274       TorusPolynomial_ifft [7]
[12]     3.3    0.29    0.44   72274         FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.26    0.00   72274/216822      FFT_Processor_nayuki::check_alternate_real() [11]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::check_conjugate_cplx() [13]
                0.02    0.00 37004288/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.15    0.00   72274/216822      FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[13]     2.1    0.45    0.00  216822         FFT_Processor_nayuki::check_conjugate_cplx() [13]
-----------------------------------------------
                0.10    0.16 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[14]     1.2    0.10    0.16 148017152         double std::real<double>(std::complex<double> const&) [14]
                0.16    0.00 148017152/148017152     std::complex<double>::real[abi:cxx11]() const [17]
-----------------------------------------------
                0.10    0.08 148017152/148017152     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [9]
[15]     0.8    0.10    0.08 148017152         double std::imag<double>(std::complex<double> const&) [15]
                0.08    0.00 148017152/148017152     std::complex<double>::imag[abi:cxx11]() const [27]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.02    0.14   72272/72274       torusPolynomialAddMulRFFT [6]
[16]     0.7    0.02    0.14   72274         LagrangeHalfCPolynomialMul [16]
                0.05    0.09 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
-----------------------------------------------
                0.16    0.00 148017152/148017152     double std::real<double>(std::complex<double> const&) [14]
[17]     0.7    0.16    0.00 148017152         std::complex<double>::real[abi:cxx11]() const [17]
-----------------------------------------------
                0.05    0.09 37004288/37004288     LagrangeHalfCPolynomialMul [16]
[18]     0.7    0.05    0.09 37004288         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
                0.08    0.01 37004288/37004288     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
-----------------------------------------------
                0.00    0.11   72274/72274       new_LagrangeHalfCPolynomial_array [20]
[19]     0.5    0.00    0.11   72274         init_LagrangeHalfCPolynomial_array [19]
                0.03    0.08  216822/216822      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
                0.00    0.00  216822/240904      operator new(unsigned long, void*) [459]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.11   72272/72274       torusPolynomialAddMulRFFT [6]
[20]     0.5    0.00    0.11   72274         new_LagrangeHalfCPolynomial_array [20]
                0.00    0.11   72274/72274       init_LagrangeHalfCPolynomial_array [19]
                0.00    0.00   72274/72274       alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.03    0.08  216822/216822      init_LagrangeHalfCPolynomial_array [19]
[21]     0.5    0.03    0.08  216822         LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
                0.07    0.00 111012864/185023488     std::complex<double>::complex(double, double) [22]
                0.01    0.00  216822/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00    2048/185023488     FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.02    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.02    0.00 37004288/185023488     FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [12]
                0.07    0.00 111012864/185023488     LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
[22]     0.5    0.11    0.00 185023488         std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.04    0.06 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[23]     0.4    0.04    0.06 37004288         std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
                0.04    0.01 37004288/37004288     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
-----------------------------------------------
                0.08    0.01 37004288/37004288     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [18]
[24]     0.4    0.08    0.01 37004288         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.05    0.04 37004288/37004288     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[25]     0.4    0.05    0.04 37004288         double std::abs<double>(std::complex<double> const&) [25]
                0.03    0.00 37004288/37004288     std::__complex_abs(double _Complex) [35]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.00    0.00    4800/77072       tLweAddTo [42]
                0.08    0.00   72272/77072       torusPolynomialAddMulRFFT [6]
[26]     0.4    0.08    0.00   77072         torusPolynomialAddTo [26]
-----------------------------------------------
                0.08    0.00 148017152/148017152     double std::imag<double>(std::complex<double> const&) [15]
[27]     0.4    0.08    0.00 148017152         std::complex<double>::imag[abi:cxx11]() const [27]
-----------------------------------------------
                0.04    0.01 37004288/37004288     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [23]
[28]     0.3    0.04    0.01 37004288         std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
                0.01    0.00 37004288/111012864     std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.04    0.00    4800/4800        tGswTLweDecompH [30]
[29]     0.2    0.04    0.00    4800         tGswTorus32PolynomialDecompH [29]
-----------------------------------------------
                0.00    0.04    1600/1600        tGswExternProduct [4]
[30]     0.2    0.00    0.04    1600         tGswTLweDecompH [30]
                0.04    0.00    4800/4800        tGswTorus32PolynomialDecompH [29]
-----------------------------------------------
                0.01    0.00 37004288/111012864     double std::abs<double>(std::complex<double> const&) [25]
                0.01    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [28]
                0.01    0.00 37004288/111012864     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [24]
[31]     0.2    0.04    0.00 111012864         std::complex<double>::__rep() const [31]
-----------------------------------------------
                0.01    0.00   72274/433644      IntPolynomial_ifft [41]
                0.01    0.00   72274/433644      TorusPolynomial_ifft [7]
                0.01    0.00   72274/433644      TorusPolynomial_fft [8]
                0.01    0.00  216822/433644      LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [21]
[32]     0.1    0.03    0.00  433644         TLS wrapper function for fp1024_nayuki [32]
                0.00    0.00  433644/433644      TLS init function for fp1024_nayuki [48]
-----------------------------------------------
                0.03    0.00   24000/24000       tLweAddMulRTo [5]
[33]     0.1    0.03    0.00   24000         intPolynomialNormSq2 [33]
-----------------------------------------------
                0.03    0.00    8000/8000        main [3]
[34]     0.1    0.03    0.00    8000         tLweCopy [34]
-----------------------------------------------
                0.03    0.00 37004288/37004288     double std::abs<double>(std::complex<double> const&) [25]
[35]     0.1    0.03    0.00 37004288         std::__complex_abs(double _Complex) [35]
-----------------------------------------------
                                                 <spontaneous>
[36]     0.1    0.02    0.00                 _init [36]
-----------------------------------------------
                0.00    0.00      16/136         tLweSymEncrypt [43]
                0.00    0.01     120/136         tGswEncryptZero [38]
[37]     0.1    0.00    0.01     136         tLweSymEncryptZero [37]
                0.00    0.01     272/72272       torusPolynomialAddMulRFFT [6]
                0.00    0.00  139264/139280      gaussian32 [51]
                0.00    0.00     272/272         torusPolynomialUniform [71]
-----------------------------------------------
                0.00    0.01       8/8           main [3]
[38]     0.1    0.00    0.01       8         tGswEncryptZero [38]
                0.00    0.01     120/136         tLweSymEncryptZero [37]
-----------------------------------------------
                0.00    0.00      24/5256        main [3]
                0.01    0.00    5232/5256        tLweClear [40]
[39]     0.0    0.01    0.00    5256         torusPolynomialClear [39]
-----------------------------------------------
                0.00    0.00      24/1744        main [3]
                0.00    0.00     120/1744        tGswClear [44]
                0.00    0.01    1600/1744        tGswExternProduct [4]
[40]     0.0    0.00    0.01    1744         tLweClear [40]
                0.01    0.00    5232/5256        torusPolynomialClear [39]
-----------------------------------------------
                0.00    0.00       2/72274       torusPolynomialSubMulRFFT [45]
                0.00    0.01   72272/72274       torusPolynomialAddMulRFFT [6]
[41]     0.0    0.00    0.01   72274         IntPolynomial_ifft [41]
                0.01    0.00   72274/433644      TLS wrapper function for fp1024_nayuki [32]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[42]     0.0    0.00    0.00    1600         tLweAddTo [42]
                0.00    0.00    4800/77072       torusPolynomialAddTo [26]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[43]     0.0    0.00    0.00      16         tLweSymEncrypt [43]
                0.00    0.00      16/136         tLweSymEncryptZero [37]
-----------------------------------------------
                0.00    0.00       8/8           main [3]
[44]     0.0    0.00    0.00       8         tGswClear [44]
                0.00    0.00     120/1744        tLweClear [40]
-----------------------------------------------
                0.00    0.00       2/2           tLwePhase [46]
[45]     0.0    0.00    0.00       2         torusPolynomialSubMulRFFT [45]
                0.00    0.00       2/72274       TorusPolynomial_ifft [7]
                0.00    0.00       2/72274       TorusPolynomial_fft [8]
                0.00    0.00       2/72274       LagrangeHalfCPolynomialMul [16]
                0.00    0.00       2/72274       new_LagrangeHalfCPolynomial_array [20]
                0.00    0.00       2/72274       IntPolynomial_ifft [41]
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
                0.00    0.00       2/72277       new_TorusPolynomial [53]
                0.00    0.00       2/4802        torusPolynomialSubTo [58]
                0.00    0.00       2/72277       delete_TorusPolynomial [52]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[46]     0.0    0.00    0.00       1         tLwePhase [46]
                0.00    0.00       2/2           torusPolynomialSubMulRFFT [45]
                0.00    0.00       1/1           torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[47]     0.0    0.00    0.00       1         tLweSymDecrypt [47]
                0.00    0.00       1/1           tLwePhase [46]
                0.00    0.00       1/1           tLweApproxPhase [123]
-----------------------------------------------
                0.00    0.00  433644/433644      TLS wrapper function for fp1024_nayuki [32]
[48]     0.0    0.00    0.00  433644         TLS init function for fp1024_nayuki [48]
                0.00    0.00       1/1           FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
-----------------------------------------------
                0.00    0.00       1/1           TLS init function for fp1024_nayuki [48]
[49]     0.0    0.00    0.00       1         FFT_Processor_nayuki::FFT_Processor_nayuki(int) [49]
                0.00    0.00    2048/185023488     std::complex<double>::complex(double, double) [22]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[50]     0.0    0.00    0.00  139280         dtot32 [50]
-----------------------------------------------
                0.00    0.00      16/139280      lweSymEncrypt [77]
                0.00    0.00  139264/139280      tLweSymEncryptZero [37]
[51]     0.0    0.00    0.00  139280         gaussian32 [51]
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [464]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
                0.00    0.00  139280/139280      dtot32 [50]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[52]     0.0    0.00    0.00   72277         delete_TorusPolynomial [52]
                0.00    0.00   72277/72286       TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       2/72277       torusPolynomialSubMulRFFT [45]
                0.00    0.00       3/72277       main [3]
                0.00    0.00   72272/72277       torusPolynomialAddMulRFFT [6]
[53]     0.0    0.00    0.00   72277         new_TorusPolynomial [53]
                0.00    0.00   72277/72331       TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00   72274/72274       new_LagrangeHalfCPolynomial_array [20]
[54]     0.0    0.00    0.00   72274         alloc_LagrangeHalfCPolynomial_array [54]
-----------------------------------------------
                0.00    0.00   72274/72274       torusPolynomialSubMulRFFT [45]
[55]     0.0    0.00    0.00   72274         delete_LagrangeHalfCPolynomial_array [55]
                0.00    0.00   72274/72274       destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00   72274/72274       free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[56]     0.0    0.00    0.00   72274         destroy_LagrangeHalfCPolynomial_array [56]
                0.00    0.00  216822/216822      LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [460]
-----------------------------------------------
                0.00    0.00   72274/72274       delete_LagrangeHalfCPolynomial_array [55]
[57]     0.0    0.00    0.00   72274         free_LagrangeHalfCPolynomial_array [57]
-----------------------------------------------
                0.00    0.00       2/4802        torusPolynomialSubMulRFFT [45]
                0.00    0.00    4800/4802        tLweSubTo [69]
[58]     0.0    0.00    0.00    4802         torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweAddMulTo [67]
[59]     0.0    0.00    0.00    4800         torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    4800/4800        tLweSubMulTo [68]
[60]     0.0    0.00    0.00    4800         torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[61]     0.0    0.00    0.00    1602         alloc_IntPolynomial_array [61]
-----------------------------------------------
                0.00    0.00    1602/1602        new_IntPolynomial_array [63]
[62]     0.0    0.00    0.00    1602         init_IntPolynomial_array [62]
                0.00    0.00   24004/240904      operator new(unsigned long, void*) [459]
                0.00    0.00   24004/24006       IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       2/1602        TLweKey::TLweKey(TLweParams const*) [479]
                0.00    0.00    1600/1602        tGswExternProduct [4]
[63]     0.0    0.00    0.00    1602         new_IntPolynomial_array [63]
                0.00    0.00    1602/1602        alloc_IntPolynomial_array [61]
                0.00    0.00    1602/1602        init_IntPolynomial_array [62]
-----------------------------------------------
                0.00    0.00       1/1601        TLweKey::~TLweKey() [504]
                0.00    0.00    1600/1601        tGswExternProduct [4]
[64]     0.0    0.00    0.00    1601         delete_IntPolynomial_array [64]
                0.00    0.00    1601/1601        destroy_IntPolynomial_array [65]
                0.00    0.00    1601/1601        free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[65]     0.0    0.00    0.00    1601         destroy_IntPolynomial_array [65]
                0.00    0.00   24002/24004       IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00    1601/1601        delete_IntPolynomial_array [64]
[66]     0.0    0.00    0.00    1601         free_IntPolynomial_array [66]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[67]     0.0    0.00    0.00    1600         tLweAddMulTo [67]
                0.00    0.00    4800/4800        torusPolynomialAddMulZTo [59]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[68]     0.0    0.00    0.00    1600         tLweSubMulTo [68]
                0.00    0.00    4800/4800        torusPolynomialSubMulZTo [60]
-----------------------------------------------
                0.00    0.00    1600/1600        main [3]
[69]     0.0    0.00    0.00    1600         tLweSubTo [69]
                0.00    0.00    4800/4802        torusPolynomialSubTo [58]
-----------------------------------------------
                0.00    0.00       1/1025        lweSymDecrypt [114]
                0.00    0.00    1024/1025        tLweApproxPhase [123]
[70]     0.0    0.00    0.00    1025         approxPhase [70]
-----------------------------------------------
                0.00    0.00     272/272         tLweSymEncryptZero [37]
[71]     0.0    0.00    0.00     272         torusPolynomialUniform [71]
                0.00    0.00  278528/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
-----------------------------------------------
                0.00    0.00      24/24          main [3]
[72]     0.0    0.00    0.00      24         lweClear [72]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[73]     0.0    0.00    0.00      18         alloc_TorusPolynomial_array [73]
-----------------------------------------------
                0.00    0.00       3/18          new_TLweSample [92]
                0.00    0.00      15/18          init_TLweSample_array [111]
[74]     0.0    0.00    0.00      18         init_TLweSample [74]
                0.00    0.00      18/240904      operator new(unsigned long, void*) [459]
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [472]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
[75]     0.0    0.00    0.00      18         init_TorusPolynomial_array [75]
                0.00    0.00      54/240904      operator new(unsigned long, void*) [459]
                0.00    0.00      54/72331       TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [472]
[76]     0.0    0.00    0.00      18         new_TorusPolynomial_array [76]
                0.00    0.00      18/18          alloc_TorusPolynomial_array [73]
                0.00    0.00      18/18          init_TorusPolynomial_array [75]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[77]     0.0    0.00    0.00      16         lweSymEncrypt [77]
                0.00    0.00    7696/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00      16/139280      gaussian32 [51]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[78]     0.0    0.00    0.00      16         modSwitchToTorus32 [78]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[79]     0.0    0.00    0.00       3         alloc_LweSample [79]
-----------------------------------------------
                0.00    0.00       3/3           new_TLweSample [92]
[80]     0.0    0.00    0.00       3         alloc_TLweSample [80]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[81]     0.0    0.00    0.00       3         delete_LweSample [81]
                0.00    0.00       3/3           destroy_LweSample [84]
                0.00    0.00       3/3           free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[82]     0.0    0.00    0.00       3         delete_TLweSample [82]
                0.00    0.00       3/3           destroy_TLweSample [85]
-----------------------------------------------
                0.00    0.00       3/3           TLweSample::~TLweSample() [474]
[83]     0.0    0.00    0.00       3         delete_TorusPolynomial_array [83]
                0.00    0.00       3/3           destroy_TorusPolynomial_array [86]
                0.00    0.00       3/3           free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[84]     0.0    0.00    0.00       3         destroy_LweSample [84]
                0.00    0.00       3/3           LweSample::~LweSample() [476]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [82]
[85]     0.0    0.00    0.00       3         destroy_TLweSample [85]
                0.00    0.00       3/3           TLweSample::~TLweSample() [474]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[86]     0.0    0.00    0.00       3         destroy_TorusPolynomial_array [86]
                0.00    0.00       9/72286       TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [81]
[87]     0.0    0.00    0.00       3         free_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample_array [201]
[88]     0.0    0.00    0.00       3         free_TLweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
[89]     0.0    0.00    0.00       3         free_TorusPolynomial_array [89]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [91]
[90]     0.0    0.00    0.00       3         init_LweSample [90]
                0.00    0.00       3/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       3/3           LweSample::LweSample(LweParams const*) [475]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[91]     0.0    0.00    0.00       3         new_LweSample [91]
                0.00    0.00       3/3           alloc_LweSample [79]
                0.00    0.00       3/3           init_LweSample [90]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[92]     0.0    0.00    0.00       3         new_TLweSample [92]
                0.00    0.00       3/3           alloc_TLweSample [80]
                0.00    0.00       3/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[93]     0.0    0.00    0.00       2         delete_IntPolynomial [93]
                0.00    0.00       2/24004       IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[94]     0.0    0.00    0.00       2         modSwitchFromTorus32 [94]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[95]     0.0    0.00    0.00       2         new_IntPolynomial [95]
                0.00    0.00       2/24006       IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[96]     0.0    0.00    0.00       1         alloc_LweKey [96]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[97]     0.0    0.00    0.00       1         alloc_TGswSample [97]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[98]     0.0    0.00    0.00       1         alloc_TLweKey [98]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[99]     0.0    0.00    0.00       1         alloc_TLweSample_array [99]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[100]    0.0    0.00    0.00       1         delete_LweKey [100]
                0.00    0.00       1/1           free_LweKey [106]
                0.00    0.00       1/1           destroy_LweKey [104]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[101]    0.0    0.00    0.00       1         delete_LweParams [101]
                0.00    0.00       1/2           LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[102]    0.0    0.00    0.00       1         delete_TLweKey [102]
                0.00    0.00       1/1           destroy_TLweKey [105]
                0.00    0.00       1/1           free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[103]    0.0    0.00    0.00       1         delete_TLweParams [103]
                0.00    0.00       1/1           TLweParams::~TLweParams() [500]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[104]    0.0    0.00    0.00       1         destroy_LweKey [104]
                0.00    0.00       1/1           LweKey::~LweKey() [502]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[105]    0.0    0.00    0.00       1         destroy_TLweKey [105]
                0.00    0.00       1/1           TLweKey::~TLweKey() [504]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [100]
[106]    0.0    0.00    0.00       1         free_LweKey [106]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [102]
[107]    0.0    0.00    0.00       1         free_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [115]
[108]    0.0    0.00    0.00       1         init_LweKey [108]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/1           LweKey::LweKey(LweParams const*) [501]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [119]
[109]    0.0    0.00    0.00       1         init_TGswSample [109]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [494]
                0.00    0.00       1/1           new_TLweSample_array [122]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/1           TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [120]
[110]    0.0    0.00    0.00       1         init_TLweKey [110]
                0.00    0.00       1/240904      operator new(unsigned long, void*) [459]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [479]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [122]
[111]    0.0    0.00    0.00       1         init_TLweSample_array [111]
                0.00    0.00      15/18          init_TLweSample [74]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[112]    0.0    0.00    0.00       1         lweKeyGen [112]
                0.00    0.00     481/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           lweSymDecrypt [114]
[113]    0.0    0.00    0.00       1         lwePhase [113]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[114]    0.0    0.00    0.00       1         lweSymDecrypt [114]
                0.00    0.00       1/1           lwePhase [113]
                0.00    0.00       1/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[115]    0.0    0.00    0.00       1         new_LweKey [115]
                0.00    0.00       1/1           alloc_LweKey [96]
                0.00    0.00       1/1           init_LweKey [108]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[116]    0.0    0.00    0.00       1         new_LweParams [116]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[117]    0.0    0.00    0.00       1         new_TGswKey [117]
                0.00    0.00       1/1           TGswKey::TGswKey(TGswParams const*) [503]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[118]    0.0    0.00    0.00       1         new_TGswParams [118]
                0.00    0.00       1/1           TGswParams::TGswParams(int, int, TLweParams const*) [497]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[119]    0.0    0.00    0.00       1         new_TGswSample [119]
                0.00    0.00       1/1           alloc_TGswSample [97]
                0.00    0.00       1/1           init_TGswSample [109]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[120]    0.0    0.00    0.00       1         new_TLweKey [120]
                0.00    0.00       1/1           alloc_TLweKey [98]
                0.00    0.00       1/1           init_TLweKey [110]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[121]    0.0    0.00    0.00       1         new_TLweParams [121]
                0.00    0.00       1/1           TLweParams::TLweParams(int, int, double, double) [499]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[122]    0.0    0.00    0.00       1         new_TLweSample_array [122]
                0.00    0.00       1/1           alloc_TLweSample_array [99]
                0.00    0.00       1/1           init_TLweSample_array [111]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [47]
[123]    0.0    0.00    0.00       1         tLweApproxPhase [123]
                0.00    0.00    1024/1025        approxPhase [70]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[124]    0.0    0.00    0.00       1         tLweKeyGen [124]
                0.00    0.00    2048/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
-----------------------------------------------
                0.00    0.00       1/1           tLwePhase [46]
[125]    0.0    0.00    0.00       1         torusPolynomialCopy [125]
-----------------------------------------------
                0.00    0.00  708588/1570467     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
                0.00    0.00  861879/1570467     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[449]    0.0    0.00    0.00 1570467         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1570467/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
[450]    0.0    0.00    0.00 1570467         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [450]
-----------------------------------------------
                0.00    0.00 1436856/1436856     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[451]    0.0    0.00    0.00 1436856         std::uniform_int_distribution<int>::param_type::a() const [451]
-----------------------------------------------
                0.00    0.00  718428/718428      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[452]    0.0    0.00    0.00  718428         std::uniform_int_distribution<int>::param_type::b() const [452]
-----------------------------------------------
                0.00    0.00  708588/708588      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
[453]    0.0    0.00    0.00  708588         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [453]
-----------------------------------------------
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00  429675/429679      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[454]    0.0    0.00    0.00  429679         std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
-----------------------------------------------
                0.00    0.00  354294/354294      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[455]    0.0    0.00    0.00  354294         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
                0.00    0.00  354294/354294      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
-----------------------------------------------
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
[456]    0.0    0.00    0.00  354294         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [456]
                0.00    0.00  708588/708588      std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [453]
                0.00    0.00  708588/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
-----------------------------------------------
                0.00    0.00     481/288753      lweKeyGen [112]
                0.00    0.00    2048/288753      tLweKeyGen [124]
                0.00    0.00    7696/288753      lweSymEncrypt [77]
                0.00    0.00  278528/288753      torusPolynomialUniform [71]
[457]    0.0    0.00    0.00  288753         int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
-----------------------------------------------
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
[458]    0.0    0.00    0.00  288753+429675  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
                0.00    0.00 1436856/1436856     std::uniform_int_distribution<int>::param_type::a() const [451]
                0.00    0.00  861879/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [449]
                0.00    0.00  718428/718428      std::uniform_int_distribution<int>::param_type::b() const [452]
                0.00    0.00  429675/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
-----------------------------------------------
                0.00    0.00       1/240904      init_LweKey [108]
                0.00    0.00       1/240904      init_TGswSample [109]
                0.00    0.00       1/240904      init_TLweKey [110]
                0.00    0.00       3/240904      init_LweSample [90]
                0.00    0.00      18/240904      init_TLweSample [74]
                0.00    0.00      54/240904      init_TorusPolynomial_array [75]
                0.00    0.00   24004/240904      init_IntPolynomial_array [62]
                0.00    0.00  216822/240904      init_LagrangeHalfCPolynomial_array [19]
[459]    0.0    0.00    0.00  240904         operator new(unsigned long, void*) [459]
-----------------------------------------------
                0.00    0.00  216822/216822      destroy_LagrangeHalfCPolynomial_array [56]
[460]    0.0    0.00    0.00  216822         LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [460]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[461]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::mean() const [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[462]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::stddev() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [464]
[463]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::param_type(double, double) [463]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[464]    0.0    0.00    0.00  139280         std::normal_distribution<double>::normal_distribution(double, double) [464]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::param_type(double, double) [463]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [51]
[465]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [465]
[466]    0.0    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [455]
                0.00    0.00  139280/139280      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [467]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::stddev() const [462]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::mean() const [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [466]
[467]    0.0    0.00    0.00  139280         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [467]
-----------------------------------------------
                0.00    0.00      54/72331       init_TorusPolynomial_array [75]
                0.00    0.00   72277/72331       new_TorusPolynomial [53]
[468]    0.0    0.00    0.00   72331         TorusPolynomial::TorusPolynomial(int) [468]
-----------------------------------------------
                0.00    0.00       9/72286       destroy_TorusPolynomial_array [86]
                0.00    0.00   72277/72286       delete_TorusPolynomial [52]
[469]    0.0    0.00    0.00   72286         TorusPolynomial::~TorusPolynomial() [469]
-----------------------------------------------
                0.00    0.00       2/24006       new_IntPolynomial [95]
                0.00    0.00   24004/24006       init_IntPolynomial_array [62]
[470]    0.0    0.00    0.00   24006         IntPolynomial::IntPolynomial(int) [470]
-----------------------------------------------
                0.00    0.00       2/24004       delete_IntPolynomial [93]
                0.00    0.00   24002/24004       destroy_IntPolynomial_array [65]
[471]    0.0    0.00    0.00   24004         IntPolynomial::~IntPolynomial() [471]
-----------------------------------------------
                0.00    0.00      18/18          init_TLweSample [74]
[472]    0.0    0.00    0.00      18         TLweSample::TLweSample(TLweParams const*) [472]
                0.00    0.00      18/18          new_TorusPolynomial_array [76]
-----------------------------------------------
                0.00    0.00       1/4           lweKeyGen [112]
                0.00    0.00       1/4           tLweKeyGen [124]
                0.00    0.00       2/4           __static_initialization_and_destruction_0(int, int) [491]
[473]    0.0    0.00    0.00       4         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [454]
-----------------------------------------------
                0.00    0.00       3/3           destroy_TLweSample [85]
[474]    0.0    0.00    0.00       3         TLweSample::~TLweSample() [474]
                0.00    0.00       3/3           delete_TorusPolynomial_array [83]
-----------------------------------------------
                0.00    0.00       3/3           init_LweSample [90]
[475]    0.0    0.00    0.00       3         LweSample::LweSample(LweParams const*) [475]
-----------------------------------------------
                0.00    0.00       3/3           destroy_LweSample [84]
[476]    0.0    0.00    0.00       3         LweSample::~LweSample() [476]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
[477]    0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [477]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
[478]    0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [477]
-----------------------------------------------
                0.00    0.00       1/2           TGswKey::TGswKey(TGswParams const*) [503]
                0.00    0.00       1/2           init_TLweKey [110]
[479]    0.0    0.00    0.00       2         TLweKey::TLweKey(TLweParams const*) [479]
                0.00    0.00       2/1602        new_IntPolynomial_array [63]
-----------------------------------------------
                0.00    0.00       1/2           new_LweParams [116]
                0.00    0.00       1/2           TLweParams::TLweParams(int, int, double, double) [499]
[480]    0.0    0.00    0.00       2         LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/2           delete_LweParams [101]
                0.00    0.00       1/2           TLweParams::~TLweParams() [500]
[481]    0.0    0.00    0.00       2         LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [521]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_bootsNAND [512]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKeyFFT [517]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKey [516]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_lweKeyGen [520]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16renormalizeKSkeyP15LweKeySwitchKeyPK6LweKeyPKi [508]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_debug_accum_key [513]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN19LweBootstrappingKeyC2EPK9LweParamsPK10TGswParamsPK10TLweParamsS2_P10TGswSampleP15LweKeySwitchKey [510]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN13IntPolynomialC2Ei [509]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [515]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
                0.00    0.00       2/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [473]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
-----------------------------------------------
                0.00    0.00       1/1           TFheGateBootstrappingParameterSet::TFheGateBootstrappingParameterSet(int, int, LweParams const*, TGswParams const*) [626]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK10StdIstream7getLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [511]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSample [518]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_tLweKeyGen [522]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswParams [118]
[497]    0.0    0.00    0.00       1         TGswParams::TGswParams(int, int, TLweParams const*) [497]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [109]
[498]    0.0    0.00    0.00       1         TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [498]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweParams [121]
[499]    0.0    0.00    0.00       1         TLweParams::TLweParams(int, int, double, double) [499]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [480]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweParams [103]
[500]    0.0    0.00    0.00       1         TLweParams::~TLweParams() [500]
                0.00    0.00       1/2           LweParams::~LweParams() [481]
-----------------------------------------------
                0.00    0.00       1/1           init_LweKey [108]
[501]    0.0    0.00    0.00       1         LweKey::LweKey(LweParams const*) [501]
-----------------------------------------------
                0.00    0.00       1/1           destroy_LweKey [104]
[502]    0.0    0.00    0.00       1         LweKey::~LweKey() [502]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswKey [117]
[503]    0.0    0.00    0.00       1         TGswKey::TGswKey(TGswParams const*) [503]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [479]
-----------------------------------------------
                0.00    0.00       1/1           destroy_TLweKey [105]
[504]    0.0    0.00    0.00       1         TLweKey::~TLweKey() [504]
                0.00    0.00       1/1601        delete_IntPolynomial_array [64]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
[505]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
[506]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [491]
[507]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
-----------------------------------------------
                             1570467             std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
[987]    0.0    0.00    0.00       0+1570467 std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
                             1570467             std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [987]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [41] IntPolynomial_ifft    [453] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [89] free_TorusPolynomial_array
  [16] LagrangeHalfCPolynomialMul [505] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [51] gaussian32
   [8] TorusPolynomial_fft   [506] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [62] init_IntPolynomial_array
   [7] TorusPolynomial_ifft  [507] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [19] init_LagrangeHalfCPolynomial_array
 [482] __static_initialization_and_destruction_0(int, int) [449] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [108] init_LweKey
 [483] __static_initialization_and_destruction_0(int, int) [22] std::complex<double>::complex(double, double) [90] init_LweSample
 [484] __static_initialization_and_destruction_0(int, int) [28] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [109] init_TGswSample
 [485] __static_initialization_and_destruction_0(int, int) [24] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [110] init_TLweKey
 [486] __static_initialization_and_destruction_0(int, int) [477] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [74] init_TLweSample
 [487] __static_initialization_and_destruction_0(int, int) [450] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [111] init_TLweSample_array
 [488] __static_initialization_and_destruction_0(int, int) [478] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [75] init_TorusPolynomial_array
 [489] __static_initialization_and_destruction_0(int, int) [467] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [33] intPolynomialNormSq2
 [490] __static_initialization_and_destruction_0(int, int) [455] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [72] lweClear
 [491] __static_initialization_and_destruction_0(int, int) [35] std::__complex_abs(double _Complex) [112] lweKeyGen
 [492] __static_initialization_and_destruction_0(int, int) [456] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [113] lwePhase
 [493] __static_initialization_and_destruction_0(int, int) [25] double std::abs<double>(std::complex<double> const&) [114] lweSymDecrypt
 [494] __static_initialization_and_destruction_0(int, int) [15] double std::imag<double>(std::complex<double> const&) [77] lweSymEncrypt
 [495] __static_initialization_and_destruction_0(int, int) [14] double std::real<double>(std::complex<double> const&) [94] modSwitchFromTorus32
 [496] __static_initialization_and_destruction_0(int, int) [23] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [78] modSwitchToTorus32
 [497] TGswParams::TGswParams(int, int, TLweParams const*) [18] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [95] new_IntPolynomial
 [498] TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [48] TLS init function for fp1024_nayuki [63] new_IntPolynomial_array
 [499] TLweParams::TLweParams(int, int, double, double) [32] TLS wrapper function for fp1024_nayuki [20] new_LagrangeHalfCPolynomial_array
 [500] TLweParams::~TLweParams() [459] operator new(unsigned long, void*) [115] new_LweKey
 [472] TLweSample::TLweSample(TLweParams const*) [36] _init [116] new_LweParams
 [474] TLweSample::~TLweSample() [61] alloc_IntPolynomial_array [91] new_LweSample
 [470] IntPolynomial::IntPolynomial(int) [54] alloc_LagrangeHalfCPolynomial_array [117] new_TGswKey
 [471] IntPolynomial::~IntPolynomial() [96] alloc_LweKey [118] new_TGswParams
 [468] TorusPolynomial::TorusPolynomial(int) [79] alloc_LweSample [119] new_TGswSample
 [469] TorusPolynomial::~TorusPolynomial() [97] alloc_TGswSample [120] new_TLweKey
  [10] FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [98] alloc_TLweKey [121] new_TLweParams
  [11] FFT_Processor_nayuki::check_alternate_real() [80] alloc_TLweSample [92] new_TLweSample
  [13] FFT_Processor_nayuki::check_conjugate_cplx() [99] alloc_TLweSample_array [122] new_TLweSample_array
   [9] FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [73] alloc_TorusPolynomial_array [53] new_TorusPolynomial
  [12] FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [70] approxPhase [76] new_TorusPolynomial_array
  [49] FFT_Processor_nayuki::FFT_Processor_nayuki(int) [93] delete_IntPolynomial [44] tGswClear
  [21] LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [64] delete_IntPolynomial_array [38] tGswEncryptZero
 [460] LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [55] delete_LagrangeHalfCPolynomial_array [4] tGswExternProduct
 [501] LweKey::LweKey(LweParams const*) [100] delete_LweKey [30] tGswTLweDecompH
 [502] LweKey::~LweKey()     [101] delete_LweParams       [29] tGswTorus32PolynomialDecompH
 [503] TGswKey::TGswKey(TGswParams const*) [81] delete_LweSample [5] tLweAddMulRTo
 [479] TLweKey::TLweKey(TLweParams const*) [102] delete_TLweKey [67] tLweAddMulTo
 [504] TLweKey::~TLweKey()   [103] delete_TLweParams      [42] tLweAddTo
 [480] LweParams::LweParams(int, double, double) [82] delete_TLweSample [123] tLweApproxPhase
 [481] LweParams::~LweParams() [52] delete_TorusPolynomial [40] tLweClear
 [475] LweSample::LweSample(LweParams const*) [83] delete_TorusPolynomial_array [34] tLweCopy
 [476] LweSample::~LweSample() [65] destroy_IntPolynomial_array [124] tLweKeyGen
 [461] std::normal_distribution<double>::param_type::mean() const [56] destroy_LagrangeHalfCPolynomial_array [46] tLwePhase
 [462] std::normal_distribution<double>::param_type::stddev() const [104] destroy_LweKey [68] tLweSubMulTo
 [451] std::uniform_int_distribution<int>::param_type::a() const [84] destroy_LweSample [69] tLweSubTo
 [452] std::uniform_int_distribution<int>::param_type::b() const [105] destroy_TLweKey [47] tLweSymDecrypt
  [27] std::complex<double>::imag[abi:cxx11]() const [85] destroy_TLweSample [43] tLweSymEncrypt
  [17] std::complex<double>::real[abi:cxx11]() const [86] destroy_TorusPolynomial_array [37] tLweSymEncryptZero
  [31] std::complex<double>::__rep() const [50] dtot32     [6] torusPolynomialAddMulRFFT
 [463] std::normal_distribution<double>::param_type::param_type(double, double) [2] fft_transform [59] torusPolynomialAddMulZTo
 [464] std::normal_distribution<double>::normal_distribution(double, double) [1] fft_transform_reverse [26] torusPolynomialAddTo
 [465] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [66] free_IntPolynomial_array [39] torusPolynomialClear
 [466] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [57] free_LagrangeHalfCPolynomial_array [125] torusPolynomialCopy
 [454] std::uniform_int_distribution<int>::param_type::param_type(int, int) [106] free_LweKey [45] torusPolynomialSubMulRFFT
 [473] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [87] free_LweSample [60] torusPolynomialSubMulZTo
 [457] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [107] free_TLweKey [58] torusPolynomialSubTo
 [458] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [88] free_TLweSample [71] torusPolynomialUniform
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 54.95      1.22     1.22                             fft_transform_reverse
 25.23      1.78     0.56                             fft_transform
  4.05      1.87     0.09    22422     0.00     0.00  FFT_Processor_nayuki::check_alternate_real()
  2.70      1.93     0.06     7474     0.01     0.02  FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*)
  2.70      1.99     0.06     7474     0.01     0.02  FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*)
  2.25      2.04     0.05    22422     0.00     0.00  FFT_Processor_nayuki::check_conjugate_cplx()
  1.35      2.07     0.03 15306752     0.00     0.00  double std::real<double>(std::complex<double> const&)
  0.90      2.09     0.02    22422     0.00     0.00  LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int)
  0.90      2.11     0.02     7474     0.00     0.01  FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*)
  0.68      2.12     0.01 19135488     0.00     0.00  std::complex<double>::complex(double, double)
  0.68      2.14     0.01  3826688     0.00     0.00  std::__complex_abs(double _Complex)
  0.45      2.15     0.01 15306752     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.45      2.16     0.01  3826688     0.00     0.00  std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.45      2.17     0.01  1570467     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
  0.45      2.18     0.01   708588     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.45      2.19     0.01     7952     0.00     0.00  torusPolynomialAddTo
  0.45      2.20     0.01      480     0.02     0.02  torusPolynomialSubMulZTo
  0.45      2.21     0.01        1    10.00    10.00  torusPolynomialCopy
  0.45      2.22     0.01                             _init
  0.00      2.22     0.00 15306752     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.00      2.22     0.00 15306752     0.00     0.00  double std::imag<double>(std::complex<double> const&)
  0.00      2.22     0.00 11480064     0.00     0.00  std::complex<double>::__rep() const
  0.00      2.22     0.00  3826688     0.00     0.00  std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.00      2.22     0.00  3826688     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.00      2.22     0.00  3826688     0.00     0.00  double std::abs<double>(std::complex<double> const&)
  0.00      2.22     0.00  3826688     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.00      2.22     0.00  1570467     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.00      2.22     0.00  1570467     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00      2.22     0.00  1436856     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00      2.22     0.00   718428     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00      2.22     0.00   429679     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00      2.22     0.00   354294     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.00      2.22     0.00   354294     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.22     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.22     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00      2.22     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00      2.22     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00      2.22     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00      2.22     0.00   139280     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00      2.22     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.22     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&)
  0.00      2.22     0.00   139280     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.22     0.00   139280     0.00     0.00  dtot32
  0.00      2.22     0.00   139280     0.00     0.00  gaussian32
  0.00      2.22     0.00    44844     0.00     0.00  TLS init function for fp1024_nayuki
  0.00      2.22     0.00    44844     0.00     0.00  TLS wrapper function for fp1024_nayuki
  0.00      2.22     0.00    24904     0.00     0.00  operator new(unsigned long, void*)
  0.00      2.22     0.00    22422     0.00     0.00  LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL()
  0.00      2.22     0.00     7531     0.00     0.00  TorusPolynomial::TorusPolynomial(int)
  0.00      2.22     0.00     7486     0.00     0.00  TorusPolynomial::~TorusPolynomial()
  0.00      2.22     0.00     7477     0.00     0.00  delete_TorusPolynomial
  0.00      2.22     0.00     7477     0.00     0.00  new_TorusPolynomial
  0.00      2.22     0.00     7474     0.00     0.02  IntPolynomial_ifft
  0.00      2.22     0.00     7474     0.00     0.00  LagrangeHalfCPolynomialMul
  0.00      2.22     0.00     7474     0.00     0.02  TorusPolynomial_fft
  0.00      2.22     0.00     7474     0.00     0.01  TorusPolynomial_ifft
  0.00      2.22     0.00     7474     0.00     0.00  alloc_LagrangeHalfCPolynomial_array
  0.00      2.22     0.00     7474     0.00     0.00  delete_LagrangeHalfCPolynomial_array
  0.00      2.22     0.00     7474     0.00     0.00  destroy_LagrangeHalfCPolynomial_array
  0.00      2.22     0.00     7474     0.00     0.00  free_LagrangeHalfCPolynomial_array
  0.00      2.22     0.00     7474     0.00     0.00  init_LagrangeHalfCPolynomial_array
  0.00      2.22     0.00     7474     0.00     0.00  new_LagrangeHalfCPolynomial_array
  0.00      2.22     0.00     7472     0.00     0.05  torusPolynomialAddMulRFFT
  0.00      2.22     0.00     2406     0.00     0.00  IntPolynomial::IntPolynomial(int)
  0.00      2.22     0.00     2404     0.00     0.00  IntPolynomial::~IntPolynomial()
  0.00      2.22     0.00     2400     0.00     0.00  intPolynomialNormSq2
  0.00      2.22     0.00     2400     0.00     0.16  tLweAddMulRTo
  0.00      2.22     0.00     1025     0.00     0.00  approxPhase
  0.00      2.22     0.00      936     0.00     0.00  torusPolynomialClear
  0.00      2.22     0.00      800     0.00     0.00  tLweCopy
  0.00      2.22     0.00      482     0.00     0.00  torusPolynomialSubTo
  0.00      2.22     0.00      480     0.00     0.00  tGswTorus32PolynomialDecompH
  0.00      2.22     0.00      480     0.00     0.00  torusPolynomialAddMulZTo
  0.00      2.22     0.00      304     0.00     0.00  tLweClear
  0.00      2.22     0.00      272     0.00     0.02  torusPolynomialUniform
  0.00      2.22     0.00      162     0.00     0.00  alloc_IntPolynomial_array
  0.00      2.22     0.00      162     0.00     0.00  init_IntPolynomial_array
  0.00      2.22     0.00      162     0.00     0.00  new_IntPolynomial_array
  0.00      2.22     0.00      161     0.00     0.00  delete_IntPolynomial_array
  0.00      2.22     0.00      161     0.00     0.00  destroy_IntPolynomial_array
  0.00      2.22     0.00      161     0.00     0.00  free_IntPolynomial_array
  0.00      2.22     0.00      160     0.00     2.34  tGswExternProduct
  0.00      2.22     0.00      160     0.00     0.00  tGswTLweDecompH
  0.00      2.22     0.00      160     0.00     0.00  tLweAddMulTo
  0.00      2.22     0.00      160     0.00     0.00  tLweAddTo
  0.00      2.22     0.00      160     0.00     0.06  tLweSubMulTo
  0.00      2.22     0.00      160     0.00     0.00  tLweSubTo
  0.00      2.22     0.00      136     0.00     0.25  tLweSymEncryptZero
  0.00      2.22     0.00       24     0.00     0.00  lweClear
  0.00      2.22     0.00       18     0.00     0.00  TLweSample::TLweSample(TLweParams const*)
  0.00      2.22     0.00       18     0.00     0.00  alloc_TorusPolynomial_array
  0.00      2.22     0.00       18     0.00     0.00  init_TLweSample
  0.00      2.22     0.00       18     0.00     0.00  init_TorusPolynomial_array
  0.00      2.22     0.00       18     0.00     0.00  new_TorusPolynomial_array
  0.00      2.22     0.00       16     0.00     0.01  lweSymEncrypt
  0.00      2.22     0.00       16     0.00     0.00  modSwitchToTorus32
  0.00      2.22     0.00       16     0.00     0.25  tLweSymEncrypt
  0.00      2.22     0.00        8     0.00     0.00  tGswClear
  0.00      2.22     0.00        8     0.00     3.75  tGswEncryptZero
  0.00      2.22     0.00        4     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00      2.22     0.00        3     0.00     0.00  TLweSample::~TLweSample()
  0.00      2.22     0.00        3     0.00     0.00  LweSample::LweSample(LweParams const*)
  0.00      2.22     0.00        3     0.00     0.00  LweSample::~LweSample()
  0.00      2.22     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      2.22     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00      2.22     0.00        3     0.00     0.00  alloc_LweSample
  0.00      2.22     0.00        3     0.00     0.00  alloc_TLweSample
  0.00      2.22     0.00        3     0.00     0.00  delete_LweSample
  0.00      2.22     0.00        3     0.00     0.00  delete_TLweSample
  0.00      2.22     0.00        3     0.00     0.00  delete_TorusPolynomial_array
  0.00      2.22     0.00        3     0.00     0.00  destroy_LweSample
  0.00      2.22     0.00        3     0.00     0.00  destroy_TLweSample
  0.00      2.22     0.00        3     0.00     0.00  destroy_TorusPolynomial_array
  0.00      2.22     0.00        3     0.00     0.00  free_LweSample
  0.00      2.22     0.00        3     0.00     0.00  free_TLweSample
  0.00      2.22     0.00        3     0.00     0.00  free_TorusPolynomial_array
  0.00      2.22     0.00        3     0.00     0.00  init_LweSample
  0.00      2.22     0.00        3     0.00     0.00  new_LweSample
  0.00      2.22     0.00        3     0.00     0.00  new_TLweSample
  0.00      2.22     0.00        2     0.00     0.00  TLweKey::TLweKey(TLweParams const*)
  0.00      2.22     0.00        2     0.00     0.00  LweParams::LweParams(int, double, double)
  0.00      2.22     0.00        2     0.00     0.00  LweParams::~LweParams()
  0.00      2.22     0.00        2     0.00     0.00  delete_IntPolynomial
  0.00      2.22     0.00        2     0.00     0.00  modSwitchFromTorus32
  0.00      2.22     0.00        2     0.00     0.00  new_IntPolynomial
  0.00      2.22     0.00        2     0.00     0.05  torusPolynomialSubMulRFFT
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.22     0.00        1     0.00     0.00  TGswParams::TGswParams(int, int, TLweParams const*)
  0.00      2.22     0.00        1     0.00     0.00  TGswSample::TGswSample(TLweSample*, TLweSample**, int, int)
  0.00      2.22     0.00        1     0.00     0.00  TLweParams::TLweParams(int, int, double, double)
  0.00      2.22     0.00        1     0.00     0.00  TLweParams::~TLweParams()
  0.00      2.22     0.00        1     0.00     0.00  FFT_Processor_nayuki::FFT_Processor_nayuki(int)
  0.00      2.22     0.00        1     0.00     0.00  LweKey::LweKey(LweParams const*)
  0.00      2.22     0.00        1     0.00     0.00  LweKey::~LweKey()
  0.00      2.22     0.00        1     0.00     0.00  TGswKey::TGswKey(TGswParams const*)
  0.00      2.22     0.00        1     0.00     0.00  TLweKey::~TLweKey()
  0.00      2.22     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00      2.22     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00      2.22     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00      2.22     0.00        1     0.00     0.00  alloc_LweKey
  0.00      2.22     0.00        1     0.00     0.00  alloc_TGswSample
  0.00      2.22     0.00        1     0.00     0.00  alloc_TLweKey
  0.00      2.22     0.00        1     0.00     0.00  alloc_TLweSample_array
  0.00      2.22     0.00        1     0.00     0.00  delete_LweKey
  0.00      2.22     0.00        1     0.00     0.00  delete_LweParams
  0.00      2.22     0.00        1     0.00     0.00  delete_TLweKey
  0.00      2.22     0.00        1     0.00     0.00  delete_TLweParams
  0.00      2.22     0.00        1     0.00     0.00  destroy_LweKey
  0.00      2.22     0.00        1     0.00     0.00  destroy_TLweKey
  0.00      2.22     0.00        1     0.00     0.00  free_LweKey
  0.00      2.22     0.00        1     0.00     0.00  free_TLweKey
  0.00      2.22     0.00        1     0.00     0.00  init_LweKey
  0.00      2.22     0.00        1     0.00     0.00  init_TGswSample
  0.00      2.22     0.00        1     0.00     0.00  init_TLweKey
  0.00      2.22     0.00        1     0.00     0.00  init_TLweSample_array
  0.00      2.22     0.00        1     0.00     0.01  lweKeyGen
  0.00      2.22     0.00        1     0.00     0.00  lwePhase
  0.00      2.22     0.00        1     0.00     0.00  lweSymDecrypt
  0.00      2.22     0.00        1     0.00     0.00  new_LweKey
  0.00      2.22     0.00        1     0.00     0.00  new_LweParams
  0.00      2.22     0.00        1     0.00     0.00  new_TGswKey
  0.00      2.22     0.00        1     0.00     0.00  new_TGswParams
  0.00      2.22     0.00        1     0.00     0.00  new_TGswSample
  0.00      2.22     0.00        1     0.00     0.00  new_TLweKey
  0.00      2.22     0.00        1     0.00     0.00  new_TLweParams
  0.00      2.22     0.00        1     0.00     0.00  new_TLweSample_array
  0.00      2.22     0.00        1     0.00     0.00  tLweApproxPhase
  0.00      2.22     0.00        1     0.00     0.04  tLweKeyGen
  0.00      2.22     0.00        1     0.00    10.10  tLwePhase
  0.00      2.22     0.00        1     0.00    10.10  tLweSymDecrypt

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.45% of 2.22 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     55.0    1.22    0.00                 fft_transform_reverse [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     25.2    0.56    0.00                 fft_transform [2]
-----------------------------------------------
                                                 <spontaneous>
[3]     19.4    0.00    0.43                 main [3]
                0.00    0.38     160/160         tGswExternProduct [6]
                0.00    0.03       8/8           tGswEncryptZero [17]
                0.00    0.01       1/1           tLweSymDecrypt [30]
                0.00    0.01     160/160         tLweSubMulTo [33]
                0.00    0.00      16/16          tLweSymEncrypt [46]
                0.00    0.00     160/160         tLweAddTo [47]
                0.00    0.00      16/16          lweSymEncrypt [48]
                0.00    0.00       1/1           tLweKeyGen [50]
                0.00    0.00       1/1           lweKeyGen [51]
                0.00    0.00     800/800         tLweCopy [66]
                0.00    0.00     160/160         tLweSubTo [79]
                0.00    0.00     160/160         tLweAddMulTo [78]
                0.00    0.00      24/24          lweClear [80]
                0.00    0.00      24/936         torusPolynomialClear [65]
                0.00    0.00      24/304         tLweClear [70]
                0.00    0.00      16/16          modSwitchToTorus32 [85]
                0.00    0.00       8/8           tGswClear [86]
                0.00    0.00       3/7477        new_TorusPolynomial [57]
                0.00    0.00       3/3           new_LweSample [99]
                0.00    0.00       3/3           new_TLweSample [100]
                0.00    0.00       3/3           delete_TLweSample [90]
                0.00    0.00       3/3           delete_LweSample [89]
                0.00    0.00       3/7477        delete_TorusPolynomial [56]
                0.00    0.00       2/2           new_IntPolynomial [103]
                0.00    0.00       2/2           modSwitchFromTorus32 [102]
                0.00    0.00       2/2           delete_IntPolynomial [101]
                0.00    0.00       1/1           new_LweParams [123]
                0.00    0.00       1/1           new_TLweParams [128]
                0.00    0.00       1/1           new_TGswParams [125]
                0.00    0.00       1/1           new_LweKey [122]
                0.00    0.00       1/1           new_TLweKey [127]
                0.00    0.00       1/1           new_TGswKey [124]
                0.00    0.00       1/1           new_TGswSample [126]
                0.00    0.00       1/1           lweSymDecrypt [121]
                0.00    0.00       1/1           delete_TLweKey [110]
                0.00    0.00       1/1           delete_LweKey [108]
                0.00    0.00       1/1           delete_TLweParams [111]
                0.00    0.00       1/1           delete_LweParams [109]
-----------------------------------------------
                0.00    0.01     272/7472        tLweSymEncryptZero [15]
                0.00    0.38    7200/7472        tLweAddMulRTo [5]
[4]     17.5    0.00    0.39    7472         torusPolynomialAddMulRFFT [4]
                0.00    0.15    7472/7474        TorusPolynomial_fft [7]
                0.00    0.13    7472/7474        IntPolynomial_ifft [9]
                0.00    0.07    7472/7474        TorusPolynomial_ifft [12]
                0.00    0.03    7472/7474        new_LagrangeHalfCPolynomial_array [19]
                0.01    0.00    7472/7952        torusPolynomialAddTo [31]
                0.00    0.00    7472/7477        new_TorusPolynomial [57]
                0.00    0.00    7472/7474        LagrangeHalfCPolynomialMul [58]
                0.00    0.00    7472/7477        delete_TorusPolynomial [56]
                0.00    0.00    7472/7474        delete_LagrangeHalfCPolynomial_array [60]
-----------------------------------------------
                0.00    0.38    2400/2400        tGswExternProduct [6]
[5]     16.9    0.00    0.38    2400         tLweAddMulRTo [5]
                0.00    0.38    7200/7472        torusPolynomialAddMulRFFT [4]
                0.00    0.00    2400/2400        intPolynomialNormSq2 [63]
-----------------------------------------------
                0.00    0.38     160/160         main [3]
[6]     16.9    0.00    0.38     160         tGswExternProduct [6]
                0.00    0.38    2400/2400        tLweAddMulRTo [5]
                0.00    0.00     160/162         new_IntPolynomial_array [73]
                0.00    0.00     160/160         tGswTLweDecompH [77]
                0.00    0.00     160/304         tLweClear [70]
                0.00    0.00     160/161         delete_IntPolynomial_array [74]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [49]
                0.00    0.15    7472/7474        torusPolynomialAddMulRFFT [4]
[7]      6.6    0.00    0.15    7474         TorusPolynomial_fft [7]
                0.06    0.09    7474/7474        FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [53]
-----------------------------------------------
                0.06    0.09    7474/7474        TorusPolynomial_fft [7]
[8]      6.6    0.06    0.09    7474         FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.03    0.00 15306752/15306752     double std::real<double>(std::complex<double> const&) [16]
                0.03    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [14]
                0.00    0.01 15306752/15306752     double std::imag<double>(std::complex<double> const&) [36]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [49]
                0.00    0.13    7472/7474        torusPolynomialAddMulRFFT [4]
[9]      6.1    0.00    0.13    7474         IntPolynomial_ifft [9]
                0.06    0.07    7474/7474        FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [53]
-----------------------------------------------
                0.06    0.07    7474/7474        IntPolynomial_ifft [9]
[10]     6.1    0.06    0.07    7474         FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.03    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [14]
                0.00    0.01 3826688/3826688     double std::abs<double>(std::complex<double> const&) [23]
                0.01    0.00 3826688/3826688     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [37]
                0.00    0.00 3826688/19135488     std::complex<double>::complex(double, double) [21]
-----------------------------------------------
                0.03    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.03    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.03    0.00    7474/22422       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[11]     4.1    0.09    0.00   22422         FFT_Processor_nayuki::check_alternate_real() [11]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [49]
                0.00    0.07    7472/7474        torusPolynomialAddMulRFFT [4]
[12]     3.1    0.00    0.07    7474         TorusPolynomial_ifft [12]
                0.02    0.05    7474/7474        FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [53]
-----------------------------------------------
                0.02    0.05    7474/7474        TorusPolynomial_ifft [12]
[13]     3.1    0.02    0.05    7474         FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.03    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [14]
                0.00    0.00 3826688/19135488     std::complex<double>::complex(double, double) [21]
-----------------------------------------------
                0.02    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[14]     2.3    0.05    0.00   22422         FFT_Processor_nayuki::check_conjugate_cplx() [14]
-----------------------------------------------
                0.00    0.00      16/136         tLweSymEncrypt [46]
                0.00    0.03     120/136         tGswEncryptZero [17]
[15]     1.5    0.00    0.03     136         tLweSymEncryptZero [15]
                0.00    0.01  139264/139280      gaussian32 [24]
                0.00    0.01     272/7472        torusPolynomialAddMulRFFT [4]
                0.00    0.01     272/272         torusPolynomialUniform [45]
-----------------------------------------------
                0.03    0.00 15306752/15306752     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[16]     1.4    0.03    0.00 15306752         double std::real<double>(std::complex<double> const&) [16]
                0.00    0.00 15306752/15306752     std::complex<double>::real[abi:cxx11]() const [454]
-----------------------------------------------
                0.00    0.03       8/8           main [3]
[17]     1.4    0.00    0.03       8         tGswEncryptZero [17]
                0.00    0.03     120/136         tLweSymEncryptZero [15]
-----------------------------------------------
                0.00    0.03    7474/7474        new_LagrangeHalfCPolynomial_array [19]
[18]     1.3    0.00    0.03    7474         init_LagrangeHalfCPolynomial_array [18]
                0.02    0.01   22422/22422       LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [20]
                0.00    0.00   22422/24904       operator new(unsigned long, void*) [467]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [49]
                0.00    0.03    7472/7474        torusPolynomialAddMulRFFT [4]
[19]     1.3    0.00    0.03    7474         new_LagrangeHalfCPolynomial_array [19]
                0.00    0.03    7474/7474        init_LagrangeHalfCPolynomial_array [18]
                0.00    0.00    7474/7474        alloc_LagrangeHalfCPolynomial_array [59]
-----------------------------------------------
                0.02    0.01   22422/22422       init_LagrangeHalfCPolynomial_array [18]
[20]     1.3    0.02    0.01   22422         LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [20]
                0.01    0.00 11480064/19135488     std::complex<double>::complex(double, double) [21]
                0.00    0.00   22422/44844       TLS wrapper function for fp1024_nayuki [53]
-----------------------------------------------
                0.00    0.00    2048/19135488     FFT_Processor_nayuki::FFT_Processor_nayuki(int) [54]
                0.00    0.00 3826688/19135488     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00 3826688/19135488     FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.01    0.00 11480064/19135488     LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [20]
[21]     0.7    0.01    0.00 19135488         std::complex<double>::complex(double, double) [21]
-----------------------------------------------
                0.01    0.00 3826688/3826688     double std::abs<double>(std::complex<double> const&) [23]
[22]     0.7    0.01    0.00 3826688         std::__complex_abs(double _Complex) [22]
-----------------------------------------------
                0.00    0.01 3826688/3826688     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[23]     0.7    0.00    0.01 3826688         double std::abs<double>(std::complex<double> const&) [23]
                0.01    0.00 3826688/3826688     std::__complex_abs(double _Complex) [22]
                0.00    0.00 3826688/11480064     std::complex<double>::__rep() const [455]
-----------------------------------------------
                0.00    0.00      16/139280      lweSymEncrypt [48]
                0.00    0.01  139264/139280      tLweSymEncryptZero [15]
[24]     0.7    0.00    0.01  139280         gaussian32 [24]
                0.00    0.01  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [27]
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [465]
                0.00    0.00  139280/139280      dtot32 [55]
-----------------------------------------------
                0.00    0.01  354294/354294      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [28]
[25]     0.7    0.00    0.01  354294         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [25]
                0.00    0.01  354294/354294      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [26]
-----------------------------------------------
                0.00    0.01  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [25]
[26]     0.7    0.00    0.01  354294         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [26]
                0.01    0.00  708588/708588      std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [41]
                0.00    0.00  708588/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [38]
-----------------------------------------------
                0.00    0.01  139280/139280      gaussian32 [24]
[27]     0.7    0.00    0.01  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [27]
                0.00    0.01  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [28]
-----------------------------------------------
                0.00    0.01  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [27]
[28]     0.7    0.00    0.01  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [28]
                0.00    0.01  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [25]
                0.00    0.00  139280/139280      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::stddev() const [463]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::mean() const [462]
-----------------------------------------------
                0.00    0.01       1/1           tLweSymDecrypt [30]
[29]     0.5    0.00    0.01       1         tLwePhase [29]
                0.01    0.00       1/1           torusPolynomialCopy [34]
                0.00    0.00       2/2           torusPolynomialSubMulRFFT [49]
-----------------------------------------------
                0.00    0.01       1/1           main [3]
[30]     0.5    0.00    0.01       1         tLweSymDecrypt [30]
                0.00    0.01       1/1           tLwePhase [29]
                0.00    0.00       1/1           tLweApproxPhase [130]
-----------------------------------------------
                0.00    0.00     480/7952        tLweAddTo [47]
                0.01    0.00    7472/7952        torusPolynomialAddMulRFFT [4]
[31]     0.5    0.01    0.00    7952         torusPolynomialAddTo [31]
-----------------------------------------------
                0.01    0.00     480/480         tLweSubMulTo [33]
[32]     0.5    0.01    0.00     480         torusPolynomialSubMulZTo [32]
-----------------------------------------------
                0.00    0.01     160/160         main [3]
[33]     0.5    0.00    0.01     160         tLweSubMulTo [33]
                0.01    0.00     480/480         torusPolynomialSubMulZTo [32]
-----------------------------------------------
                0.01    0.00       1/1           tLwePhase [29]
[34]     0.5    0.01    0.00       1         torusPolynomialCopy [34]
-----------------------------------------------
                0.01    0.00 15306752/15306752     double std::imag<double>(std::complex<double> const&) [36]
[35]     0.5    0.01    0.00 15306752         std::complex<double>::imag[abi:cxx11]() const [35]
-----------------------------------------------
                0.00    0.01 15306752/15306752     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[36]     0.5    0.00    0.01 15306752         double std::imag<double>(std::complex<double> const&) [36]
                0.01    0.00 15306752/15306752     std::complex<double>::imag[abi:cxx11]() const [35]
-----------------------------------------------
                0.01    0.00 3826688/3826688     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[37]     0.5    0.01    0.00 3826688         std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [37]
                0.00    0.00 3826688/3826688     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [456]
-----------------------------------------------
                0.00    0.00  708588/1570467     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [26]
                0.00    0.01  861879/1570467     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [44]
[38]     0.5    0.00    0.01 1570467         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [38]
                0.00    0.01 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [40]
-----------------------------------------------
                0.01    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [40]
[39]     0.5    0.01    0.00 1570467         std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [39]
-----------------------------------------------
                0.00    0.01 1570467/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [38]
[40]     0.5    0.00    0.01 1570467         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [40]
                0.01    0.00 1570467/1570467     std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [39]
-----------------------------------------------
                0.01    0.00  708588/708588      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [26]
[41]     0.5    0.01    0.00  708588         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [41]
-----------------------------------------------
                                                 <spontaneous>
[42]     0.5    0.01    0.00                 _init [42]
-----------------------------------------------
                0.00    0.00     481/288753      lweKeyGen [51]
                0.00    0.00    2048/288753      tLweKeyGen [50]
                0.00    0.00    7696/288753      lweSymEncrypt [48]
                0.00    0.01  278528/288753      torusPolynomialUniform [45]
[43]     0.2    0.00    0.01  288753         int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
                0.00    0.01  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [44]
-----------------------------------------------
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [44]
                0.00    0.01  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
[44]     0.2    0.00    0.01  288753+429675  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [44]
                0.00    0.01  861879/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [38]
                0.00    0.00 1436856/1436856     std::uniform_int_distribution<int>::param_type::a() const [459]
                0.00    0.00  718428/718428      std::uniform_int_distribution<int>::param_type::b() const [460]
                0.00    0.00  429675/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [461]
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [44]
-----------------------------------------------
                0.00    0.01     272/272         tLweSymEncryptZero [15]
[45]     0.2    0.00    0.01     272         torusPolynomialUniform [45]
                0.00    0.01  278528/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[46]     0.2    0.00    0.00      16         tLweSymEncrypt [46]
                0.00    0.00      16/136         tLweSymEncryptZero [15]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[47]     0.0    0.00    0.00     160         tLweAddTo [47]
                0.00    0.00     480/7952        torusPolynomialAddTo [31]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[48]     0.0    0.00    0.00      16         lweSymEncrypt [48]
                0.00    0.00    7696/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
                0.00    0.00      16/139280      gaussian32 [24]
-----------------------------------------------
                0.00    0.00       2/2           tLwePhase [29]
[49]     0.0    0.00    0.00       2         torusPolynomialSubMulRFFT [49]
                0.00    0.00       2/7474        TorusPolynomial_fft [7]
                0.00    0.00       2/7474        IntPolynomial_ifft [9]
                0.00    0.00       2/7474        TorusPolynomial_ifft [12]
                0.00    0.00       2/7474        new_LagrangeHalfCPolynomial_array [19]
                0.00    0.00       2/7477        new_TorusPolynomial [57]
                0.00    0.00       2/7474        LagrangeHalfCPolynomialMul [58]
                0.00    0.00       2/482         torusPolynomialSubTo [67]
                0.00    0.00       2/7477        delete_TorusPolynomial [56]
                0.00    0.00       2/7474        delete_LagrangeHalfCPolynomial_array [60]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[50]     0.0    0.00    0.00       1         tLweKeyGen [50]
                0.00    0.00    2048/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[51]     0.0    0.00    0.00       1         lweKeyGen [51]
                0.00    0.00     481/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
-----------------------------------------------
                0.00    0.00   44844/44844       TLS wrapper function for fp1024_nayuki [53]
[52]     0.0    0.00    0.00   44844         TLS init function for fp1024_nayuki [52]
                0.00    0.00       1/1           FFT_Processor_nayuki::FFT_Processor_nayuki(int) [54]
-----------------------------------------------
                0.00    0.00    7474/44844       IntPolynomial_ifft [9]
                0.00    0.00    7474/44844       TorusPolynomial_ifft [12]
                0.00    0.00    7474/44844       TorusPolynomial_fft [7]
                0.00    0.00   22422/44844       LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [20]
[53]     0.0    0.00    0.00   44844         TLS wrapper function for fp1024_nayuki [53]
                0.00    0.00   44844/44844       TLS init function for fp1024_nayuki [52]
-----------------------------------------------
                0.00    0.00       1/1           TLS init function for fp1024_nayuki [52]
[54]     0.0    0.00    0.00       1         FFT_Processor_nayuki::FFT_Processor_nayuki(int) [54]
                0.00    0.00    2048/19135488     std::complex<double>::complex(double, double) [21]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [24]
[55]     0.0    0.00    0.00  139280         dtot32 [55]
-----------------------------------------------
                0.00    0.00       2/7477        torusPolynomialSubMulRFFT [49]
                0.00    0.00       3/7477        main [3]
                0.00    0.00    7472/7477        torusPolynomialAddMulRFFT [4]
[56]     0.0    0.00    0.00    7477         delete_TorusPolynomial [56]
                0.00    0.00    7477/7486        TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/7477        torusPolynomialSubMulRFFT [49]
                0.00    0.00       3/7477        main [3]
                0.00    0.00    7472/7477        torusPolynomialAddMulRFFT [4]
[57]     0.0    0.00    0.00    7477         new_TorusPolynomial [57]
                0.00    0.00    7477/7531        TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [49]
                0.00    0.00    7472/7474        torusPolynomialAddMulRFFT [4]
[58]     0.0    0.00    0.00    7474         LagrangeHalfCPolynomialMul [58]
                0.00    0.00 3826688/3826688     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [458]
-----------------------------------------------
                0.00    0.00    7474/7474        new_LagrangeHalfCPolynomial_array [19]
[59]     0.0    0.00    0.00    7474         alloc_LagrangeHalfCPolynomial_array [59]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [49]
                0.00    0.00    7472/7474        torusPolynomialAddMulRFFT [4]
[60]     0.0    0.00    0.00    7474         delete_LagrangeHalfCPolynomial_array [60]
                0.00    0.00    7474/7474        destroy_LagrangeHalfCPolynomial_array [61]
                0.00    0.00    7474/7474        free_LagrangeHalfCPolynomial_array [62]
-----------------------------------------------
                0.00    0.00    7474/7474        delete_LagrangeHalfCPolynomial_array [60]
[61]     0.0    0.00    0.00    7474         destroy_LagrangeHalfCPolynomial_array [61]
                0.00    0.00   22422/22422       LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [468]
-----------------------------------------------
                0.00    0.00    7474/7474        delete_LagrangeHalfCPolynomial_array [60]
[62]     0.0    0.00    0.00    7474         free_LagrangeHalfCPolynomial_array [62]
-----------------------------------------------
                0.00    0.00    2400/2400        tLweAddMulRTo [5]
[63]     0.0    0.00    0.00    2400         intPolynomialNormSq2 [63]
-----------------------------------------------
                0.00    0.00       1/1025        lweSymDecrypt [121]
                0.00    0.00    1024/1025        tLweApproxPhase [130]
[64]     0.0    0.00    0.00    1025         approxPhase [64]
-----------------------------------------------
                0.00    0.00      24/936         main [3]
                0.00    0.00     912/936         tLweClear [70]
[65]     0.0    0.00    0.00     936         torusPolynomialClear [65]
-----------------------------------------------
                0.00    0.00     800/800         main [3]
[66]     0.0    0.00    0.00     800         tLweCopy [66]
-----------------------------------------------
                0.00    0.00       2/482         torusPolynomialSubMulRFFT [49]
                0.00    0.00     480/482         tLweSubTo [79]
[67]     0.0    0.00    0.00     482         torusPolynomialSubTo [67]
-----------------------------------------------
                0.00    0.00     480/480         tGswTLweDecompH [77]
[68]     0.0    0.00    0.00     480         tGswTorus32PolynomialDecompH [68]
-----------------------------------------------
                0.00    0.00     480/480         tLweAddMulTo [78]
[69]     0.0    0.00    0.00     480         torusPolynomialAddMulZTo [69]
-----------------------------------------------
                0.00    0.00      24/304         main [3]
                0.00    0.00     120/304         tGswClear [86]
                0.00    0.00     160/304         tGswExternProduct [6]
[70]     0.0    0.00    0.00     304         tLweClear [70]
                0.00    0.00     912/936         torusPolynomialClear [65]
-----------------------------------------------
                0.00    0.00     162/162         new_IntPolynomial_array [73]
[71]     0.0    0.00    0.00     162         alloc_IntPolynomial_array [71]
-----------------------------------------------
                0.00    0.00     162/162         new_IntPolynomial_array [73]
[72]     0.0    0.00    0.00     162         init_IntPolynomial_array [72]
                0.00    0.00    2404/24904       operator new(unsigned long, void*) [467]
                0.00    0.00    2404/2406        IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       2/162         TLweKey::TLweKey(TLweParams const*) [480]
                0.00    0.00     160/162         tGswExternProduct [6]
[73]     0.0    0.00    0.00     162         new_IntPolynomial_array [73]
                0.00    0.00     162/162         alloc_IntPolynomial_array [71]
                0.00    0.00     162/162         init_IntPolynomial_array [72]
-----------------------------------------------
                0.00    0.00       1/161         TLweKey::~TLweKey() [505]
                0.00    0.00     160/161         tGswExternProduct [6]
[74]     0.0    0.00    0.00     161         delete_IntPolynomial_array [74]
                0.00    0.00     161/161         destroy_IntPolynomial_array [75]
                0.00    0.00     161/161         free_IntPolynomial_array [76]
-----------------------------------------------
                0.00    0.00     161/161         delete_IntPolynomial_array [74]
[75]     0.0    0.00    0.00     161         destroy_IntPolynomial_array [75]
                0.00    0.00    2402/2404        IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00     161/161         delete_IntPolynomial_array [74]
[76]     0.0    0.00    0.00     161         free_IntPolynomial_array [76]
-----------------------------------------------
                0.00    0.00     160/160         tGswExternProduct [6]
[77]     0.0    0.00    0.00     160         tGswTLweDecompH [77]
                0.00    0.00     480/480         tGswTorus32PolynomialDecompH [68]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[78]     0.0    0.00    0.00     160         tLweAddMulTo [78]
                0.00    0.00     480/480         torusPolynomialAddMulZTo [69]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[79]     0.0    0.00    0.00     160         tLweSubTo [79]
                0.00    0.00     480/482         torusPolynomialSubTo [67]
-----------------------------------------------
                0.00    0.00      24/24          main [3]
[80]     0.0    0.00    0.00      24         lweClear [80]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [84]
[81]     0.0    0.00    0.00      18         alloc_TorusPolynomial_array [81]
-----------------------------------------------
                0.00    0.00       3/18          new_TLweSample [100]
                0.00    0.00      15/18          init_TLweSample_array [119]
[82]     0.0    0.00    0.00      18         init_TLweSample [82]
                0.00    0.00      18/24904       operator new(unsigned long, void*) [467]
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [473]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [84]
[83]     0.0    0.00    0.00      18         init_TorusPolynomial_array [83]
                0.00    0.00      54/24904       operator new(unsigned long, void*) [467]
                0.00    0.00      54/7531        TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [473]
[84]     0.0    0.00    0.00      18         new_TorusPolynomial_array [84]
                0.00    0.00      18/18          alloc_TorusPolynomial_array [81]
                0.00    0.00      18/18          init_TorusPolynomial_array [83]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[85]     0.0    0.00    0.00      16         modSwitchToTorus32 [85]
-----------------------------------------------
                0.00    0.00       8/8           main [3]
[86]     0.0    0.00    0.00       8         tGswClear [86]
                0.00    0.00     120/304         tLweClear [70]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [99]
[87]     0.0    0.00    0.00       3         alloc_LweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           new_TLweSample [100]
[88]     0.0    0.00    0.00       3         alloc_TLweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[89]     0.0    0.00    0.00       3         delete_LweSample [89]
                0.00    0.00       3/3           destroy_LweSample [92]
                0.00    0.00       3/3           free_LweSample [95]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[90]     0.0    0.00    0.00       3         delete_TLweSample [90]
                0.00    0.00       3/3           free_TLweSample [96]
                0.00    0.00       3/3           destroy_TLweSample [93]
-----------------------------------------------
                0.00    0.00       3/3           TLweSample::~TLweSample() [475]
[91]     0.0    0.00    0.00       3         delete_TorusPolynomial_array [91]
                0.00    0.00       3/3           destroy_TorusPolynomial_array [94]
                0.00    0.00       3/3           free_TorusPolynomial_array [97]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [89]
[92]     0.0    0.00    0.00       3         destroy_LweSample [92]
                0.00    0.00       3/3           LweSample::~LweSample() [477]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [90]
[93]     0.0    0.00    0.00       3         destroy_TLweSample [93]
                0.00    0.00       3/3           TLweSample::~TLweSample() [475]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [91]
[94]     0.0    0.00    0.00       3         destroy_TorusPolynomial_array [94]
                0.00    0.00       9/7486        TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [89]
[95]     0.0    0.00    0.00       3         free_LweSample [95]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [90]
[96]     0.0    0.00    0.00       3         free_TLweSample [96]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [91]
[97]     0.0    0.00    0.00       3         free_TorusPolynomial_array [97]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [99]
[98]     0.0    0.00    0.00       3         init_LweSample [98]
                0.00    0.00       3/24904       operator new(unsigned long, void*) [467]
                0.00    0.00       3/3           LweSample::LweSample(LweParams const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[99]     0.0    0.00    0.00       3         new_LweSample [99]
                0.00    0.00       3/3           alloc_LweSample [87]
                0.00    0.00       3/3           init_LweSample [98]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[100]    0.0    0.00    0.00       3         new_TLweSample [100]
                0.00    0.00       3/3           alloc_TLweSample [88]
                0.00    0.00       3/18          init_TLweSample [82]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[101]    0.0    0.00    0.00       2         delete_IntPolynomial [101]
                0.00    0.00       2/2404        IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[102]    0.0    0.00    0.00       2         modSwitchFromTorus32 [102]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[103]    0.0    0.00    0.00       2         new_IntPolynomial [103]
                0.00    0.00       2/2406        IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [122]
[104]    0.0    0.00    0.00       1         alloc_LweKey [104]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [126]
[105]    0.0    0.00    0.00       1         alloc_TGswSample [105]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [127]
[106]    0.0    0.00    0.00       1         alloc_TLweKey [106]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [129]
[107]    0.0    0.00    0.00       1         alloc_TLweSample_array [107]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[108]    0.0    0.00    0.00       1         delete_LweKey [108]
                0.00    0.00       1/1           destroy_LweKey [112]
                0.00    0.00       1/1           free_LweKey [114]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[109]    0.0    0.00    0.00       1         delete_LweParams [109]
                0.00    0.00       1/2           LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[110]    0.0    0.00    0.00       1         delete_TLweKey [110]
                0.00    0.00       1/1           destroy_TLweKey [113]
                0.00    0.00       1/1           free_TLweKey [115]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[111]    0.0    0.00    0.00       1         delete_TLweParams [111]
                0.00    0.00       1/1           TLweParams::~TLweParams() [501]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [108]
[112]    0.0    0.00    0.00       1         destroy_LweKey [112]
                0.00    0.00       1/1           LweKey::~LweKey() [503]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [110]
[113]    0.0    0.00    0.00       1         destroy_TLweKey [113]
                0.00    0.00       1/1           TLweKey::~TLweKey() [505]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [108]
[114]    0.0    0.00    0.00       1         free_LweKey [114]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [110]
[115]    0.0    0.00    0.00       1         free_TLweKey [115]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [122]
[116]    0.0    0.00    0.00       1         init_LweKey [116]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [467]
                0.00    0.00       1/1           LweKey::LweKey(LweParams const*) [502]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [126]
[117]    0.0    0.00    0.00       1         init_TGswSample [117]
                0.00    0.00       1/1           new_TLweSample_array [129]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [467]
                0.00    0.00       1/1           TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [127]
[118]    0.0    0.00    0.00       1         init_TLweKey [118]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [467]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [480]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [129]
[119]    0.0    0.00    0.00       1         init_TLweSample_array [119]
                0.00    0.00      15/18          init_TLweSample [82]
-----------------------------------------------
                0.00    0.00       1/1           lweSymDecrypt [121]
[120]    0.0    0.00    0.00       1         lwePhase [120]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[121]    0.0    0.00    0.00       1         lweSymDecrypt [121]
                0.00    0.00       1/1           lwePhase [120]
                0.00    0.00       1/1025        approxPhase [64]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[122]    0.0    0.00    0.00       1         new_LweKey [122]
                0.00    0.00       1/1           alloc_LweKey [104]
                0.00    0.00       1/1           init_LweKey [116]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[123]    0.0    0.00    0.00       1         new_LweParams [123]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[124]    0.0    0.00    0.00       1         new_TGswKey [124]
                0.00    0.00       1/1           TGswKey::TGswKey(TGswParams const*) [504]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[125]    0.0    0.00    0.00       1         new_TGswParams [125]
                0.00    0.00       1/1           TGswParams::TGswParams(int, int, TLweParams const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[126]    0.0    0.00    0.00       1         new_TGswSample [126]
                0.00    0.00       1/1           alloc_TGswSample [105]
                0.00    0.00       1/1           init_TGswSample [117]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[127]    0.0    0.00    0.00       1         new_TLweKey [127]
                0.00    0.00       1/1           alloc_TLweKey [106]
                0.00    0.00       1/1           init_TLweKey [118]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[128]    0.0    0.00    0.00       1         new_TLweParams [128]
                0.00    0.00       1/1           TLweParams::TLweParams(int, int, double, double) [500]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [117]
[129]    0.0    0.00    0.00       1         new_TLweSample_array [129]
                0.00    0.00       1/1           alloc_TLweSample_array [107]
                0.00    0.00       1/1           init_TLweSample_array [119]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [30]
[130]    0.0    0.00    0.00       1         tLweApproxPhase [130]
                0.00    0.00    1024/1025        approxPhase [64]
-----------------------------------------------
                0.00    0.00 15306752/15306752     double std::real<double>(std::complex<double> const&) [16]
[454]    0.0    0.00    0.00 15306752         std::complex<double>::real[abi:cxx11]() const [454]
-----------------------------------------------
                0.00    0.00 3826688/11480064     double std::abs<double>(std::complex<double> const&) [23]
                0.00    0.00 3826688/11480064     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [456]
                0.00    0.00 3826688/11480064     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [457]
[455]    0.0    0.00    0.00 11480064         std::complex<double>::__rep() const [455]
-----------------------------------------------
                0.00    0.00 3826688/3826688     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [37]
[456]    0.0    0.00    0.00 3826688         std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [456]
                0.00    0.00 3826688/11480064     std::complex<double>::__rep() const [455]
-----------------------------------------------
                0.00    0.00 3826688/3826688     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [458]
[457]    0.0    0.00    0.00 3826688         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [457]
                0.00    0.00 3826688/11480064     std::complex<double>::__rep() const [455]
-----------------------------------------------
                0.00    0.00 3826688/3826688     LagrangeHalfCPolynomialMul [58]
[458]    0.0    0.00    0.00 3826688         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [458]
                0.00    0.00 3826688/3826688     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [457]
-----------------------------------------------
                0.00    0.00 1436856/1436856     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [44]
[459]    0.0    0.00    0.00 1436856         std::uniform_int_distribution<int>::param_type::a() const [459]
-----------------------------------------------
                0.00    0.00  718428/718428      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [44]
[460]    0.0    0.00    0.00  718428         std::uniform_int_distribution<int>::param_type::b() const [460]
-----------------------------------------------
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00  429675/429679      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [44]
[461]    0.0    0.00    0.00  429679         std::uniform_int_distribution<int>::param_type::param_type(int, int) [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [28]
[462]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::mean() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [28]
[463]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::stddev() const [463]
-----------------------------------------------
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [465]
[464]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::param_type(double, double) [464]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [24]
[465]    0.0    0.00    0.00  139280         std::normal_distribution<double>::normal_distribution(double, double) [465]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::param_type(double, double) [464]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [28]
[466]    0.0    0.00    0.00  139280         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
-----------------------------------------------
                0.00    0.00       1/24904       init_LweKey [116]
                0.00    0.00       1/24904       init_TGswSample [117]
                0.00    0.00       1/24904       init_TLweKey [118]
                0.00    0.00       3/24904       init_LweSample [98]
                0.00    0.00      18/24904       init_TLweSample [82]
                0.00    0.00      54/24904       init_TorusPolynomial_array [83]
                0.00    0.00    2404/24904       init_IntPolynomial_array [72]
                0.00    0.00   22422/24904       init_LagrangeHalfCPolynomial_array [18]
[467]    0.0    0.00    0.00   24904         operator new(unsigned long, void*) [467]
-----------------------------------------------
                0.00    0.00   22422/22422       destroy_LagrangeHalfCPolynomial_array [61]
[468]    0.0    0.00    0.00   22422         LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [468]
-----------------------------------------------
                0.00    0.00      54/7531        init_TorusPolynomial_array [83]
                0.00    0.00    7477/7531        new_TorusPolynomial [57]
[469]    0.0    0.00    0.00    7531         TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00       9/7486        destroy_TorusPolynomial_array [94]
                0.00    0.00    7477/7486        delete_TorusPolynomial [56]
[470]    0.0    0.00    0.00    7486         TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/2406        new_IntPolynomial [103]
                0.00    0.00    2404/2406        init_IntPolynomial_array [72]
[471]    0.0    0.00    0.00    2406         IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       2/2404        delete_IntPolynomial [101]
                0.00    0.00    2402/2404        destroy_IntPolynomial_array [75]
[472]    0.0    0.00    0.00    2404         IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00      18/18          init_TLweSample [82]
[473]    0.0    0.00    0.00      18         TLweSample::TLweSample(TLweParams const*) [473]
                0.00    0.00      18/18          new_TorusPolynomial_array [84]
-----------------------------------------------
                0.00    0.00       1/4           lweKeyGen [51]
                0.00    0.00       1/4           tLweKeyGen [50]
                0.00    0.00       2/4           __static_initialization_and_destruction_0(int, int) [492]
[474]    0.0    0.00    0.00       4         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [461]
-----------------------------------------------
                0.00    0.00       3/3           destroy_TLweSample [93]
[475]    0.0    0.00    0.00       3         TLweSample::~TLweSample() [475]
                0.00    0.00       3/3           delete_TorusPolynomial_array [91]
-----------------------------------------------
                0.00    0.00       3/3           init_LweSample [98]
[476]    0.0    0.00    0.00       3         LweSample::LweSample(LweParams const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           destroy_LweSample [92]
[477]    0.0    0.00    0.00       3         LweSample::~LweSample() [477]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
[478]    0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
[479]    0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       1/2           TGswKey::TGswKey(TGswParams const*) [504]
                0.00    0.00       1/2           init_TLweKey [118]
[480]    0.0    0.00    0.00       2         TLweKey::TLweKey(TLweParams const*) [480]
                0.00    0.00       2/162         new_IntPolynomial_array [73]
-----------------------------------------------
                0.00    0.00       1/2           new_LweParams [123]
                0.00    0.00       1/2           TLweParams::TLweParams(int, int, double, double) [500]
[481]    0.0    0.00    0.00       2         LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/2           delete_LweParams [109]
                0.00    0.00       1/2           TLweParams::~TLweParams() [501]
[482]    0.0    0.00    0.00       2         LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [522]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_bootsNAND [513]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKeyFFT [518]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKey [517]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_lweKeyGen [521]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16renormalizeKSkeyP15LweKeySwitchKeyPK6LweKeyPKi [509]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_debug_accum_key [514]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN19LweBootstrappingKeyC2EPK9LweParamsPK10TGswParamsPK10TLweParamsS2_P10TGswSampleP15LweKeySwitchKey [511]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN13IntPolynomialC2Ei [510]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [516]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
                0.00    0.00       2/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_die_dramatically [515]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK10StdIstream7getLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [512]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSampleFFT [520]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSample [519]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_tLweKeyGen [523]
[497]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswParams [125]
[498]    0.0    0.00    0.00       1         TGswParams::TGswParams(int, int, TLweParams const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [117]
[499]    0.0    0.00    0.00       1         TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweParams [128]
[500]    0.0    0.00    0.00       1         TLweParams::TLweParams(int, int, double, double) [500]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweParams [111]
[501]    0.0    0.00    0.00       1         TLweParams::~TLweParams() [501]
                0.00    0.00       1/2           LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           init_LweKey [116]
[502]    0.0    0.00    0.00       1         LweKey::LweKey(LweParams const*) [502]
-----------------------------------------------
                0.00    0.00       1/1           destroy_LweKey [112]
[503]    0.0    0.00    0.00       1         LweKey::~LweKey() [503]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswKey [124]
[504]    0.0    0.00    0.00       1         TGswKey::TGswKey(TGswParams const*) [504]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [480]
-----------------------------------------------
                0.00    0.00       1/1           destroy_TLweKey [113]
[505]    0.0    0.00    0.00       1         TLweKey::~TLweKey() [505]
                0.00    0.00       1/161         delete_IntPolynomial_array [74]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
[506]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
[507]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [492]
[508]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [9] IntPolynomial_ifft    [506] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [24] gaussian32
  [58] LagrangeHalfCPolynomialMul [507] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [72] init_IntPolynomial_array
   [7] TorusPolynomial_fft   [508] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [18] init_LagrangeHalfCPolynomial_array
  [12] TorusPolynomial_ifft   [38] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [116] init_LweKey
 [483] __static_initialization_and_destruction_0(int, int) [21] std::complex<double>::complex(double, double) [98] init_LweSample
 [484] __static_initialization_and_destruction_0(int, int) [456] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [117] init_TGswSample
 [485] __static_initialization_and_destruction_0(int, int) [457] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [118] init_TLweKey
 [486] __static_initialization_and_destruction_0(int, int) [39] std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [82] init_TLweSample
 [487] __static_initialization_and_destruction_0(int, int) [478] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [119] init_TLweSample_array
 [488] __static_initialization_and_destruction_0(int, int) [40] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [83] init_TorusPolynomial_array
 [489] __static_initialization_and_destruction_0(int, int) [479] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [63] intPolynomialNormSq2
 [490] __static_initialization_and_destruction_0(int, int) [466] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [80] lweClear
 [491] __static_initialization_and_destruction_0(int, int) [25] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [51] lweKeyGen
 [492] __static_initialization_and_destruction_0(int, int) [22] std::__complex_abs(double _Complex) [120] lwePhase
 [493] __static_initialization_and_destruction_0(int, int) [26] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [121] lweSymDecrypt
 [494] __static_initialization_and_destruction_0(int, int) [23] double std::abs<double>(std::complex<double> const&) [48] lweSymEncrypt
 [495] __static_initialization_and_destruction_0(int, int) [36] double std::imag<double>(std::complex<double> const&) [102] modSwitchFromTorus32
 [496] __static_initialization_and_destruction_0(int, int) [16] double std::real<double>(std::complex<double> const&) [85] modSwitchToTorus32
 [497] __static_initialization_and_destruction_0(int, int) [37] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [103] new_IntPolynomial
 [498] TGswParams::TGswParams(int, int, TLweParams const*) [458] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [73] new_IntPolynomial_array
 [499] TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [52] TLS init function for fp1024_nayuki [19] new_LagrangeHalfCPolynomial_array
 [500] TLweParams::TLweParams(int, int, double, double) [53] TLS wrapper function for fp1024_nayuki [122] new_LweKey
 [501] TLweParams::~TLweParams() [467] operator new(unsigned long, void*) [123] new_LweParams
 [473] TLweSample::TLweSample(TLweParams const*) [42] _init [99] new_LweSample
 [475] TLweSample::~TLweSample() [71] alloc_IntPolynomial_array [124] new_TGswKey
 [471] IntPolynomial::IntPolynomial(int) [59] alloc_LagrangeHalfCPolynomial_array [125] new_TGswParams
 [472] IntPolynomial::~IntPolynomial() [104] alloc_LweKey [126] new_TGswSample
 [469] TorusPolynomial::TorusPolynomial(int) [87] alloc_LweSample [127] new_TLweKey
 [470] TorusPolynomial::~TorusPolynomial() [105] alloc_TGswSample [128] new_TLweParams
  [10] FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [106] alloc_TLweKey [100] new_TLweSample
  [11] FFT_Processor_nayuki::check_alternate_real() [88] alloc_TLweSample [129] new_TLweSample_array
  [14] FFT_Processor_nayuki::check_conjugate_cplx() [107] alloc_TLweSample_array [57] new_TorusPolynomial
   [8] FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [81] alloc_TorusPolynomial_array [84] new_TorusPolynomial_array
  [13] FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [64] approxPhase [86] tGswClear
  [54] FFT_Processor_nayuki::FFT_Processor_nayuki(int) [101] delete_IntPolynomial [17] tGswEncryptZero
  [20] LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [74] delete_IntPolynomial_array [6] tGswExternProduct
 [468] LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [60] delete_LagrangeHalfCPolynomial_array [77] tGswTLweDecompH
 [502] LweKey::LweKey(LweParams const*) [108] delete_LweKey [68] tGswTorus32PolynomialDecompH
 [503] LweKey::~LweKey()     [109] delete_LweParams        [5] tLweAddMulRTo
 [504] TGswKey::TGswKey(TGswParams const*) [89] delete_LweSample [78] tLweAddMulTo
 [480] TLweKey::TLweKey(TLweParams const*) [110] delete_TLweKey [47] tLweAddTo
 [505] TLweKey::~TLweKey()   [111] delete_TLweParams     [130] tLweApproxPhase
 [481] LweParams::LweParams(int, double, double) [90] delete_TLweSample [70] tLweClear
 [482] LweParams::~LweParams() [56] delete_TorusPolynomial [66] tLweCopy
 [476] LweSample::LweSample(LweParams const*) [91] delete_TorusPolynomial_array [50] tLweKeyGen
 [477] LweSample::~LweSample() [75] destroy_IntPolynomial_array [29] tLwePhase
 [462] std::normal_distribution<double>::param_type::mean() const [61] destroy_LagrangeHalfCPolynomial_array [33] tLweSubMulTo
 [463] std::normal_distribution<double>::param_type::stddev() const [112] destroy_LweKey [79] tLweSubTo
 [459] std::uniform_int_distribution<int>::param_type::a() const [92] destroy_LweSample [30] tLweSymDecrypt
 [460] std::uniform_int_distribution<int>::param_type::b() const [113] destroy_TLweKey [46] tLweSymEncrypt
  [35] std::complex<double>::imag[abi:cxx11]() const [93] destroy_TLweSample [15] tLweSymEncryptZero
 [454] std::complex<double>::real[abi:cxx11]() const [94] destroy_TorusPolynomial_array [4] torusPolynomialAddMulRFFT
 [455] std::complex<double>::__rep() const [55] dtot32    [69] torusPolynomialAddMulZTo
 [464] std::normal_distribution<double>::param_type::param_type(double, double) [2] fft_transform [31] torusPolynomialAddTo
 [465] std::normal_distribution<double>::normal_distribution(double, double) [1] fft_transform_reverse [65] torusPolynomialClear
  [27] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [76] free_IntPolynomial_array [34] torusPolynomialCopy
  [28] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [62] free_LagrangeHalfCPolynomial_array [49] torusPolynomialSubMulRFFT
 [461] std::uniform_int_distribution<int>::param_type::param_type(int, int) [114] free_LweKey [32] torusPolynomialSubMulZTo
 [474] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [95] free_LweSample [67] torusPolynomialSubTo
  [43] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [115] free_TLweKey [45] torusPolynomialUniform
  [44] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [96] free_TLweSample
  [41] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [97] free_TorusPolynomial_array
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 57.08      1.29     1.29                             fft_transform_reverse
 23.01      1.81     0.52                             fft_transform
  4.87      1.92     0.11    22422     0.00     0.00  FFT_Processor_nayuki::check_alternate_real()
  3.10      1.99     0.07     7474     0.01     0.02  FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*)
  3.10      2.06     0.07     7474     0.01     0.02  FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*)
  2.65      2.12     0.06     7474     0.01     0.01  FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*)
  1.33      2.15     0.03    22422     0.00     0.00  FFT_Processor_nayuki::check_conjugate_cplx()
  0.66      2.17     0.01 11480064     0.00     0.00  std::complex<double>::__rep() const
  0.44      2.17     0.01 15306752     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.44      2.19     0.01 15306752     0.00     0.00  double std::imag<double>(std::complex<double> const&)
  0.44      2.19     0.01 15306752     0.00     0.00  double std::real<double>(std::complex<double> const&)
  0.44      2.21     0.01  3826688     0.00     0.00  std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.44      2.21     0.01   708588     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.44      2.23     0.01   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&)
  0.44      2.23     0.01     7952     0.00     0.00  torusPolynomialAddTo
  0.44      2.25     0.01      800     0.01     0.01  tLweCopy
  0.44      2.25     0.01      480     0.02     0.02  tGswTorus32PolynomialDecompH
  0.22      2.26     0.01    44844     0.00     0.00  TLS wrapper function for fp1024_nayuki
  0.00      2.26     0.00 19135488     0.00     0.00  std::complex<double>::complex(double, double)
  0.00      2.26     0.00 15306752     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.00      2.26     0.00  3826688     0.00     0.00  std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.00      2.26     0.00  3826688     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.00      2.26     0.00  3826688     0.00     0.00  std::__complex_abs(double _Complex)
  0.00      2.26     0.00  3826688     0.00     0.00  double std::abs<double>(std::complex<double> const&)
  0.00      2.26     0.00  3826688     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.00      2.26     0.00  1570467     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.00      2.26     0.00  1570467     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
  0.00      2.26     0.00  1570467     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00      2.26     0.00  1436856     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00      2.26     0.00   718428     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00      2.26     0.00   429679     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00      2.26     0.00   354294     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.00      2.26     0.00   354294     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.26     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.26     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.00      2.26     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00      2.26     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00      2.26     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00      2.26     0.00   139280     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00      2.26     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.26     0.00   139280     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.26     0.00   139280     0.00     0.00  dtot32
  0.00      2.26     0.00   139280     0.00     0.00  gaussian32
  0.00      2.26     0.00    44844     0.00     0.00  TLS init function for fp1024_nayuki
  0.00      2.26     0.00    24904     0.00     0.00  operator new(unsigned long, void*)
  0.00      2.26     0.00    22422     0.00     0.00  LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int)
  0.00      2.26     0.00    22422     0.00     0.00  LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL()
  0.00      2.26     0.00     7531     0.00     0.00  TorusPolynomial::TorusPolynomial(int)
  0.00      2.26     0.00     7486     0.00     0.00  TorusPolynomial::~TorusPolynomial()
  0.00      2.26     0.00     7477     0.00     0.00  delete_TorusPolynomial
  0.00      2.26     0.00     7477     0.00     0.00  new_TorusPolynomial
  0.00      2.26     0.00     7474     0.00     0.02  IntPolynomial_ifft
  0.00      2.26     0.00     7474     0.00     0.00  LagrangeHalfCPolynomialMul
  0.00      2.26     0.00     7474     0.00     0.02  TorusPolynomial_fft
  0.00      2.26     0.00     7474     0.00     0.01  TorusPolynomial_ifft
  0.00      2.26     0.00     7474     0.00     0.00  alloc_LagrangeHalfCPolynomial_array
  0.00      2.26     0.00     7474     0.00     0.00  delete_LagrangeHalfCPolynomial_array
  0.00      2.26     0.00     7474     0.00     0.00  destroy_LagrangeHalfCPolynomial_array
  0.00      2.26     0.00     7474     0.00     0.00  free_LagrangeHalfCPolynomial_array
  0.00      2.26     0.00     7474     0.00     0.00  init_LagrangeHalfCPolynomial_array
  0.00      2.26     0.00     7474     0.00     0.00  new_LagrangeHalfCPolynomial_array
  0.00      2.26     0.00     7472     0.00     0.05  torusPolynomialAddMulRFFT
  0.00      2.26     0.00     2406     0.00     0.00  IntPolynomial::IntPolynomial(int)
  0.00      2.26     0.00     2404     0.00     0.00  IntPolynomial::~IntPolynomial()
  0.00      2.26     0.00     2400     0.00     0.00  intPolynomialNormSq2
  0.00      2.26     0.00     2400     0.00     0.16  tLweAddMulRTo
  0.00      2.26     0.00     1025     0.00     0.00  approxPhase
  0.00      2.26     0.00      936     0.00     0.00  torusPolynomialClear
  0.00      2.26     0.00      482     0.00     0.00  torusPolynomialSubTo
  0.00      2.26     0.00      480     0.00     0.00  torusPolynomialAddMulZTo
  0.00      2.26     0.00      480     0.00     0.00  torusPolynomialSubMulZTo
  0.00      2.26     0.00      304     0.00     0.00  tLweClear
  0.00      2.26     0.00      272     0.00     0.00  torusPolynomialUniform
  0.00      2.26     0.00      162     0.00     0.00  alloc_IntPolynomial_array
  0.00      2.26     0.00      162     0.00     0.00  init_IntPolynomial_array
  0.00      2.26     0.00      162     0.00     0.00  new_IntPolynomial_array
  0.00      2.26     0.00      161     0.00     0.00  delete_IntPolynomial_array
  0.00      2.26     0.00      161     0.00     0.00  destroy_IntPolynomial_array
  0.00      2.26     0.00      161     0.00     0.00  free_IntPolynomial_array
  0.00      2.26     0.00      160     0.00     2.53  tGswExternProduct
  0.00      2.26     0.00      160     0.00     0.06  tGswTLweDecompH
  0.00      2.26     0.00      160     0.00     0.00  tLweAddMulTo
  0.00      2.26     0.00      160     0.00     0.00  tLweAddTo
  0.00      2.26     0.00      160     0.00     0.00  tLweSubMulTo
  0.00      2.26     0.00      160     0.00     0.00  tLweSubTo
  0.00      2.26     0.00      136     0.00     0.26  tLweSymEncryptZero
  0.00      2.26     0.00       24     0.00     0.00  lweClear
  0.00      2.26     0.00       18     0.00     0.00  TLweSample::TLweSample(TLweParams const*)
  0.00      2.26     0.00       18     0.00     0.00  alloc_TorusPolynomial_array
  0.00      2.26     0.00       18     0.00     0.00  init_TLweSample
  0.00      2.26     0.00       18     0.00     0.00  init_TorusPolynomial_array
  0.00      2.26     0.00       18     0.00     0.00  new_TorusPolynomial_array
  0.00      2.26     0.00       16     0.00     0.00  lweSymEncrypt
  0.00      2.26     0.00       16     0.00     0.00  modSwitchToTorus32
  0.00      2.26     0.00       16     0.00     0.26  tLweSymEncrypt
  0.00      2.26     0.00        8     0.00     0.00  tGswClear
  0.00      2.26     0.00        8     0.00     3.85  tGswEncryptZero
  0.00      2.26     0.00        4     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00      2.26     0.00        3     0.00     0.00  TLweSample::~TLweSample()
  0.00      2.26     0.00        3     0.00     0.00  LweSample::LweSample(LweParams const*)
  0.00      2.26     0.00        3     0.00     0.00  LweSample::~LweSample()
  0.00      2.26     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      2.26     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00      2.26     0.00        3     0.00     0.00  alloc_LweSample
  0.00      2.26     0.00        3     0.00     0.00  alloc_TLweSample
  0.00      2.26     0.00        3     0.00     0.00  delete_LweSample
  0.00      2.26     0.00        3     0.00     0.00  delete_TLweSample
  0.00      2.26     0.00        3     0.00     0.00  delete_TorusPolynomial_array
  0.00      2.26     0.00        3     0.00     0.00  destroy_LweSample
  0.00      2.26     0.00        3     0.00     0.00  destroy_TLweSample
  0.00      2.26     0.00        3     0.00     0.00  destroy_TorusPolynomial_array
  0.00      2.26     0.00        3     0.00     0.00  free_LweSample
  0.00      2.26     0.00        3     0.00     0.00  free_TLweSample
  0.00      2.26     0.00        3     0.00     0.00  free_TorusPolynomial_array
  0.00      2.26     0.00        3     0.00     0.00  init_LweSample
  0.00      2.26     0.00        3     0.00     0.00  new_LweSample
  0.00      2.26     0.00        3     0.00     0.00  new_TLweSample
  0.00      2.26     0.00        2     0.00     0.00  TLweKey::TLweKey(TLweParams const*)
  0.00      2.26     0.00        2     0.00     0.00  LweParams::LweParams(int, double, double)
  0.00      2.26     0.00        2     0.00     0.00  LweParams::~LweParams()
  0.00      2.26     0.00        2     0.00     0.00  delete_IntPolynomial
  0.00      2.26     0.00        2     0.00     0.00  modSwitchFromTorus32
  0.00      2.26     0.00        2     0.00     0.00  new_IntPolynomial
  0.00      2.26     0.00        2     0.00     0.05  torusPolynomialSubMulRFFT
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.26     0.00        1     0.00     0.00  TGswParams::TGswParams(int, int, TLweParams const*)
  0.00      2.26     0.00        1     0.00     0.00  TGswSample::TGswSample(TLweSample*, TLweSample**, int, int)
  0.00      2.26     0.00        1     0.00     0.00  TLweParams::TLweParams(int, int, double, double)
  0.00      2.26     0.00        1     0.00     0.00  TLweParams::~TLweParams()
  0.00      2.26     0.00        1     0.00     0.00  FFT_Processor_nayuki::FFT_Processor_nayuki(int)
  0.00      2.26     0.00        1     0.00     0.00  LweKey::LweKey(LweParams const*)
  0.00      2.26     0.00        1     0.00     0.00  LweKey::~LweKey()
  0.00      2.26     0.00        1     0.00     0.00  TGswKey::TGswKey(TGswParams const*)
  0.00      2.26     0.00        1     0.00     0.00  TLweKey::~TLweKey()
  0.00      2.26     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00      2.26     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00      2.26     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00      2.26     0.00        1     0.00     0.00  alloc_LweKey
  0.00      2.26     0.00        1     0.00     0.00  alloc_TGswSample
  0.00      2.26     0.00        1     0.00     0.00  alloc_TLweKey
  0.00      2.26     0.00        1     0.00     0.00  alloc_TLweSample_array
  0.00      2.26     0.00        1     0.00     0.00  delete_LweKey
  0.00      2.26     0.00        1     0.00     0.00  delete_LweParams
  0.00      2.26     0.00        1     0.00     0.00  delete_TLweKey
  0.00      2.26     0.00        1     0.00     0.00  delete_TLweParams
  0.00      2.26     0.00        1     0.00     0.00  destroy_LweKey
  0.00      2.26     0.00        1     0.00     0.00  destroy_TLweKey
  0.00      2.26     0.00        1     0.00     0.00  free_LweKey
  0.00      2.26     0.00        1     0.00     0.00  free_TLweKey
  0.00      2.26     0.00        1     0.00     0.00  init_LweKey
  0.00      2.26     0.00        1     0.00     0.00  init_TGswSample
  0.00      2.26     0.00        1     0.00     0.00  init_TLweKey
  0.00      2.26     0.00        1     0.00     0.00  init_TLweSample_array
  0.00      2.26     0.00        1     0.00     0.00  lweKeyGen
  0.00      2.26     0.00        1     0.00     0.00  lwePhase
  0.00      2.26     0.00        1     0.00     0.00  lweSymDecrypt
  0.00      2.26     0.00        1     0.00     0.00  new_LweKey
  0.00      2.26     0.00        1     0.00     0.00  new_LweParams
  0.00      2.26     0.00        1     0.00     0.00  new_TGswKey
  0.00      2.26     0.00        1     0.00     0.00  new_TGswParams
  0.00      2.26     0.00        1     0.00     0.00  new_TGswSample
  0.00      2.26     0.00        1     0.00     0.00  new_TLweKey
  0.00      2.26     0.00        1     0.00     0.00  new_TLweParams
  0.00      2.26     0.00        1     0.00     0.00  new_TLweSample_array
  0.00      2.26     0.00        1     0.00     0.00  tLweApproxPhase
  0.00      2.26     0.00        1     0.00     0.00  tLweKeyGen
  0.00      2.26     0.00        1     0.00     0.11  tLwePhase
  0.00      2.26     0.00        1     0.00     0.11  tLweSymDecrypt
  0.00      2.26     0.00        1     0.00     0.00  torusPolynomialCopy

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.44% of 2.26 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     57.1    1.29    0.00                 fft_transform_reverse [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     23.0    0.52    0.00                 fft_transform [2]
-----------------------------------------------
                                                 <spontaneous>
[3]     19.9    0.00    0.45                 main [3]
                0.00    0.40     160/160         tGswExternProduct [5]
                0.00    0.03       8/8           tGswEncryptZero [15]
                0.01    0.00     800/800         tLweCopy [24]
                0.00    0.00      16/16          tLweSymEncrypt [38]
                0.00    0.00     160/160         tLweAddTo [42]
                0.00    0.00       1/1           tLweSymDecrypt [45]
                0.00    0.00      16/16          lweSymEncrypt [46]
                0.00    0.00     160/160         tLweSubTo [70]
                0.00    0.00     160/160         tLweAddMulTo [68]
                0.00    0.00     160/160         tLweSubMulTo [69]
                0.00    0.00      24/24          lweClear [71]
                0.00    0.00      24/936         torusPolynomialClear [56]
                0.00    0.00      24/304         tLweClear [60]
                0.00    0.00      16/16          modSwitchToTorus32 [76]
                0.00    0.00       8/8           tGswClear [77]
                0.00    0.00       3/7477        new_TorusPolynomial [49]
                0.00    0.00       3/3           new_LweSample [90]
                0.00    0.00       3/3           new_TLweSample [91]
                0.00    0.00       3/3           delete_TLweSample [81]
                0.00    0.00       3/3           delete_LweSample [80]
                0.00    0.00       3/7477        delete_TorusPolynomial [48]
                0.00    0.00       2/2           new_IntPolynomial [94]
                0.00    0.00       2/2           modSwitchFromTorus32 [93]
                0.00    0.00       2/2           delete_IntPolynomial [92]
                0.00    0.00       1/1           new_LweParams [115]
                0.00    0.00       1/1           new_TLweParams [120]
                0.00    0.00       1/1           new_TGswParams [117]
                0.00    0.00       1/1           new_LweKey [114]
                0.00    0.00       1/1           new_TLweKey [119]
                0.00    0.00       1/1           new_TGswKey [116]
                0.00    0.00       1/1           new_TGswSample [118]
                0.00    0.00       1/1           lweKeyGen [111]
                0.00    0.00       1/1           tLweKeyGen [123]
                0.00    0.00       1/1           lweSymDecrypt [113]
                0.00    0.00       1/1           delete_TLweKey [101]
                0.00    0.00       1/1           delete_LweKey [99]
                0.00    0.00       1/1           delete_TLweParams [102]
                0.00    0.00       1/1           delete_LweParams [100]
-----------------------------------------------
                0.00    0.01     272/7472        tLweSymEncryptZero [14]
                0.00    0.39    7200/7472        tLweAddMulRTo [6]
[4]     18.1    0.00    0.41    7472         torusPolynomialAddMulRFFT [4]
                0.00    0.15    7472/7474        TorusPolynomial_fft [7]
                0.00    0.14    7472/7474        IntPolynomial_ifft [9]
                0.00    0.11    7472/7474        TorusPolynomial_ifft [12]
                0.01    0.00    7472/7952        torusPolynomialAddTo [23]
                0.00    0.00    7472/7474        LagrangeHalfCPolynomialMul [32]
                0.00    0.00    7472/7474        new_LagrangeHalfCPolynomial_array [40]
                0.00    0.00    7472/7477        new_TorusPolynomial [49]
                0.00    0.00    7472/7477        delete_TorusPolynomial [48]
                0.00    0.00    7472/7474        delete_LagrangeHalfCPolynomial_array [51]
-----------------------------------------------
                0.00    0.40     160/160         main [3]
[5]     17.9    0.00    0.40     160         tGswExternProduct [5]
                0.00    0.39    2400/2400        tLweAddMulRTo [6]
                0.00    0.01     160/160         tGswTLweDecompH [26]
                0.00    0.00     160/162         new_IntPolynomial_array [64]
                0.00    0.00     160/304         tLweClear [60]
                0.00    0.00     160/161         delete_IntPolynomial_array [65]
-----------------------------------------------
                0.00    0.39    2400/2400        tGswExternProduct [5]
[6]     17.5    0.00    0.39    2400         tLweAddMulRTo [6]
                0.00    0.39    7200/7472        torusPolynomialAddMulRFFT [4]
                0.00    0.00    2400/2400        intPolynomialNormSq2 [54]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [43]
                0.00    0.15    7472/7474        torusPolynomialAddMulRFFT [4]
[7]      6.5    0.00    0.15    7474         TorusPolynomial_fft [7]
                0.07    0.08    7474/7474        FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.07    0.08    7474/7474        TorusPolynomial_fft [7]
[8]      6.5    0.07    0.08    7474         FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.04    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.01    0.01 15306752/15306752     double std::imag<double>(std::complex<double> const&) [18]
                0.01    0.00 15306752/15306752     double std::real<double>(std::complex<double> const&) [28]
                0.01    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [16]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [43]
                0.00    0.14    7472/7474        torusPolynomialAddMulRFFT [4]
[9]      6.1    0.00    0.14    7474         IntPolynomial_ifft [9]
                0.07    0.07    7474/7474        FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.07    0.07    7474/7474        IntPolynomial_ifft [9]
[10]     6.0    0.07    0.07    7474         FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.04    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.01    0.01 3826688/3826688     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [22]
                0.01    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [16]
                0.00    0.01 3826688/3826688     double std::abs<double>(std::complex<double> const&) [35]
                0.00    0.00 3826688/19135488     std::complex<double>::complex(double, double) [448]
-----------------------------------------------
                0.04    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.04    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.04    0.00    7474/22422       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[11]     4.9    0.11    0.00   22422         FFT_Processor_nayuki::check_alternate_real() [11]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [43]
                0.00    0.11    7472/7474        torusPolynomialAddMulRFFT [4]
[12]     4.8    0.00    0.11    7474         TorusPolynomial_ifft [12]
                0.06    0.05    7474/7474        FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [37]
-----------------------------------------------
                0.06    0.05    7474/7474        TorusPolynomial_ifft [12]
[13]     4.7    0.06    0.05    7474         FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.04    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.01    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [16]
                0.00    0.00 3826688/19135488     std::complex<double>::complex(double, double) [448]
-----------------------------------------------
                0.00    0.00      16/136         tLweSymEncrypt [38]
                0.00    0.03     120/136         tGswEncryptZero [15]
[14]     1.5    0.00    0.03     136         tLweSymEncryptZero [14]
                0.00    0.02  139264/139280      gaussian32 [17]
                0.00    0.01     272/7472        torusPolynomialAddMulRFFT [4]
                0.00    0.00     272/272         torusPolynomialUniform [61]
-----------------------------------------------
                0.00    0.03       8/8           main [3]
[15]     1.4    0.00    0.03       8         tGswEncryptZero [15]
                0.00    0.03     120/136         tLweSymEncryptZero [14]
-----------------------------------------------
                0.01    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.01    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.01    0.00    7474/22422       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[16]     1.3    0.03    0.00   22422         FFT_Processor_nayuki::check_conjugate_cplx() [16]
-----------------------------------------------
                0.00    0.00      16/139280      lweSymEncrypt [46]
                0.00    0.02  139264/139280      tLweSymEncryptZero [14]
[17]     0.9    0.00    0.02  139280         gaussian32 [17]
                0.00    0.02  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [19]
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [462]
                0.00    0.00  139280/139280      dtot32 [47]
-----------------------------------------------
                0.01    0.01 15306752/15306752     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[18]     0.9    0.01    0.01 15306752         double std::imag<double>(std::complex<double> const&) [18]
                0.01    0.00 15306752/15306752     std::complex<double>::imag[abi:cxx11]() const [27]
-----------------------------------------------
                0.00    0.02  139280/139280      gaussian32 [17]
[19]     0.9    0.00    0.02  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [19]
                0.01    0.01  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [20]
-----------------------------------------------
                0.01    0.01  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [19]
[20]     0.9    0.01    0.01  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [20]
                0.00    0.01  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [30]
                0.00    0.00  139280/139280      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [463]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::stddev() const [460]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::mean() const [459]
-----------------------------------------------
                0.01    0.00 3826688/11480064     double std::abs<double>(std::complex<double> const&) [35]
                0.01    0.00 3826688/11480064     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [33]
                0.01    0.00 3826688/11480064     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [34]
[21]     0.7    0.01    0.00 11480064         std::complex<double>::__rep() const [21]
-----------------------------------------------
                0.01    0.01 3826688/3826688     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[22]     0.7    0.01    0.01 3826688         std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [22]
                0.00    0.01 3826688/3826688     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [33]
-----------------------------------------------
                0.00    0.00     480/7952        tLweAddTo [42]
                0.01    0.00    7472/7952        torusPolynomialAddMulRFFT [4]
[23]     0.4    0.01    0.00    7952         torusPolynomialAddTo [23]
-----------------------------------------------
                0.01    0.00     800/800         main [3]
[24]     0.4    0.01    0.00     800         tLweCopy [24]
-----------------------------------------------
                0.01    0.00     480/480         tGswTLweDecompH [26]
[25]     0.4    0.01    0.00     480         tGswTorus32PolynomialDecompH [25]
-----------------------------------------------
                0.00    0.01     160/160         tGswExternProduct [5]
[26]     0.4    0.00    0.01     160         tGswTLweDecompH [26]
                0.01    0.00     480/480         tGswTorus32PolynomialDecompH [25]
-----------------------------------------------
                0.01    0.00 15306752/15306752     double std::imag<double>(std::complex<double> const&) [18]
[27]     0.4    0.01    0.00 15306752         std::complex<double>::imag[abi:cxx11]() const [27]
-----------------------------------------------
                0.01    0.00 15306752/15306752     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[28]     0.4    0.01    0.00 15306752         double std::real<double>(std::complex<double> const&) [28]
                0.00    0.00 15306752/15306752     std::complex<double>::real[abi:cxx11]() const [449]
-----------------------------------------------
                0.01    0.00  708588/708588      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [31]
[29]     0.4    0.01    0.00  708588         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [29]
-----------------------------------------------
                0.00    0.01  354294/354294      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [20]
[30]     0.4    0.00    0.01  354294         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [30]
                0.00    0.01  354294/354294      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [31]
-----------------------------------------------
                0.00    0.01  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [30]
[31]     0.4    0.00    0.01  354294         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [31]
                0.01    0.00  708588/708588      std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [29]
                0.00    0.00  708588/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [451]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [43]
                0.00    0.00    7472/7474        torusPolynomialAddMulRFFT [4]
[32]     0.2    0.00    0.01    7474         LagrangeHalfCPolynomialMul [32]
                0.00    0.01 3826688/3826688     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [36]
-----------------------------------------------
                0.00    0.01 3826688/3826688     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [22]
[33]     0.2    0.00    0.01 3826688         std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [33]
                0.01    0.00 3826688/11480064     std::complex<double>::__rep() const [21]
-----------------------------------------------
                0.00    0.01 3826688/3826688     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [36]
[34]     0.2    0.00    0.01 3826688         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [34]
                0.01    0.00 3826688/11480064     std::complex<double>::__rep() const [21]
-----------------------------------------------
                0.00    0.01 3826688/3826688     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[35]     0.2    0.00    0.01 3826688         double std::abs<double>(std::complex<double> const&) [35]
                0.01    0.00 3826688/11480064     std::complex<double>::__rep() const [21]
                0.00    0.00 3826688/3826688     std::__complex_abs(double _Complex) [450]
-----------------------------------------------
                0.00    0.01 3826688/3826688     LagrangeHalfCPolynomialMul [32]
[36]     0.2    0.00    0.01 3826688         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [36]
                0.00    0.01 3826688/3826688     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [34]
-----------------------------------------------
                0.00    0.00    7474/44844       IntPolynomial_ifft [9]
                0.00    0.00    7474/44844       TorusPolynomial_ifft [12]
                0.00    0.00    7474/44844       TorusPolynomial_fft [7]
                0.00    0.00   22422/44844       LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [41]
[37]     0.2    0.00    0.00   44844         TLS wrapper function for fp1024_nayuki [37]
                0.00    0.00   44844/44844       TLS init function for fp1024_nayuki [464]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[38]     0.2    0.00    0.00      16         tLweSymEncrypt [38]
                0.00    0.00      16/136         tLweSymEncryptZero [14]
-----------------------------------------------
                0.00    0.00    7474/7474        new_LagrangeHalfCPolynomial_array [40]
[39]     0.1    0.00    0.00    7474         init_LagrangeHalfCPolynomial_array [39]
                0.00    0.00   22422/22422       LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [41]
                0.00    0.00   22422/24904       operator new(unsigned long, void*) [465]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [43]
                0.00    0.00    7472/7474        torusPolynomialAddMulRFFT [4]
[40]     0.1    0.00    0.00    7474         new_LagrangeHalfCPolynomial_array [40]
                0.00    0.00    7474/7474        init_LagrangeHalfCPolynomial_array [39]
                0.00    0.00    7474/7474        alloc_LagrangeHalfCPolynomial_array [50]
-----------------------------------------------
                0.00    0.00   22422/22422       init_LagrangeHalfCPolynomial_array [39]
[41]     0.1    0.00    0.00   22422         LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [41]
                0.00    0.00   22422/44844       TLS wrapper function for fp1024_nayuki [37]
                0.00    0.00 11480064/19135488     std::complex<double>::complex(double, double) [448]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[42]     0.0    0.00    0.00     160         tLweAddTo [42]
                0.00    0.00     480/7952        torusPolynomialAddTo [23]
-----------------------------------------------
                0.00    0.00       2/2           tLwePhase [44]
[43]     0.0    0.00    0.00       2         torusPolynomialSubMulRFFT [43]
                0.00    0.00       2/7474        TorusPolynomial_fft [7]
                0.00    0.00       2/7474        IntPolynomial_ifft [9]
                0.00    0.00       2/7474        TorusPolynomial_ifft [12]
                0.00    0.00       2/7474        LagrangeHalfCPolynomialMul [32]
                0.00    0.00       2/7474        new_LagrangeHalfCPolynomial_array [40]
                0.00    0.00       2/7477        new_TorusPolynomial [49]
                0.00    0.00       2/482         torusPolynomialSubTo [57]
                0.00    0.00       2/7477        delete_TorusPolynomial [48]
                0.00    0.00       2/7474        delete_LagrangeHalfCPolynomial_array [51]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [45]
[44]     0.0    0.00    0.00       1         tLwePhase [44]
                0.00    0.00       2/2           torusPolynomialSubMulRFFT [43]
                0.00    0.00       1/1           torusPolynomialCopy [124]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[45]     0.0    0.00    0.00       1         tLweSymDecrypt [45]
                0.00    0.00       1/1           tLwePhase [44]
                0.00    0.00       1/1           tLweApproxPhase [122]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[46]     0.0    0.00    0.00      16         lweSymEncrypt [46]
                0.00    0.00      16/139280      gaussian32 [17]
                0.00    0.00    7696/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [17]
[47]     0.0    0.00    0.00  139280         dtot32 [47]
-----------------------------------------------
                0.00    0.00       2/7477        torusPolynomialSubMulRFFT [43]
                0.00    0.00       3/7477        main [3]
                0.00    0.00    7472/7477        torusPolynomialAddMulRFFT [4]
[48]     0.0    0.00    0.00    7477         delete_TorusPolynomial [48]
                0.00    0.00    7477/7486        TorusPolynomial::~TorusPolynomial() [468]
-----------------------------------------------
                0.00    0.00       2/7477        torusPolynomialSubMulRFFT [43]
                0.00    0.00       3/7477        main [3]
                0.00    0.00    7472/7477        torusPolynomialAddMulRFFT [4]
[49]     0.0    0.00    0.00    7477         new_TorusPolynomial [49]
                0.00    0.00    7477/7531        TorusPolynomial::TorusPolynomial(int) [467]
-----------------------------------------------
                0.00    0.00    7474/7474        new_LagrangeHalfCPolynomial_array [40]
[50]     0.0    0.00    0.00    7474         alloc_LagrangeHalfCPolynomial_array [50]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [43]
                0.00    0.00    7472/7474        torusPolynomialAddMulRFFT [4]
[51]     0.0    0.00    0.00    7474         delete_LagrangeHalfCPolynomial_array [51]
                0.00    0.00    7474/7474        destroy_LagrangeHalfCPolynomial_array [52]
                0.00    0.00    7474/7474        free_LagrangeHalfCPolynomial_array [53]
-----------------------------------------------
                0.00    0.00    7474/7474        delete_LagrangeHalfCPolynomial_array [51]
[52]     0.0    0.00    0.00    7474         destroy_LagrangeHalfCPolynomial_array [52]
                0.00    0.00   22422/22422       LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [466]
-----------------------------------------------
                0.00    0.00    7474/7474        delete_LagrangeHalfCPolynomial_array [51]
[53]     0.0    0.00    0.00    7474         free_LagrangeHalfCPolynomial_array [53]
-----------------------------------------------
                0.00    0.00    2400/2400        tLweAddMulRTo [6]
[54]     0.0    0.00    0.00    2400         intPolynomialNormSq2 [54]
-----------------------------------------------
                0.00    0.00       1/1025        lweSymDecrypt [113]
                0.00    0.00    1024/1025        tLweApproxPhase [122]
[55]     0.0    0.00    0.00    1025         approxPhase [55]
-----------------------------------------------
                0.00    0.00      24/936         main [3]
                0.00    0.00     912/936         tLweClear [60]
[56]     0.0    0.00    0.00     936         torusPolynomialClear [56]
-----------------------------------------------
                0.00    0.00       2/482         torusPolynomialSubMulRFFT [43]
                0.00    0.00     480/482         tLweSubTo [70]
[57]     0.0    0.00    0.00     482         torusPolynomialSubTo [57]
-----------------------------------------------
                0.00    0.00     480/480         tLweAddMulTo [68]
[58]     0.0    0.00    0.00     480         torusPolynomialAddMulZTo [58]
-----------------------------------------------
                0.00    0.00     480/480         tLweSubMulTo [69]
[59]     0.0    0.00    0.00     480         torusPolynomialSubMulZTo [59]
-----------------------------------------------
                0.00    0.00      24/304         main [3]
                0.00    0.00     120/304         tGswClear [77]
                0.00    0.00     160/304         tGswExternProduct [5]
[60]     0.0    0.00    0.00     304         tLweClear [60]
                0.00    0.00     912/936         torusPolynomialClear [56]
-----------------------------------------------
                0.00    0.00     272/272         tLweSymEncryptZero [14]
[61]     0.0    0.00    0.00     272         torusPolynomialUniform [61]
                0.00    0.00  278528/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
-----------------------------------------------
                0.00    0.00     162/162         new_IntPolynomial_array [64]
[62]     0.0    0.00    0.00     162         alloc_IntPolynomial_array [62]
-----------------------------------------------
                0.00    0.00     162/162         new_IntPolynomial_array [64]
[63]     0.0    0.00    0.00     162         init_IntPolynomial_array [63]
                0.00    0.00    2404/24904       operator new(unsigned long, void*) [465]
                0.00    0.00    2404/2406        IntPolynomial::IntPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00       2/162         TLweKey::TLweKey(TLweParams const*) [478]
                0.00    0.00     160/162         tGswExternProduct [5]
[64]     0.0    0.00    0.00     162         new_IntPolynomial_array [64]
                0.00    0.00     162/162         alloc_IntPolynomial_array [62]
                0.00    0.00     162/162         init_IntPolynomial_array [63]
-----------------------------------------------
                0.00    0.00       1/161         TLweKey::~TLweKey() [504]
                0.00    0.00     160/161         tGswExternProduct [5]
[65]     0.0    0.00    0.00     161         delete_IntPolynomial_array [65]
                0.00    0.00     161/161         destroy_IntPolynomial_array [66]
                0.00    0.00     161/161         free_IntPolynomial_array [67]
-----------------------------------------------
                0.00    0.00     161/161         delete_IntPolynomial_array [65]
[66]     0.0    0.00    0.00     161         destroy_IntPolynomial_array [66]
                0.00    0.00    2402/2404        IntPolynomial::~IntPolynomial() [470]
-----------------------------------------------
                0.00    0.00     161/161         delete_IntPolynomial_array [65]
[67]     0.0    0.00    0.00     161         free_IntPolynomial_array [67]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[68]     0.0    0.00    0.00     160         tLweAddMulTo [68]
                0.00    0.00     480/480         torusPolynomialAddMulZTo [58]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[69]     0.0    0.00    0.00     160         tLweSubMulTo [69]
                0.00    0.00     480/480         torusPolynomialSubMulZTo [59]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[70]     0.0    0.00    0.00     160         tLweSubTo [70]
                0.00    0.00     480/482         torusPolynomialSubTo [57]
-----------------------------------------------
                0.00    0.00      24/24          main [3]
[71]     0.0    0.00    0.00      24         lweClear [71]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [75]
[72]     0.0    0.00    0.00      18         alloc_TorusPolynomial_array [72]
-----------------------------------------------
                0.00    0.00       3/18          new_TLweSample [91]
                0.00    0.00      15/18          init_TLweSample_array [110]
[73]     0.0    0.00    0.00      18         init_TLweSample [73]
                0.00    0.00      18/24904       operator new(unsigned long, void*) [465]
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [471]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [75]
[74]     0.0    0.00    0.00      18         init_TorusPolynomial_array [74]
                0.00    0.00      54/24904       operator new(unsigned long, void*) [465]
                0.00    0.00      54/7531        TorusPolynomial::TorusPolynomial(int) [467]
-----------------------------------------------
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [471]
[75]     0.0    0.00    0.00      18         new_TorusPolynomial_array [75]
                0.00    0.00      18/18          alloc_TorusPolynomial_array [72]
                0.00    0.00      18/18          init_TorusPolynomial_array [74]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[76]     0.0    0.00    0.00      16         modSwitchToTorus32 [76]
-----------------------------------------------
                0.00    0.00       8/8           main [3]
[77]     0.0    0.00    0.00       8         tGswClear [77]
                0.00    0.00     120/304         tLweClear [60]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [90]
[78]     0.0    0.00    0.00       3         alloc_LweSample [78]
-----------------------------------------------
                0.00    0.00       3/3           new_TLweSample [91]
[79]     0.0    0.00    0.00       3         alloc_TLweSample [79]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[80]     0.0    0.00    0.00       3         delete_LweSample [80]
                0.00    0.00       3/3           destroy_LweSample [83]
                0.00    0.00       3/3           free_LweSample [86]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[81]     0.0    0.00    0.00       3         delete_TLweSample [81]
                0.00    0.00       3/3           free_TLweSample [87]
                0.00    0.00       3/3           destroy_TLweSample [84]
-----------------------------------------------
                0.00    0.00       3/3           TLweSample::~TLweSample() [473]
[82]     0.0    0.00    0.00       3         delete_TorusPolynomial_array [82]
                0.00    0.00       3/3           destroy_TorusPolynomial_array [85]
                0.00    0.00       3/3           free_TorusPolynomial_array [88]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [80]
[83]     0.0    0.00    0.00       3         destroy_LweSample [83]
                0.00    0.00       3/3           LweSample::~LweSample() [475]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [81]
[84]     0.0    0.00    0.00       3         destroy_TLweSample [84]
                0.00    0.00       3/3           TLweSample::~TLweSample() [473]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [82]
[85]     0.0    0.00    0.00       3         destroy_TorusPolynomial_array [85]
                0.00    0.00       9/7486        TorusPolynomial::~TorusPolynomial() [468]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [80]
[86]     0.0    0.00    0.00       3         free_LweSample [86]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [81]
[87]     0.0    0.00    0.00       3         free_TLweSample [87]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [82]
[88]     0.0    0.00    0.00       3         free_TorusPolynomial_array [88]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [90]
[89]     0.0    0.00    0.00       3         init_LweSample [89]
                0.00    0.00       3/24904       operator new(unsigned long, void*) [465]
                0.00    0.00       3/3           LweSample::LweSample(LweParams const*) [474]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[90]     0.0    0.00    0.00       3         new_LweSample [90]
                0.00    0.00       3/3           alloc_LweSample [78]
                0.00    0.00       3/3           init_LweSample [89]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[91]     0.0    0.00    0.00       3         new_TLweSample [91]
                0.00    0.00       3/3           alloc_TLweSample [79]
                0.00    0.00       3/18          init_TLweSample [73]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[92]     0.0    0.00    0.00       2         delete_IntPolynomial [92]
                0.00    0.00       2/2404        IntPolynomial::~IntPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[93]     0.0    0.00    0.00       2         modSwitchFromTorus32 [93]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[94]     0.0    0.00    0.00       2         new_IntPolynomial [94]
                0.00    0.00       2/2406        IntPolynomial::IntPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [114]
[95]     0.0    0.00    0.00       1         alloc_LweKey [95]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [118]
[96]     0.0    0.00    0.00       1         alloc_TGswSample [96]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [119]
[97]     0.0    0.00    0.00       1         alloc_TLweKey [97]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [121]
[98]     0.0    0.00    0.00       1         alloc_TLweSample_array [98]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[99]     0.0    0.00    0.00       1         delete_LweKey [99]
                0.00    0.00       1/1           destroy_LweKey [103]
                0.00    0.00       1/1           free_LweKey [105]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[100]    0.0    0.00    0.00       1         delete_LweParams [100]
                0.00    0.00       1/2           LweParams::~LweParams() [480]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[101]    0.0    0.00    0.00       1         delete_TLweKey [101]
                0.00    0.00       1/1           destroy_TLweKey [104]
                0.00    0.00       1/1           free_TLweKey [106]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[102]    0.0    0.00    0.00       1         delete_TLweParams [102]
                0.00    0.00       1/1           TLweParams::~TLweParams() [499]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [99]
[103]    0.0    0.00    0.00       1         destroy_LweKey [103]
                0.00    0.00       1/1           LweKey::~LweKey() [502]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [101]
[104]    0.0    0.00    0.00       1         destroy_TLweKey [104]
                0.00    0.00       1/1           TLweKey::~TLweKey() [504]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [99]
[105]    0.0    0.00    0.00       1         free_LweKey [105]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [101]
[106]    0.0    0.00    0.00       1         free_TLweKey [106]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [114]
[107]    0.0    0.00    0.00       1         init_LweKey [107]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [465]
                0.00    0.00       1/1           LweKey::LweKey(LweParams const*) [501]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [118]
[108]    0.0    0.00    0.00       1         init_TGswSample [108]
                0.00    0.00       1/1           new_TLweSample_array [121]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [465]
                0.00    0.00       1/1           TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [119]
[109]    0.0    0.00    0.00       1         init_TLweKey [109]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [465]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [478]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [121]
[110]    0.0    0.00    0.00       1         init_TLweSample_array [110]
                0.00    0.00      15/18          init_TLweSample [73]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[111]    0.0    0.00    0.00       1         lweKeyGen [111]
                0.00    0.00     481/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           lweSymDecrypt [113]
[112]    0.0    0.00    0.00       1         lwePhase [112]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[113]    0.0    0.00    0.00       1         lweSymDecrypt [113]
                0.00    0.00       1/1           lwePhase [112]
                0.00    0.00       1/1025        approxPhase [55]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[114]    0.0    0.00    0.00       1         new_LweKey [114]
                0.00    0.00       1/1           alloc_LweKey [95]
                0.00    0.00       1/1           init_LweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[115]    0.0    0.00    0.00       1         new_LweParams [115]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [479]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[116]    0.0    0.00    0.00       1         new_TGswKey [116]
                0.00    0.00       1/1           TGswKey::TGswKey(TGswParams const*) [503]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[117]    0.0    0.00    0.00       1         new_TGswParams [117]
                0.00    0.00       1/1           TGswParams::TGswParams(int, int, TLweParams const*) [496]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[118]    0.0    0.00    0.00       1         new_TGswSample [118]
                0.00    0.00       1/1           alloc_TGswSample [96]
                0.00    0.00       1/1           init_TGswSample [108]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[119]    0.0    0.00    0.00       1         new_TLweKey [119]
                0.00    0.00       1/1           alloc_TLweKey [97]
                0.00    0.00       1/1           init_TLweKey [109]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[120]    0.0    0.00    0.00       1         new_TLweParams [120]
                0.00    0.00       1/1           TLweParams::TLweParams(int, int, double, double) [498]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [108]
[121]    0.0    0.00    0.00       1         new_TLweSample_array [121]
                0.00    0.00       1/1           alloc_TLweSample_array [98]
                0.00    0.00       1/1           init_TLweSample_array [110]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [45]
[122]    0.0    0.00    0.00       1         tLweApproxPhase [122]
                0.00    0.00    1024/1025        approxPhase [55]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[123]    0.0    0.00    0.00       1         tLweKeyGen [123]
                0.00    0.00    2048/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [472]
-----------------------------------------------
                0.00    0.00       1/1           tLwePhase [44]
[124]    0.0    0.00    0.00       1         torusPolynomialCopy [124]
-----------------------------------------------
                0.00    0.00    2048/19135488     FFT_Processor_nayuki::FFT_Processor_nayuki(int) [500]
                0.00    0.00 3826688/19135488     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00 3826688/19135488     FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.00    0.00 11480064/19135488     LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [41]
[448]    0.0    0.00    0.00 19135488         std::complex<double>::complex(double, double) [448]
-----------------------------------------------
                0.00    0.00 15306752/15306752     double std::real<double>(std::complex<double> const&) [28]
[449]    0.0    0.00    0.00 15306752         std::complex<double>::real[abi:cxx11]() const [449]
-----------------------------------------------
                0.00    0.00 3826688/3826688     double std::abs<double>(std::complex<double> const&) [35]
[450]    0.0    0.00    0.00 3826688         std::__complex_abs(double _Complex) [450]
-----------------------------------------------
                0.00    0.00  708588/1570467     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [31]
                0.00    0.00  861879/1570467     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[451]    0.0    0.00    0.00 1570467         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [451]
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [453]
-----------------------------------------------
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [453]
[452]    0.0    0.00    0.00 1570467         std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [452]
-----------------------------------------------
                0.00    0.00 1570467/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [451]
[453]    0.0    0.00    0.00 1570467         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [453]
                0.00    0.00 1570467/1570467     std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [452]
-----------------------------------------------
                0.00    0.00 1436856/1436856     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[454]    0.0    0.00    0.00 1436856         std::uniform_int_distribution<int>::param_type::a() const [454]
-----------------------------------------------
                0.00    0.00  718428/718428      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[455]    0.0    0.00    0.00  718428         std::uniform_int_distribution<int>::param_type::b() const [455]
-----------------------------------------------
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [472]
                0.00    0.00  429675/429679      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
[456]    0.0    0.00    0.00  429679         std::uniform_int_distribution<int>::param_type::param_type(int, int) [456]
-----------------------------------------------
                0.00    0.00     481/288753      lweKeyGen [111]
                0.00    0.00    2048/288753      tLweKeyGen [123]
                0.00    0.00    7696/288753      lweSymEncrypt [46]
                0.00    0.00  278528/288753      torusPolynomialUniform [61]
[457]    0.0    0.00    0.00  288753         int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
-----------------------------------------------
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
                0.00    0.00  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [457]
[458]    0.0    0.00    0.00  288753+429675  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
                0.00    0.00 1436856/1436856     std::uniform_int_distribution<int>::param_type::a() const [454]
                0.00    0.00  861879/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [451]
                0.00    0.00  718428/718428      std::uniform_int_distribution<int>::param_type::b() const [455]
                0.00    0.00  429675/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [456]
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [458]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [20]
[459]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::mean() const [459]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [20]
[460]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::stddev() const [460]
-----------------------------------------------
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [462]
[461]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::param_type(double, double) [461]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [17]
[462]    0.0    0.00    0.00  139280         std::normal_distribution<double>::normal_distribution(double, double) [462]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::param_type(double, double) [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [20]
[463]    0.0    0.00    0.00  139280         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [463]
-----------------------------------------------
                0.00    0.00   44844/44844       TLS wrapper function for fp1024_nayuki [37]
[464]    0.0    0.00    0.00   44844         TLS init function for fp1024_nayuki [464]
                0.00    0.00       1/1           FFT_Processor_nayuki::FFT_Processor_nayuki(int) [500]
-----------------------------------------------
                0.00    0.00       1/24904       init_LweKey [107]
                0.00    0.00       1/24904       init_TGswSample [108]
                0.00    0.00       1/24904       init_TLweKey [109]
                0.00    0.00       3/24904       init_LweSample [89]
                0.00    0.00      18/24904       init_TLweSample [73]
                0.00    0.00      54/24904       init_TorusPolynomial_array [74]
                0.00    0.00    2404/24904       init_IntPolynomial_array [63]
                0.00    0.00   22422/24904       init_LagrangeHalfCPolynomial_array [39]
[465]    0.0    0.00    0.00   24904         operator new(unsigned long, void*) [465]
-----------------------------------------------
                0.00    0.00   22422/22422       destroy_LagrangeHalfCPolynomial_array [52]
[466]    0.0    0.00    0.00   22422         LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [466]
-----------------------------------------------
                0.00    0.00      54/7531        init_TorusPolynomial_array [74]
                0.00    0.00    7477/7531        new_TorusPolynomial [49]
[467]    0.0    0.00    0.00    7531         TorusPolynomial::TorusPolynomial(int) [467]
-----------------------------------------------
                0.00    0.00       9/7486        destroy_TorusPolynomial_array [85]
                0.00    0.00    7477/7486        delete_TorusPolynomial [48]
[468]    0.0    0.00    0.00    7486         TorusPolynomial::~TorusPolynomial() [468]
-----------------------------------------------
                0.00    0.00       2/2406        new_IntPolynomial [94]
                0.00    0.00    2404/2406        init_IntPolynomial_array [63]
[469]    0.0    0.00    0.00    2406         IntPolynomial::IntPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00       2/2404        delete_IntPolynomial [92]
                0.00    0.00    2402/2404        destroy_IntPolynomial_array [66]
[470]    0.0    0.00    0.00    2404         IntPolynomial::~IntPolynomial() [470]
-----------------------------------------------
                0.00    0.00      18/18          init_TLweSample [73]
[471]    0.0    0.00    0.00      18         TLweSample::TLweSample(TLweParams const*) [471]
                0.00    0.00      18/18          new_TorusPolynomial_array [75]
-----------------------------------------------
                0.00    0.00       1/4           lweKeyGen [111]
                0.00    0.00       1/4           tLweKeyGen [123]
                0.00    0.00       2/4           __static_initialization_and_destruction_0(int, int) [490]
[472]    0.0    0.00    0.00       4         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [472]
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [456]
-----------------------------------------------
                0.00    0.00       3/3           destroy_TLweSample [84]
[473]    0.0    0.00    0.00       3         TLweSample::~TLweSample() [473]
                0.00    0.00       3/3           delete_TorusPolynomial_array [82]
-----------------------------------------------
                0.00    0.00       3/3           init_LweSample [89]
[474]    0.0    0.00    0.00       3         LweSample::LweSample(LweParams const*) [474]
-----------------------------------------------
                0.00    0.00       3/3           destroy_LweSample [83]
[475]    0.0    0.00    0.00       3         LweSample::~LweSample() [475]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [477]
[476]    0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [476]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
[477]    0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [477]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [476]
-----------------------------------------------
                0.00    0.00       1/2           TGswKey::TGswKey(TGswParams const*) [503]
                0.00    0.00       1/2           init_TLweKey [109]
[478]    0.0    0.00    0.00       2         TLweKey::TLweKey(TLweParams const*) [478]
                0.00    0.00       2/162         new_IntPolynomial_array [64]
-----------------------------------------------
                0.00    0.00       1/2           new_LweParams [115]
                0.00    0.00       1/2           TLweParams::TLweParams(int, int, double, double) [498]
[479]    0.0    0.00    0.00       2         LweParams::LweParams(int, double, double) [479]
-----------------------------------------------
                0.00    0.00       1/2           delete_LweParams [100]
                0.00    0.00       1/2           TLweParams::~TLweParams() [499]
[480]    0.0    0.00    0.00       2         LweParams::~LweParams() [480]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [521]
[481]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [481]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_bootsNAND [512]
[482]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKeyFFT [517]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKey [516]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_lweKeyGen [520]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16renormalizeKSkeyP15LweKeySwitchKeyPK6LweKeyPKi [508]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_debug_accum_key [513]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN19LweBootstrappingKeyC2EPK9LweParamsPK10TGswParamsPK10TLweParamsS2_P10TGswSampleP15LweKeySwitchKey [510]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN13IntPolynomialC2Ei [509]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [515]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
                0.00    0.00       2/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [472]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_die_dramatically [514]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK10StdIstream7getLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [511]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSampleFFT [519]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSample [518]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_tLweKeyGen [522]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswParams [117]
[496]    0.0    0.00    0.00       1         TGswParams::TGswParams(int, int, TLweParams const*) [496]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [108]
[497]    0.0    0.00    0.00       1         TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweParams [120]
[498]    0.0    0.00    0.00       1         TLweParams::TLweParams(int, int, double, double) [498]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [479]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweParams [102]
[499]    0.0    0.00    0.00       1         TLweParams::~TLweParams() [499]
                0.00    0.00       1/2           LweParams::~LweParams() [480]
-----------------------------------------------
                0.00    0.00       1/1           TLS init function for fp1024_nayuki [464]
[500]    0.0    0.00    0.00       1         FFT_Processor_nayuki::FFT_Processor_nayuki(int) [500]
                0.00    0.00    2048/19135488     std::complex<double>::complex(double, double) [448]
-----------------------------------------------
                0.00    0.00       1/1           init_LweKey [107]
[501]    0.0    0.00    0.00       1         LweKey::LweKey(LweParams const*) [501]
-----------------------------------------------
                0.00    0.00       1/1           destroy_LweKey [103]
[502]    0.0    0.00    0.00       1         LweKey::~LweKey() [502]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswKey [116]
[503]    0.0    0.00    0.00       1         TGswKey::TGswKey(TGswParams const*) [503]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [478]
-----------------------------------------------
                0.00    0.00       1/1           destroy_TLweKey [104]
[504]    0.0    0.00    0.00       1         TLweKey::~TLweKey() [504]
                0.00    0.00       1/161         delete_IntPolynomial_array [65]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
[505]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [477]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
[506]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [505]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [490]
[507]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [507]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [506]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [9] IntPolynomial_ifft     [29] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [88] free_TorusPolynomial_array
  [32] LagrangeHalfCPolynomialMul [505] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [17] gaussian32
   [7] TorusPolynomial_fft   [506] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [63] init_IntPolynomial_array
  [12] TorusPolynomial_ifft  [507] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [39] init_LagrangeHalfCPolynomial_array
 [481] __static_initialization_and_destruction_0(int, int) [451] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [107] init_LweKey
 [482] __static_initialization_and_destruction_0(int, int) [448] std::complex<double>::complex(double, double) [89] init_LweSample
 [483] __static_initialization_and_destruction_0(int, int) [33] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [108] init_TGswSample
 [484] __static_initialization_and_destruction_0(int, int) [34] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [109] init_TLweKey
 [485] __static_initialization_and_destruction_0(int, int) [452] std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [73] init_TLweSample
 [486] __static_initialization_and_destruction_0(int, int) [476] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [110] init_TLweSample_array
 [487] __static_initialization_and_destruction_0(int, int) [453] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [74] init_TorusPolynomial_array
 [488] __static_initialization_and_destruction_0(int, int) [477] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [54] intPolynomialNormSq2
 [489] __static_initialization_and_destruction_0(int, int) [463] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [71] lweClear
 [490] __static_initialization_and_destruction_0(int, int) [30] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [111] lweKeyGen
 [491] __static_initialization_and_destruction_0(int, int) [450] std::__complex_abs(double _Complex) [112] lwePhase
 [492] __static_initialization_and_destruction_0(int, int) [31] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [113] lweSymDecrypt
 [493] __static_initialization_and_destruction_0(int, int) [35] double std::abs<double>(std::complex<double> const&) [46] lweSymEncrypt
 [494] __static_initialization_and_destruction_0(int, int) [18] double std::imag<double>(std::complex<double> const&) [93] modSwitchFromTorus32
 [495] __static_initialization_and_destruction_0(int, int) [28] double std::real<double>(std::complex<double> const&) [76] modSwitchToTorus32
 [496] TGswParams::TGswParams(int, int, TLweParams const*) [22] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [94] new_IntPolynomial
 [497] TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [36] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [64] new_IntPolynomial_array
 [498] TLweParams::TLweParams(int, int, double, double) [464] TLS init function for fp1024_nayuki [40] new_LagrangeHalfCPolynomial_array
 [499] TLweParams::~TLweParams() [37] TLS wrapper function for fp1024_nayuki [114] new_LweKey
 [471] TLweSample::TLweSample(TLweParams const*) [465] operator new(unsigned long, void*) [115] new_LweParams
 [473] TLweSample::~TLweSample() [62] alloc_IntPolynomial_array [90] new_LweSample
 [469] IntPolynomial::IntPolynomial(int) [50] alloc_LagrangeHalfCPolynomial_array [116] new_TGswKey
 [470] IntPolynomial::~IntPolynomial() [95] alloc_LweKey [117] new_TGswParams
 [467] TorusPolynomial::TorusPolynomial(int) [78] alloc_LweSample [118] new_TGswSample
 [468] TorusPolynomial::~TorusPolynomial() [96] alloc_TGswSample [119] new_TLweKey
  [10] FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [97] alloc_TLweKey [120] new_TLweParams
  [11] FFT_Processor_nayuki::check_alternate_real() [79] alloc_TLweSample [91] new_TLweSample
  [16] FFT_Processor_nayuki::check_conjugate_cplx() [98] alloc_TLweSample_array [121] new_TLweSample_array
   [8] FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [72] alloc_TorusPolynomial_array [49] new_TorusPolynomial
  [13] FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [55] approxPhase [75] new_TorusPolynomial_array
 [500] FFT_Processor_nayuki::FFT_Processor_nayuki(int) [92] delete_IntPolynomial [77] tGswClear
  [41] LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [65] delete_IntPolynomial_array [15] tGswEncryptZero
 [466] LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [51] delete_LagrangeHalfCPolynomial_array [5] tGswExternProduct
 [501] LweKey::LweKey(LweParams const*) [99] delete_LweKey [26] tGswTLweDecompH
 [502] LweKey::~LweKey()     [100] delete_LweParams       [25] tGswTorus32PolynomialDecompH
 [503] TGswKey::TGswKey(TGswParams const*) [80] delete_LweSample [6] tLweAddMulRTo
 [478] TLweKey::TLweKey(TLweParams const*) [101] delete_TLweKey [68] tLweAddMulTo
 [504] TLweKey::~TLweKey()   [102] delete_TLweParams      [42] tLweAddTo
 [479] LweParams::LweParams(int, double, double) [81] delete_TLweSample [122] tLweApproxPhase
 [480] LweParams::~LweParams() [48] delete_TorusPolynomial [60] tLweClear
 [474] LweSample::LweSample(LweParams const*) [82] delete_TorusPolynomial_array [24] tLweCopy
 [475] LweSample::~LweSample() [66] destroy_IntPolynomial_array [123] tLweKeyGen
 [459] std::normal_distribution<double>::param_type::mean() const [52] destroy_LagrangeHalfCPolynomial_array [44] tLwePhase
 [460] std::normal_distribution<double>::param_type::stddev() const [103] destroy_LweKey [69] tLweSubMulTo
 [454] std::uniform_int_distribution<int>::param_type::a() const [83] destroy_LweSample [70] tLweSubTo
 [455] std::uniform_int_distribution<int>::param_type::b() const [104] destroy_TLweKey [45] tLweSymDecrypt
  [27] std::complex<double>::imag[abi:cxx11]() const [84] destroy_TLweSample [38] tLweSymEncrypt
 [449] std::complex<double>::real[abi:cxx11]() const [85] destroy_TorusPolynomial_array [14] tLweSymEncryptZero
  [21] std::complex<double>::__rep() const [47] dtot32     [4] torusPolynomialAddMulRFFT
 [461] std::normal_distribution<double>::param_type::param_type(double, double) [2] fft_transform [58] torusPolynomialAddMulZTo
 [462] std::normal_distribution<double>::normal_distribution(double, double) [1] fft_transform_reverse [23] torusPolynomialAddTo
  [19] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [67] free_IntPolynomial_array [56] torusPolynomialClear
  [20] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [53] free_LagrangeHalfCPolynomial_array [124] torusPolynomialCopy
 [456] std::uniform_int_distribution<int>::param_type::param_type(int, int) [105] free_LweKey [43] torusPolynomialSubMulRFFT
 [472] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [86] free_LweSample [59] torusPolynomialSubMulZTo
 [457] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [106] free_TLweKey [57] torusPolynomialSubTo
 [458] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [87] free_TLweSample [61] torusPolynomialUniform
Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 61.95      1.27     1.27                             fft_transform_reverse
 21.95      1.72     0.45                             fft_transform
  3.41      1.79     0.07    22422     0.00     0.00  FFT_Processor_nayuki::check_alternate_real()
  2.44      1.84     0.05     7474     0.01     0.02  FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*)
  1.95      1.88     0.04     7474     0.01     0.01  FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*)
  0.98      1.90     0.02 19135488     0.00     0.00  std::complex<double>::complex(double, double)
  0.98      1.92     0.02 15306752     0.00     0.00  double std::imag<double>(std::complex<double> const&)
  0.98      1.94     0.02     7474     0.00     0.01  FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*)
  0.73      1.96     0.01 15306752     0.00     0.00  std::complex<double>::real[abi:cxx11]() const
  0.49      1.97     0.01 11480064     0.00     0.00  std::complex<double>::__rep() const
  0.49      1.98     0.01  3826688     0.00     0.00  std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&)
  0.49      1.99     0.01   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&)
  0.49      2.00     0.01    22422     0.00     0.00  FFT_Processor_nayuki::check_conjugate_cplx()
  0.49      2.00     0.01    22422     0.00     0.00  LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int)
  0.49      2.02     0.01     7952     0.00     0.00  torusPolynomialAddTo
  0.49      2.02     0.01                             _init
  0.24      2.03     0.01 15306752     0.00     0.00  std::complex<double>::imag[abi:cxx11]() const
  0.24      2.04     0.01  3826688     0.00     0.00  double std::abs<double>(std::complex<double> const&)
  0.24      2.04     0.01  3826688     0.00     0.00  std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&)
  0.24      2.04     0.01  1570467     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()()
  0.24      2.05     0.01  1436856     0.00     0.00  std::uniform_int_distribution<int>::param_type::a() const
  0.00      2.05     0.00 15306752     0.00     0.00  double std::real<double>(std::complex<double> const&)
  0.00      2.05     0.00  3826688     0.00     0.00  std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&)
  0.00      2.05     0.00  3826688     0.00     0.00  std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&)
  0.00      2.05     0.00  3826688     0.00     0.00  std::__complex_abs(double _Complex)
  0.00      2.05     0.00  1570467     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long)
  0.00      2.05     0.00  1570467     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long)
  0.00      2.05     0.00   718428     0.00     0.00  std::uniform_int_distribution<int>::param_type::b() const
  0.00      2.05     0.00   708588     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min()
  0.00      2.05     0.00   429679     0.00     0.00  std::uniform_int_distribution<int>::param_type::param_type(int, int)
  0.00      2.05     0.00   354294     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()()
  0.00      2.05     0.00   354294     0.00     0.00  double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.05     0.00   288753     0.00     0.00  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.05     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::mean() const
  0.00      2.05     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::stddev() const
  0.00      2.05     0.00   139280     0.00     0.00  std::normal_distribution<double>::param_type::param_type(double, double)
  0.00      2.05     0.00   139280     0.00     0.00  std::normal_distribution<double>::normal_distribution(double, double)
  0.00      2.05     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.05     0.00   139280     0.00     0.00  double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&)
  0.00      2.05     0.00   139280     0.00     0.00  std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&)
  0.00      2.05     0.00   139280     0.00     0.00  dtot32
  0.00      2.05     0.00   139280     0.00     0.00  gaussian32
  0.00      2.05     0.00    44844     0.00     0.00  TLS init function for fp1024_nayuki
  0.00      2.05     0.00    44844     0.00     0.00  TLS wrapper function for fp1024_nayuki
  0.00      2.05     0.00    24904     0.00     0.00  operator new(unsigned long, void*)
  0.00      2.05     0.00    22422     0.00     0.00  LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL()
  0.00      2.05     0.00     7531     0.00     0.00  TorusPolynomial::TorusPolynomial(int)
  0.00      2.05     0.00     7486     0.00     0.00  TorusPolynomial::~TorusPolynomial()
  0.00      2.05     0.00     7477     0.00     0.00  delete_TorusPolynomial
  0.00      2.05     0.00     7477     0.00     0.00  new_TorusPolynomial
  0.00      2.05     0.00     7474     0.00     0.01  IntPolynomial_ifft
  0.00      2.05     0.00     7474     0.00     0.00  LagrangeHalfCPolynomialMul
  0.00      2.05     0.00     7474     0.00     0.02  TorusPolynomial_fft
  0.00      2.05     0.00     7474     0.00     0.01  TorusPolynomial_ifft
  0.00      2.05     0.00     7474     0.00     0.00  alloc_LagrangeHalfCPolynomial_array
  0.00      2.05     0.00     7474     0.00     0.00  delete_LagrangeHalfCPolynomial_array
  0.00      2.05     0.00     7474     0.00     0.00  destroy_LagrangeHalfCPolynomial_array
  0.00      2.05     0.00     7474     0.00     0.00  free_LagrangeHalfCPolynomial_array
  0.00      2.05     0.00     7474     0.00     0.00  init_LagrangeHalfCPolynomial_array
  0.00      2.05     0.00     7474     0.00     0.00  new_LagrangeHalfCPolynomial_array
  0.00      2.05     0.00     7472     0.00     0.04  torusPolynomialAddMulRFFT
  0.00      2.05     0.00     2406     0.00     0.00  IntPolynomial::IntPolynomial(int)
  0.00      2.05     0.00     2404     0.00     0.00  IntPolynomial::~IntPolynomial()
  0.00      2.05     0.00     2400     0.00     0.00  intPolynomialNormSq2
  0.00      2.05     0.00     2400     0.00     0.12  tLweAddMulRTo
  0.00      2.05     0.00     1025     0.00     0.00  approxPhase
  0.00      2.05     0.00      936     0.00     0.00  torusPolynomialClear
  0.00      2.05     0.00      800     0.00     0.00  tLweCopy
  0.00      2.05     0.00      482     0.00     0.00  torusPolynomialSubTo
  0.00      2.05     0.00      480     0.00     0.00  tGswTorus32PolynomialDecompH
  0.00      2.05     0.00      480     0.00     0.00  torusPolynomialAddMulZTo
  0.00      2.05     0.00      480     0.00     0.00  torusPolynomialSubMulZTo
  0.00      2.05     0.00      304     0.00     0.00  tLweClear
  0.00      2.05     0.00      272     0.00     0.06  torusPolynomialUniform
  0.00      2.05     0.00      162     0.00     0.00  alloc_IntPolynomial_array
  0.00      2.05     0.00      162     0.00     0.00  init_IntPolynomial_array
  0.00      2.05     0.00      162     0.00     0.00  new_IntPolynomial_array
  0.00      2.05     0.00      161     0.00     0.00  delete_IntPolynomial_array
  0.00      2.05     0.00      161     0.00     0.00  destroy_IntPolynomial_array
  0.00      2.05     0.00      161     0.00     0.00  free_IntPolynomial_array
  0.00      2.05     0.00      160     0.00     1.80  tGswExternProduct
  0.00      2.05     0.00      160     0.00     0.00  tGswTLweDecompH
  0.00      2.05     0.00      160     0.00     0.00  tLweAddMulTo
  0.00      2.05     0.00      160     0.00     0.00  tLweAddTo
  0.00      2.05     0.00      160     0.00     0.00  tLweSubMulTo
  0.00      2.05     0.00      160     0.00     0.00  tLweSubTo
  0.00      2.05     0.00      136     0.00     0.22  tLweSymEncryptZero
  0.00      2.05     0.00       24     0.00     0.00  lweClear
  0.00      2.05     0.00       18     0.00     0.00  TLweSample::TLweSample(TLweParams const*)
  0.00      2.05     0.00       18     0.00     0.00  alloc_TorusPolynomial_array
  0.00      2.05     0.00       18     0.00     0.00  init_TLweSample
  0.00      2.05     0.00       18     0.00     0.00  init_TorusPolynomial_array
  0.00      2.05     0.00       18     0.00     0.00  new_TorusPolynomial_array
  0.00      2.05     0.00       16     0.00     0.03  lweSymEncrypt
  0.00      2.05     0.00       16     0.00     0.00  modSwitchToTorus32
  0.00      2.05     0.00       16     0.00     0.22  tLweSymEncrypt
  0.00      2.05     0.00        8     0.00     0.00  tGswClear
  0.00      2.05     0.00        8     0.00     3.34  tGswEncryptZero
  0.00      2.05     0.00        4     0.00     0.00  std::uniform_int_distribution<int>::uniform_int_distribution(int, int)
  0.00      2.05     0.00        3     0.00     0.00  TLweSample::~TLweSample()
  0.00      2.05     0.00        3     0.00     0.00  LweSample::LweSample(LweParams const*)
  0.00      2.05     0.00        3     0.00     0.00  LweSample::~LweSample()
  0.00      2.05     0.00        3     0.00     0.00  std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      2.05     0.00        3     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long)
  0.00      2.05     0.00        3     0.00     0.00  alloc_LweSample
  0.00      2.05     0.00        3     0.00     0.00  alloc_TLweSample
  0.00      2.05     0.00        3     0.00     0.00  delete_LweSample
  0.00      2.05     0.00        3     0.00     0.00  delete_TLweSample
  0.00      2.05     0.00        3     0.00     0.00  delete_TorusPolynomial_array
  0.00      2.05     0.00        3     0.00     0.00  destroy_LweSample
  0.00      2.05     0.00        3     0.00     0.00  destroy_TLweSample
  0.00      2.05     0.00        3     0.00     0.00  destroy_TorusPolynomial_array
  0.00      2.05     0.00        3     0.00     0.00  free_LweSample
  0.00      2.05     0.00        3     0.00     0.00  free_TLweSample
  0.00      2.05     0.00        3     0.00     0.00  free_TorusPolynomial_array
  0.00      2.05     0.00        3     0.00     0.00  init_LweSample
  0.00      2.05     0.00        3     0.00     0.00  new_LweSample
  0.00      2.05     0.00        3     0.00     0.00  new_TLweSample
  0.00      2.05     0.00        2     0.00     0.00  TLweKey::TLweKey(TLweParams const*)
  0.00      2.05     0.00        2     0.00     0.00  LweParams::LweParams(int, double, double)
  0.00      2.05     0.00        2     0.00     0.00  LweParams::~LweParams()
  0.00      2.05     0.00        2     0.00     0.00  delete_IntPolynomial
  0.00      2.05     0.00        2     0.00     0.00  modSwitchFromTorus32
  0.00      2.05     0.00        2     0.00     0.00  new_IntPolynomial
  0.00      2.05     0.00        2     0.00     0.04  torusPolynomialSubMulRFFT
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      2.05     0.00        1     0.00     0.00  TGswParams::TGswParams(int, int, TLweParams const*)
  0.00      2.05     0.00        1     0.00     0.00  TGswSample::TGswSample(TLweSample*, TLweSample**, int, int)
  0.00      2.05     0.00        1     0.00     0.00  TLweParams::TLweParams(int, int, double, double)
  0.00      2.05     0.00        1     0.00     0.00  TLweParams::~TLweParams()
  0.00      2.05     0.00        1     0.00     0.00  FFT_Processor_nayuki::FFT_Processor_nayuki(int)
  0.00      2.05     0.00        1     0.00     0.00  LweKey::LweKey(LweParams const*)
  0.00      2.05     0.00        1     0.00     0.00  LweKey::~LweKey()
  0.00      2.05     0.00        1     0.00     0.00  TGswKey::TGswKey(TGswParams const*)
  0.00      2.05     0.00        1     0.00     0.00  TLweKey::~TLweKey()
  0.00      2.05     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long)
  0.00      2.05     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long)
  0.00      2.05     0.00        1     0.00     0.00  std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine()
  0.00      2.05     0.00        1     0.00     0.00  alloc_LweKey
  0.00      2.05     0.00        1     0.00     0.00  alloc_TGswSample
  0.00      2.05     0.00        1     0.00     0.00  alloc_TLweKey
  0.00      2.05     0.00        1     0.00     0.00  alloc_TLweSample_array
  0.00      2.05     0.00        1     0.00     0.00  delete_LweKey
  0.00      2.05     0.00        1     0.00     0.00  delete_LweParams
  0.00      2.05     0.00        1     0.00     0.00  delete_TLweKey
  0.00      2.05     0.00        1     0.00     0.00  delete_TLweParams
  0.00      2.05     0.00        1     0.00     0.00  destroy_LweKey
  0.00      2.05     0.00        1     0.00     0.00  destroy_TLweKey
  0.00      2.05     0.00        1     0.00     0.00  free_LweKey
  0.00      2.05     0.00        1     0.00     0.00  free_TLweKey
  0.00      2.05     0.00        1     0.00     0.00  init_LweKey
  0.00      2.05     0.00        1     0.00     0.00  init_TGswSample
  0.00      2.05     0.00        1     0.00     0.00  init_TLweKey
  0.00      2.05     0.00        1     0.00     0.00  init_TLweSample_array
  0.00      2.05     0.00        1     0.00     0.03  lweKeyGen
  0.00      2.05     0.00        1     0.00     0.00  lwePhase
  0.00      2.05     0.00        1     0.00     0.00  lweSymDecrypt
  0.00      2.05     0.00        1     0.00     0.00  new_LweKey
  0.00      2.05     0.00        1     0.00     0.00  new_LweParams
  0.00      2.05     0.00        1     0.00     0.00  new_TGswKey
  0.00      2.05     0.00        1     0.00     0.00  new_TGswParams
  0.00      2.05     0.00        1     0.00     0.00  new_TGswSample
  0.00      2.05     0.00        1     0.00     0.00  new_TLweKey
  0.00      2.05     0.00        1     0.00     0.00  new_TLweParams
  0.00      2.05     0.00        1     0.00     0.00  new_TLweSample_array
  0.00      2.05     0.00        1     0.00     0.00  tLweApproxPhase
  0.00      2.05     0.00        1     0.00     0.13  tLweKeyGen
  0.00      2.05     0.00        1     0.00     0.08  tLwePhase
  0.00      2.05     0.00        1     0.00     0.08  tLweSymDecrypt
  0.00      2.05     0.00        1     0.00     0.00  torusPolynomialCopy

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.49% of 2.05 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     62.0    1.27    0.00                 fft_transform_reverse [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     22.0    0.45    0.00                 fft_transform [2]
-----------------------------------------------
                                                 <spontaneous>
[3]     15.6    0.00    0.32                 main [3]
                0.00    0.29     160/160         tGswExternProduct [6]
                0.00    0.03       8/8           tGswEncryptZero [15]
                0.00    0.00      16/16          tLweSymEncrypt [37]
                0.00    0.00     160/160         tLweAddTo [45]
                0.00    0.00      16/16          lweSymEncrypt [46]
                0.00    0.00       1/1           tLweKeyGen [47]
                0.00    0.00       1/1           tLweSymDecrypt [50]
                0.00    0.00       1/1           lweKeyGen [51]
                0.00    0.00     800/800         tLweCopy [65]
                0.00    0.00     160/160         tLweSubTo [80]
                0.00    0.00     160/160         tLweAddMulTo [78]
                0.00    0.00     160/160         tLweSubMulTo [79]
                0.00    0.00      24/24          lweClear [81]
                0.00    0.00      24/936         torusPolynomialClear [64]
                0.00    0.00      24/304         tLweClear [70]
                0.00    0.00      16/16          modSwitchToTorus32 [86]
                0.00    0.00       8/8           tGswClear [87]
                0.00    0.00       3/7477        new_TorusPolynomial [57]
                0.00    0.00       3/3           new_LweSample [100]
                0.00    0.00       3/3           new_TLweSample [101]
                0.00    0.00       3/3           delete_TLweSample [91]
                0.00    0.00       3/3           delete_LweSample [90]
                0.00    0.00       3/7477        delete_TorusPolynomial [56]
                0.00    0.00       2/2           new_IntPolynomial [104]
                0.00    0.00       2/2           modSwitchFromTorus32 [103]
                0.00    0.00       2/2           delete_IntPolynomial [102]
                0.00    0.00       1/1           new_LweParams [124]
                0.00    0.00       1/1           new_TLweParams [129]
                0.00    0.00       1/1           new_TGswParams [126]
                0.00    0.00       1/1           new_LweKey [123]
                0.00    0.00       1/1           new_TLweKey [128]
                0.00    0.00       1/1           new_TGswKey [125]
                0.00    0.00       1/1           new_TGswSample [127]
                0.00    0.00       1/1           lweSymDecrypt [122]
                0.00    0.00       1/1           delete_TLweKey [111]
                0.00    0.00       1/1           delete_LweKey [109]
                0.00    0.00       1/1           delete_TLweParams [112]
                0.00    0.00       1/1           delete_LweParams [110]
-----------------------------------------------
                0.00    0.01     272/7472        tLweSymEncryptZero [14]
                0.00    0.29    7200/7472        tLweAddMulRTo [5]
[4]     14.6    0.00    0.30    7472         torusPolynomialAddMulRFFT [4]
                0.00    0.12    7472/7474        TorusPolynomial_fft [7]
                0.00    0.09    7472/7474        IntPolynomial_ifft [9]
                0.00    0.05    7472/7474        TorusPolynomial_ifft [12]
                0.00    0.02    7472/7474        new_LagrangeHalfCPolynomial_array [18]
                0.00    0.01    7472/7474        LagrangeHalfCPolynomialMul [26]
                0.01    0.00    7472/7952        torusPolynomialAddTo [28]
                0.00    0.00    7472/7477        new_TorusPolynomial [57]
                0.00    0.00    7472/7477        delete_TorusPolynomial [56]
                0.00    0.00    7472/7474        delete_LagrangeHalfCPolynomial_array [59]
-----------------------------------------------
                0.00    0.29    2400/2400        tGswExternProduct [6]
[5]     14.1    0.00    0.29    2400         tLweAddMulRTo [5]
                0.00    0.29    7200/7472        torusPolynomialAddMulRFFT [4]
                0.00    0.00    2400/2400        intPolynomialNormSq2 [62]
-----------------------------------------------
                0.00    0.29     160/160         main [3]
[6]     14.1    0.00    0.29     160         tGswExternProduct [6]
                0.00    0.29    2400/2400        tLweAddMulRTo [5]
                0.00    0.00     160/162         new_IntPolynomial_array [73]
                0.00    0.00     160/160         tGswTLweDecompH [77]
                0.00    0.00     160/304         tLweClear [70]
                0.00    0.00     160/161         delete_IntPolynomial_array [74]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [48]
                0.00    0.12    7472/7474        torusPolynomialAddMulRFFT [4]
[7]      5.7    0.00    0.12    7474         TorusPolynomial_fft [7]
                0.05    0.07    7474/7474        FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [53]
-----------------------------------------------
                0.05    0.07    7474/7474        TorusPolynomial_fft [7]
[8]      5.7    0.05    0.07    7474         FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
                0.02    0.01 15306752/15306752     double std::imag<double>(std::complex<double> const&) [16]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.00    0.01 15306752/15306752     double std::real<double>(std::complex<double> const&) [25]
                0.00    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [30]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [48]
                0.00    0.09    7472/7474        torusPolynomialAddMulRFFT [4]
[9]      4.3    0.00    0.09    7474         IntPolynomial_ifft [9]
                0.04    0.05    7474/7474        FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [53]
-----------------------------------------------
                0.04    0.05    7474/7474        IntPolynomial_ifft [9]
[10]     4.3    0.04    0.05    7474         FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.01    0.00 3826688/3826688     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [33]
                0.01    0.00 3826688/3826688     double std::abs<double>(std::complex<double> const&) [32]
                0.00    0.00 3826688/19135488     std::complex<double>::complex(double, double) [20]
                0.00    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [30]
-----------------------------------------------
                0.02    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[11]     3.4    0.07    0.00   22422         FFT_Processor_nayuki::check_alternate_real() [11]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [48]
                0.00    0.05    7472/7474        torusPolynomialAddMulRFFT [4]
[12]     2.5    0.00    0.05    7474         TorusPolynomial_ifft [12]
                0.02    0.03    7474/7474        FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.00    0.00    7474/44844       TLS wrapper function for fp1024_nayuki [53]
-----------------------------------------------
                0.02    0.03    7474/7474        TorusPolynomial_ifft [12]
[13]     2.5    0.02    0.03    7474         FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.02    0.00    7474/22422       FFT_Processor_nayuki::check_alternate_real() [11]
                0.00    0.00 3826688/19135488     std::complex<double>::complex(double, double) [20]
                0.00    0.00    7474/22422       FFT_Processor_nayuki::check_conjugate_cplx() [30]
-----------------------------------------------
                0.00    0.00      16/136         tLweSymEncrypt [37]
                0.00    0.03     120/136         tGswEncryptZero [15]
[14]     1.5    0.00    0.03     136         tLweSymEncryptZero [14]
                0.00    0.02     272/272         torusPolynomialUniform [23]
                0.00    0.01     272/7472        torusPolynomialAddMulRFFT [4]
                0.00    0.00  139264/139280      gaussian32 [40]
-----------------------------------------------
                0.00    0.03       8/8           main [3]
[15]     1.3    0.00    0.03       8         tGswEncryptZero [15]
                0.00    0.03     120/136         tLweSymEncryptZero [14]
-----------------------------------------------
                0.02    0.01 15306752/15306752     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[16]     1.2    0.02    0.01 15306752         double std::imag<double>(std::complex<double> const&) [16]
                0.01    0.00 15306752/15306752     std::complex<double>::imag[abi:cxx11]() const [34]
-----------------------------------------------
                0.00    0.02    7474/7474        new_LagrangeHalfCPolynomial_array [18]
[17]     1.1    0.00    0.02    7474         init_LagrangeHalfCPolynomial_array [17]
                0.01    0.01   22422/22422       LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [19]
                0.00    0.00   22422/24904       operator new(unsigned long, void*) [467]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [48]
                0.00    0.02    7472/7474        torusPolynomialAddMulRFFT [4]
[18]     1.1    0.00    0.02    7474         new_LagrangeHalfCPolynomial_array [18]
                0.00    0.02    7474/7474        init_LagrangeHalfCPolynomial_array [17]
                0.00    0.00    7474/7474        alloc_LagrangeHalfCPolynomial_array [58]
-----------------------------------------------
                0.01    0.01   22422/22422       init_LagrangeHalfCPolynomial_array [17]
[19]     1.1    0.01    0.01   22422         LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [19]
                0.01    0.00 11480064/19135488     std::complex<double>::complex(double, double) [20]
                0.00    0.00   22422/44844       TLS wrapper function for fp1024_nayuki [53]
-----------------------------------------------
                0.00    0.00    2048/19135488     FFT_Processor_nayuki::FFT_Processor_nayuki(int) [54]
                0.00    0.00 3826688/19135488     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00 3826688/19135488     FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.01    0.00 11480064/19135488     LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [19]
[20]     1.0    0.02    0.00 19135488         std::complex<double>::complex(double, double) [20]
-----------------------------------------------
                0.00    0.00     481/288753      lweKeyGen [51]
                0.00    0.00    2048/288753      tLweKeyGen [47]
                0.00    0.00    7696/288753      lweSymEncrypt [46]
                0.00    0.02  278528/288753      torusPolynomialUniform [23]
[21]     0.9    0.00    0.02  288753         int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [21]
                0.01    0.01  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [22]
-----------------------------------------------
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [22]
                0.01    0.01  288753/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [21]
[22]     0.9    0.01    0.01  288753+429675  int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [22]
                0.01    0.00 1436856/1436856     std::uniform_int_distribution<int>::param_type::a() const [36]
                0.00    0.00  861879/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [35]
                0.00    0.00  718428/718428      std::uniform_int_distribution<int>::param_type::b() const [459]
                0.00    0.00  429675/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [461]
                              429675             int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [22]
-----------------------------------------------
                0.00    0.02     272/272         tLweSymEncryptZero [14]
[23]     0.8    0.00    0.02     272         torusPolynomialUniform [23]
                0.00    0.02  278528/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [21]
-----------------------------------------------
                0.01    0.00 15306752/15306752     double std::real<double>(std::complex<double> const&) [25]
[24]     0.7    0.01    0.00 15306752         std::complex<double>::real[abi:cxx11]() const [24]
-----------------------------------------------
                0.00    0.01 15306752/15306752     FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[25]     0.7    0.00    0.01 15306752         double std::real<double>(std::complex<double> const&) [25]
                0.01    0.00 15306752/15306752     std::complex<double>::real[abi:cxx11]() const [24]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [48]
                0.00    0.01    7472/7474        torusPolynomialAddMulRFFT [4]
[26]     0.7    0.00    0.01    7474         LagrangeHalfCPolynomialMul [26]
                0.01    0.00 3826688/3826688     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [27]
-----------------------------------------------
                0.01    0.00 3826688/3826688     LagrangeHalfCPolynomialMul [26]
[27]     0.7    0.01    0.00 3826688         std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [27]
                0.00    0.00 3826688/3826688     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [39]
-----------------------------------------------
                0.00    0.00     480/7952        tLweAddTo [45]
                0.01    0.00    7472/7952        torusPolynomialAddMulRFFT [4]
[28]     0.5    0.01    0.00    7952         torusPolynomialAddTo [28]
-----------------------------------------------
                0.00    0.00 3826688/11480064     double std::abs<double>(std::complex<double> const&) [32]
                0.00    0.00 3826688/11480064     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [38]
                0.00    0.00 3826688/11480064     std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [39]
[29]     0.5    0.01    0.00 11480064         std::complex<double>::__rep() const [29]
-----------------------------------------------
                0.00    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
                0.00    0.00    7474/22422       FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [13]
                0.00    0.00    7474/22422       FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [8]
[30]     0.5    0.01    0.00   22422         FFT_Processor_nayuki::check_conjugate_cplx() [30]
-----------------------------------------------
                                                 <spontaneous>
[31]     0.5    0.01    0.00                 _init [31]
-----------------------------------------------
                0.01    0.00 3826688/3826688     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[32]     0.4    0.01    0.00 3826688         double std::abs<double>(std::complex<double> const&) [32]
                0.00    0.00 3826688/11480064     std::complex<double>::__rep() const [29]
                0.00    0.00 3826688/3826688     std::__complex_abs(double _Complex) [456]
-----------------------------------------------
                0.01    0.00 3826688/3826688     FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [10]
[33]     0.4    0.01    0.00 3826688         std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [33]
                0.00    0.00 3826688/3826688     std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [38]
-----------------------------------------------
                0.01    0.00 15306752/15306752     double std::imag<double>(std::complex<double> const&) [16]
[34]     0.2    0.01    0.00 15306752         std::complex<double>::imag[abi:cxx11]() const [34]
-----------------------------------------------
                0.00    0.00  708588/1570467     double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [42]
                0.00    0.00  861879/1570467     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [22]
[35]     0.2    0.01    0.00 1570467         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [35]
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [458]
-----------------------------------------------
                0.01    0.00 1436856/1436856     int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [22]
[36]     0.2    0.01    0.00 1436856         std::uniform_int_distribution<int>::param_type::a() const [36]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[37]     0.2    0.00    0.00      16         tLweSymEncrypt [37]
                0.00    0.00      16/136         tLweSymEncryptZero [14]
-----------------------------------------------
                0.00    0.00 3826688/3826688     std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [33]
[38]     0.2    0.00    0.00 3826688         std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [38]
                0.00    0.00 3826688/11480064     std::complex<double>::__rep() const [29]
-----------------------------------------------
                0.00    0.00 3826688/3826688     std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [27]
[39]     0.2    0.00    0.00 3826688         std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [39]
                0.00    0.00 3826688/11480064     std::complex<double>::__rep() const [29]
-----------------------------------------------
                0.00    0.00      16/139280      lweSymEncrypt [46]
                0.00    0.00  139264/139280      tLweSymEncryptZero [14]
[40]     0.1    0.00    0.00  139280         gaussian32 [40]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [465]
                0.00    0.00  139280/139280      dtot32 [55]
-----------------------------------------------
                0.00    0.00  354294/354294      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [44]
[41]     0.1    0.00    0.00  354294         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [41]
                0.00    0.00  354294/354294      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [42]
-----------------------------------------------
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [41]
[42]     0.1    0.00    0.00  354294         double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [42]
                0.00    0.00  708588/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [35]
                0.00    0.00  708588/708588      std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [460]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [40]
[43]     0.1    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [44]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [43]
[44]     0.1    0.00    0.00  139280         double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [44]
                0.00    0.00  354294/354294      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [41]
                0.00    0.00  139280/139280      std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::stddev() const [463]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::mean() const [462]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[45]     0.0    0.00    0.00     160         tLweAddTo [45]
                0.00    0.00     480/7952        torusPolynomialAddTo [28]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[46]     0.0    0.00    0.00      16         lweSymEncrypt [46]
                0.00    0.00    7696/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [21]
                0.00    0.00      16/139280      gaussian32 [40]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[47]     0.0    0.00    0.00       1         tLweKeyGen [47]
                0.00    0.00    2048/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [21]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
-----------------------------------------------
                0.00    0.00       2/2           tLwePhase [49]
[48]     0.0    0.00    0.00       2         torusPolynomialSubMulRFFT [48]
                0.00    0.00       2/7474        TorusPolynomial_fft [7]
                0.00    0.00       2/7474        IntPolynomial_ifft [9]
                0.00    0.00       2/7474        TorusPolynomial_ifft [12]
                0.00    0.00       2/7474        new_LagrangeHalfCPolynomial_array [18]
                0.00    0.00       2/7474        LagrangeHalfCPolynomialMul [26]
                0.00    0.00       2/7477        new_TorusPolynomial [57]
                0.00    0.00       2/482         torusPolynomialSubTo [66]
                0.00    0.00       2/7477        delete_TorusPolynomial [56]
                0.00    0.00       2/7474        delete_LagrangeHalfCPolynomial_array [59]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [50]
[49]     0.0    0.00    0.00       1         tLwePhase [49]
                0.00    0.00       2/2           torusPolynomialSubMulRFFT [48]
                0.00    0.00       1/1           torusPolynomialCopy [132]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[50]     0.0    0.00    0.00       1         tLweSymDecrypt [50]
                0.00    0.00       1/1           tLwePhase [49]
                0.00    0.00       1/1           tLweApproxPhase [131]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[51]     0.0    0.00    0.00       1         lweKeyGen [51]
                0.00    0.00     481/288753      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [21]
                0.00    0.00       1/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
-----------------------------------------------
                0.00    0.00   44844/44844       TLS wrapper function for fp1024_nayuki [53]
[52]     0.0    0.00    0.00   44844         TLS init function for fp1024_nayuki [52]
                0.00    0.00       1/1           FFT_Processor_nayuki::FFT_Processor_nayuki(int) [54]
-----------------------------------------------
                0.00    0.00    7474/44844       IntPolynomial_ifft [9]
                0.00    0.00    7474/44844       TorusPolynomial_ifft [12]
                0.00    0.00    7474/44844       TorusPolynomial_fft [7]
                0.00    0.00   22422/44844       LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [19]
[53]     0.0    0.00    0.00   44844         TLS wrapper function for fp1024_nayuki [53]
                0.00    0.00   44844/44844       TLS init function for fp1024_nayuki [52]
-----------------------------------------------
                0.00    0.00       1/1           TLS init function for fp1024_nayuki [52]
[54]     0.0    0.00    0.00       1         FFT_Processor_nayuki::FFT_Processor_nayuki(int) [54]
                0.00    0.00    2048/19135488     std::complex<double>::complex(double, double) [20]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [40]
[55]     0.0    0.00    0.00  139280         dtot32 [55]
-----------------------------------------------
                0.00    0.00       2/7477        torusPolynomialSubMulRFFT [48]
                0.00    0.00       3/7477        main [3]
                0.00    0.00    7472/7477        torusPolynomialAddMulRFFT [4]
[56]     0.0    0.00    0.00    7477         delete_TorusPolynomial [56]
                0.00    0.00    7477/7486        TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/7477        torusPolynomialSubMulRFFT [48]
                0.00    0.00       3/7477        main [3]
                0.00    0.00    7472/7477        torusPolynomialAddMulRFFT [4]
[57]     0.0    0.00    0.00    7477         new_TorusPolynomial [57]
                0.00    0.00    7477/7531        TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00    7474/7474        new_LagrangeHalfCPolynomial_array [18]
[58]     0.0    0.00    0.00    7474         alloc_LagrangeHalfCPolynomial_array [58]
-----------------------------------------------
                0.00    0.00       2/7474        torusPolynomialSubMulRFFT [48]
                0.00    0.00    7472/7474        torusPolynomialAddMulRFFT [4]
[59]     0.0    0.00    0.00    7474         delete_LagrangeHalfCPolynomial_array [59]
                0.00    0.00    7474/7474        destroy_LagrangeHalfCPolynomial_array [60]
                0.00    0.00    7474/7474        free_LagrangeHalfCPolynomial_array [61]
-----------------------------------------------
                0.00    0.00    7474/7474        delete_LagrangeHalfCPolynomial_array [59]
[60]     0.0    0.00    0.00    7474         destroy_LagrangeHalfCPolynomial_array [60]
                0.00    0.00   22422/22422       LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [468]
-----------------------------------------------
                0.00    0.00    7474/7474        delete_LagrangeHalfCPolynomial_array [59]
[61]     0.0    0.00    0.00    7474         free_LagrangeHalfCPolynomial_array [61]
-----------------------------------------------
                0.00    0.00    2400/2400        tLweAddMulRTo [5]
[62]     0.0    0.00    0.00    2400         intPolynomialNormSq2 [62]
-----------------------------------------------
                0.00    0.00       1/1025        lweSymDecrypt [122]
                0.00    0.00    1024/1025        tLweApproxPhase [131]
[63]     0.0    0.00    0.00    1025         approxPhase [63]
-----------------------------------------------
                0.00    0.00      24/936         main [3]
                0.00    0.00     912/936         tLweClear [70]
[64]     0.0    0.00    0.00     936         torusPolynomialClear [64]
-----------------------------------------------
                0.00    0.00     800/800         main [3]
[65]     0.0    0.00    0.00     800         tLweCopy [65]
-----------------------------------------------
                0.00    0.00       2/482         torusPolynomialSubMulRFFT [48]
                0.00    0.00     480/482         tLweSubTo [80]
[66]     0.0    0.00    0.00     482         torusPolynomialSubTo [66]
-----------------------------------------------
                0.00    0.00     480/480         tGswTLweDecompH [77]
[67]     0.0    0.00    0.00     480         tGswTorus32PolynomialDecompH [67]
-----------------------------------------------
                0.00    0.00     480/480         tLweAddMulTo [78]
[68]     0.0    0.00    0.00     480         torusPolynomialAddMulZTo [68]
-----------------------------------------------
                0.00    0.00     480/480         tLweSubMulTo [79]
[69]     0.0    0.00    0.00     480         torusPolynomialSubMulZTo [69]
-----------------------------------------------
                0.00    0.00      24/304         main [3]
                0.00    0.00     120/304         tGswClear [87]
                0.00    0.00     160/304         tGswExternProduct [6]
[70]     0.0    0.00    0.00     304         tLweClear [70]
                0.00    0.00     912/936         torusPolynomialClear [64]
-----------------------------------------------
                0.00    0.00     162/162         new_IntPolynomial_array [73]
[71]     0.0    0.00    0.00     162         alloc_IntPolynomial_array [71]
-----------------------------------------------
                0.00    0.00     162/162         new_IntPolynomial_array [73]
[72]     0.0    0.00    0.00     162         init_IntPolynomial_array [72]
                0.00    0.00    2404/24904       operator new(unsigned long, void*) [467]
                0.00    0.00    2404/2406        IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       2/162         TLweKey::TLweKey(TLweParams const*) [480]
                0.00    0.00     160/162         tGswExternProduct [6]
[73]     0.0    0.00    0.00     162         new_IntPolynomial_array [73]
                0.00    0.00     162/162         alloc_IntPolynomial_array [71]
                0.00    0.00     162/162         init_IntPolynomial_array [72]
-----------------------------------------------
                0.00    0.00       1/161         TLweKey::~TLweKey() [505]
                0.00    0.00     160/161         tGswExternProduct [6]
[74]     0.0    0.00    0.00     161         delete_IntPolynomial_array [74]
                0.00    0.00     161/161         destroy_IntPolynomial_array [75]
                0.00    0.00     161/161         free_IntPolynomial_array [76]
-----------------------------------------------
                0.00    0.00     161/161         delete_IntPolynomial_array [74]
[75]     0.0    0.00    0.00     161         destroy_IntPolynomial_array [75]
                0.00    0.00    2402/2404        IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00     161/161         delete_IntPolynomial_array [74]
[76]     0.0    0.00    0.00     161         free_IntPolynomial_array [76]
-----------------------------------------------
                0.00    0.00     160/160         tGswExternProduct [6]
[77]     0.0    0.00    0.00     160         tGswTLweDecompH [77]
                0.00    0.00     480/480         tGswTorus32PolynomialDecompH [67]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[78]     0.0    0.00    0.00     160         tLweAddMulTo [78]
                0.00    0.00     480/480         torusPolynomialAddMulZTo [68]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[79]     0.0    0.00    0.00     160         tLweSubMulTo [79]
                0.00    0.00     480/480         torusPolynomialSubMulZTo [69]
-----------------------------------------------
                0.00    0.00     160/160         main [3]
[80]     0.0    0.00    0.00     160         tLweSubTo [80]
                0.00    0.00     480/482         torusPolynomialSubTo [66]
-----------------------------------------------
                0.00    0.00      24/24          main [3]
[81]     0.0    0.00    0.00      24         lweClear [81]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [85]
[82]     0.0    0.00    0.00      18         alloc_TorusPolynomial_array [82]
-----------------------------------------------
                0.00    0.00       3/18          new_TLweSample [101]
                0.00    0.00      15/18          init_TLweSample_array [120]
[83]     0.0    0.00    0.00      18         init_TLweSample [83]
                0.00    0.00      18/24904       operator new(unsigned long, void*) [467]
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [473]
-----------------------------------------------
                0.00    0.00      18/18          new_TorusPolynomial_array [85]
[84]     0.0    0.00    0.00      18         init_TorusPolynomial_array [84]
                0.00    0.00      54/24904       operator new(unsigned long, void*) [467]
                0.00    0.00      54/7531        TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00      18/18          TLweSample::TLweSample(TLweParams const*) [473]
[85]     0.0    0.00    0.00      18         new_TorusPolynomial_array [85]
                0.00    0.00      18/18          alloc_TorusPolynomial_array [82]
                0.00    0.00      18/18          init_TorusPolynomial_array [84]
-----------------------------------------------
                0.00    0.00      16/16          main [3]
[86]     0.0    0.00    0.00      16         modSwitchToTorus32 [86]
-----------------------------------------------
                0.00    0.00       8/8           main [3]
[87]     0.0    0.00    0.00       8         tGswClear [87]
                0.00    0.00     120/304         tLweClear [70]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [100]
[88]     0.0    0.00    0.00       3         alloc_LweSample [88]
-----------------------------------------------
                0.00    0.00       3/3           new_TLweSample [101]
[89]     0.0    0.00    0.00       3         alloc_TLweSample [89]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[90]     0.0    0.00    0.00       3         delete_LweSample [90]
                0.00    0.00       3/3           destroy_LweSample [93]
                0.00    0.00       3/3           free_LweSample [96]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[91]     0.0    0.00    0.00       3         delete_TLweSample [91]
                0.00    0.00       3/3           free_TLweSample [97]
                0.00    0.00       3/3           destroy_TLweSample [94]
-----------------------------------------------
                0.00    0.00       3/3           TLweSample::~TLweSample() [475]
[92]     0.0    0.00    0.00       3         delete_TorusPolynomial_array [92]
                0.00    0.00       3/3           destroy_TorusPolynomial_array [95]
                0.00    0.00       3/3           free_TorusPolynomial_array [98]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [90]
[93]     0.0    0.00    0.00       3         destroy_LweSample [93]
                0.00    0.00       3/3           LweSample::~LweSample() [477]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [91]
[94]     0.0    0.00    0.00       3         destroy_TLweSample [94]
                0.00    0.00       3/3           TLweSample::~TLweSample() [475]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [92]
[95]     0.0    0.00    0.00       3         destroy_TorusPolynomial_array [95]
                0.00    0.00       9/7486        TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       3/3           delete_LweSample [90]
[96]     0.0    0.00    0.00       3         free_LweSample [96]
-----------------------------------------------
                0.00    0.00       3/3           delete_TLweSample [91]
[97]     0.0    0.00    0.00       3         free_TLweSample [97]
-----------------------------------------------
                0.00    0.00       3/3           delete_TorusPolynomial_array [92]
[98]     0.0    0.00    0.00       3         free_TorusPolynomial_array [98]
-----------------------------------------------
                0.00    0.00       3/3           new_LweSample [100]
[99]     0.0    0.00    0.00       3         init_LweSample [99]
                0.00    0.00       3/24904       operator new(unsigned long, void*) [467]
                0.00    0.00       3/3           LweSample::LweSample(LweParams const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[100]    0.0    0.00    0.00       3         new_LweSample [100]
                0.00    0.00       3/3           alloc_LweSample [88]
                0.00    0.00       3/3           init_LweSample [99]
-----------------------------------------------
                0.00    0.00       3/3           main [3]
[101]    0.0    0.00    0.00       3         new_TLweSample [101]
                0.00    0.00       3/3           alloc_TLweSample [89]
                0.00    0.00       3/18          init_TLweSample [83]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[102]    0.0    0.00    0.00       2         delete_IntPolynomial [102]
                0.00    0.00       2/2404        IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[103]    0.0    0.00    0.00       2         modSwitchFromTorus32 [103]
-----------------------------------------------
                0.00    0.00       2/2           main [3]
[104]    0.0    0.00    0.00       2         new_IntPolynomial [104]
                0.00    0.00       2/2406        IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [123]
[105]    0.0    0.00    0.00       1         alloc_LweKey [105]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [127]
[106]    0.0    0.00    0.00       1         alloc_TGswSample [106]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [128]
[107]    0.0    0.00    0.00       1         alloc_TLweKey [107]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [130]
[108]    0.0    0.00    0.00       1         alloc_TLweSample_array [108]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[109]    0.0    0.00    0.00       1         delete_LweKey [109]
                0.00    0.00       1/1           destroy_LweKey [113]
                0.00    0.00       1/1           free_LweKey [115]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[110]    0.0    0.00    0.00       1         delete_LweParams [110]
                0.00    0.00       1/2           LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[111]    0.0    0.00    0.00       1         delete_TLweKey [111]
                0.00    0.00       1/1           destroy_TLweKey [114]
                0.00    0.00       1/1           free_TLweKey [116]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[112]    0.0    0.00    0.00       1         delete_TLweParams [112]
                0.00    0.00       1/1           TLweParams::~TLweParams() [501]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [109]
[113]    0.0    0.00    0.00       1         destroy_LweKey [113]
                0.00    0.00       1/1           LweKey::~LweKey() [503]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [111]
[114]    0.0    0.00    0.00       1         destroy_TLweKey [114]
                0.00    0.00       1/1           TLweKey::~TLweKey() [505]
-----------------------------------------------
                0.00    0.00       1/1           delete_LweKey [109]
[115]    0.0    0.00    0.00       1         free_LweKey [115]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweKey [111]
[116]    0.0    0.00    0.00       1         free_TLweKey [116]
-----------------------------------------------
                0.00    0.00       1/1           new_LweKey [123]
[117]    0.0    0.00    0.00       1         init_LweKey [117]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [467]
                0.00    0.00       1/1           LweKey::LweKey(LweParams const*) [502]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswSample [127]
[118]    0.0    0.00    0.00       1         init_TGswSample [118]
                0.00    0.00       1/1           new_TLweSample_array [130]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [467]
                0.00    0.00       1/1           TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweKey [128]
[119]    0.0    0.00    0.00       1         init_TLweKey [119]
                0.00    0.00       1/24904       operator new(unsigned long, void*) [467]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [480]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweSample_array [130]
[120]    0.0    0.00    0.00       1         init_TLweSample_array [120]
                0.00    0.00      15/18          init_TLweSample [83]
-----------------------------------------------
                0.00    0.00       1/1           lweSymDecrypt [122]
[121]    0.0    0.00    0.00       1         lwePhase [121]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[122]    0.0    0.00    0.00       1         lweSymDecrypt [122]
                0.00    0.00       1/1           lwePhase [121]
                0.00    0.00       1/1025        approxPhase [63]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[123]    0.0    0.00    0.00       1         new_LweKey [123]
                0.00    0.00       1/1           alloc_LweKey [105]
                0.00    0.00       1/1           init_LweKey [117]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[124]    0.0    0.00    0.00       1         new_LweParams [124]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[125]    0.0    0.00    0.00       1         new_TGswKey [125]
                0.00    0.00       1/1           TGswKey::TGswKey(TGswParams const*) [504]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[126]    0.0    0.00    0.00       1         new_TGswParams [126]
                0.00    0.00       1/1           TGswParams::TGswParams(int, int, TLweParams const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[127]    0.0    0.00    0.00       1         new_TGswSample [127]
                0.00    0.00       1/1           alloc_TGswSample [106]
                0.00    0.00       1/1           init_TGswSample [118]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[128]    0.0    0.00    0.00       1         new_TLweKey [128]
                0.00    0.00       1/1           alloc_TLweKey [107]
                0.00    0.00       1/1           init_TLweKey [119]
-----------------------------------------------
                0.00    0.00       1/1           main [3]
[129]    0.0    0.00    0.00       1         new_TLweParams [129]
                0.00    0.00       1/1           TLweParams::TLweParams(int, int, double, double) [500]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [118]
[130]    0.0    0.00    0.00       1         new_TLweSample_array [130]
                0.00    0.00       1/1           alloc_TLweSample_array [108]
                0.00    0.00       1/1           init_TLweSample_array [120]
-----------------------------------------------
                0.00    0.00       1/1           tLweSymDecrypt [50]
[131]    0.0    0.00    0.00       1         tLweApproxPhase [131]
                0.00    0.00    1024/1025        approxPhase [63]
-----------------------------------------------
                0.00    0.00       1/1           tLwePhase [49]
[132]    0.0    0.00    0.00       1         torusPolynomialCopy [132]
-----------------------------------------------
                0.00    0.00 3826688/3826688     double std::abs<double>(std::complex<double> const&) [32]
[456]    0.0    0.00    0.00 3826688         std::__complex_abs(double _Complex) [456]
-----------------------------------------------
                0.00    0.00 1570467/1570467     unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [458]
[457]    0.0    0.00    0.00 1570467         std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [457]
-----------------------------------------------
                0.00    0.00 1570467/1570467     std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [35]
[458]    0.0    0.00    0.00 1570467         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [458]
                0.00    0.00 1570467/1570467     std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [457]
-----------------------------------------------
                0.00    0.00  718428/718428      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [22]
[459]    0.0    0.00    0.00  718428         std::uniform_int_distribution<int>::param_type::b() const [459]
-----------------------------------------------
                0.00    0.00  708588/708588      double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [42]
[460]    0.0    0.00    0.00  708588         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [460]
-----------------------------------------------
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00  429675/429679      int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [22]
[461]    0.0    0.00    0.00  429679         std::uniform_int_distribution<int>::param_type::param_type(int, int) [461]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [44]
[462]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::mean() const [462]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [44]
[463]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::stddev() const [463]
-----------------------------------------------
                0.00    0.00  139280/139280      std::normal_distribution<double>::normal_distribution(double, double) [465]
[464]    0.0    0.00    0.00  139280         std::normal_distribution<double>::param_type::param_type(double, double) [464]
-----------------------------------------------
                0.00    0.00  139280/139280      gaussian32 [40]
[465]    0.0    0.00    0.00  139280         std::normal_distribution<double>::normal_distribution(double, double) [465]
                0.00    0.00  139280/139280      std::normal_distribution<double>::param_type::param_type(double, double) [464]
-----------------------------------------------
                0.00    0.00  139280/139280      double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [44]
[466]    0.0    0.00    0.00  139280         std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [466]
-----------------------------------------------
                0.00    0.00       1/24904       init_LweKey [117]
                0.00    0.00       1/24904       init_TGswSample [118]
                0.00    0.00       1/24904       init_TLweKey [119]
                0.00    0.00       3/24904       init_LweSample [99]
                0.00    0.00      18/24904       init_TLweSample [83]
                0.00    0.00      54/24904       init_TorusPolynomial_array [84]
                0.00    0.00    2404/24904       init_IntPolynomial_array [72]
                0.00    0.00   22422/24904       init_LagrangeHalfCPolynomial_array [17]
[467]    0.0    0.00    0.00   24904         operator new(unsigned long, void*) [467]
-----------------------------------------------
                0.00    0.00   22422/22422       destroy_LagrangeHalfCPolynomial_array [60]
[468]    0.0    0.00    0.00   22422         LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [468]
-----------------------------------------------
                0.00    0.00      54/7531        init_TorusPolynomial_array [84]
                0.00    0.00    7477/7531        new_TorusPolynomial [57]
[469]    0.0    0.00    0.00    7531         TorusPolynomial::TorusPolynomial(int) [469]
-----------------------------------------------
                0.00    0.00       9/7486        destroy_TorusPolynomial_array [95]
                0.00    0.00    7477/7486        delete_TorusPolynomial [56]
[470]    0.0    0.00    0.00    7486         TorusPolynomial::~TorusPolynomial() [470]
-----------------------------------------------
                0.00    0.00       2/2406        new_IntPolynomial [104]
                0.00    0.00    2404/2406        init_IntPolynomial_array [72]
[471]    0.0    0.00    0.00    2406         IntPolynomial::IntPolynomial(int) [471]
-----------------------------------------------
                0.00    0.00       2/2404        delete_IntPolynomial [102]
                0.00    0.00    2402/2404        destroy_IntPolynomial_array [75]
[472]    0.0    0.00    0.00    2404         IntPolynomial::~IntPolynomial() [472]
-----------------------------------------------
                0.00    0.00      18/18          init_TLweSample [83]
[473]    0.0    0.00    0.00      18         TLweSample::TLweSample(TLweParams const*) [473]
                0.00    0.00      18/18          new_TorusPolynomial_array [85]
-----------------------------------------------
                0.00    0.00       1/4           lweKeyGen [51]
                0.00    0.00       1/4           tLweKeyGen [47]
                0.00    0.00       2/4           __static_initialization_and_destruction_0(int, int) [492]
[474]    0.0    0.00    0.00       4         std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00       4/429679      std::uniform_int_distribution<int>::param_type::param_type(int, int) [461]
-----------------------------------------------
                0.00    0.00       3/3           destroy_TLweSample [94]
[475]    0.0    0.00    0.00       3         TLweSample::~TLweSample() [475]
                0.00    0.00       3/3           delete_TorusPolynomial_array [92]
-----------------------------------------------
                0.00    0.00       3/3           init_LweSample [99]
[476]    0.0    0.00    0.00       3         LweSample::LweSample(LweParams const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           destroy_LweSample [93]
[477]    0.0    0.00    0.00       3         LweSample::~LweSample() [477]
-----------------------------------------------
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
[478]    0.0    0.00    0.00       3         std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       3/3           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
[479]    0.0    0.00    0.00       3         unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
                0.00    0.00       3/3           std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [478]
-----------------------------------------------
                0.00    0.00       1/2           TGswKey::TGswKey(TGswParams const*) [504]
                0.00    0.00       1/2           init_TLweKey [119]
[480]    0.0    0.00    0.00       2         TLweKey::TLweKey(TLweParams const*) [480]
                0.00    0.00       2/162         new_IntPolynomial_array [73]
-----------------------------------------------
                0.00    0.00       1/2           new_LweParams [124]
                0.00    0.00       1/2           TLweParams::TLweParams(int, int, double, double) [500]
[481]    0.0    0.00    0.00       2         LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/2           delete_LweParams [110]
                0.00    0.00       1/2           TLweParams::~TLweParams() [501]
[482]    0.0    0.00    0.00       2         LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [522]
[483]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [483]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_bootsNAND [513]
[484]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [484]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKeyFFT [518]
[485]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [485]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_LweBootstrappingKey [517]
[486]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [486]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_lweKeyGen [521]
[487]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [487]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__Z16renormalizeKSkeyP15LweKeySwitchKeyPK6LweKeyPKi [509]
[488]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [488]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_debug_accum_key [514]
[489]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [489]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN19LweBootstrappingKeyC2EPK9LweParamsPK10TGswParamsPK10TLweParamsS2_P10TGswSampleP15LweKeySwitchKey [511]
[490]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [490]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN13IntPolynomialC2Ei [510]
[491]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [491]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_generator [516]
[492]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [492]
                0.00    0.00       2/4           std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [474]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_die_dramatically [515]
[493]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [493]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZNK10StdIstream7getLineERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE [512]
[494]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [494]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSampleFFT [520]
[495]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [495]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_init_TGswSample [519]
[496]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [496]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_tLweKeyGen [523]
[497]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [497]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswParams [126]
[498]    0.0    0.00    0.00       1         TGswParams::TGswParams(int, int, TLweParams const*) [498]
-----------------------------------------------
                0.00    0.00       1/1           init_TGswSample [118]
[499]    0.0    0.00    0.00       1         TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [499]
-----------------------------------------------
                0.00    0.00       1/1           new_TLweParams [129]
[500]    0.0    0.00    0.00       1         TLweParams::TLweParams(int, int, double, double) [500]
                0.00    0.00       1/2           LweParams::LweParams(int, double, double) [481]
-----------------------------------------------
                0.00    0.00       1/1           delete_TLweParams [112]
[501]    0.0    0.00    0.00       1         TLweParams::~TLweParams() [501]
                0.00    0.00       1/2           LweParams::~LweParams() [482]
-----------------------------------------------
                0.00    0.00       1/1           init_LweKey [117]
[502]    0.0    0.00    0.00       1         LweKey::LweKey(LweParams const*) [502]
-----------------------------------------------
                0.00    0.00       1/1           destroy_LweKey [113]
[503]    0.0    0.00    0.00       1         LweKey::~LweKey() [503]
-----------------------------------------------
                0.00    0.00       1/1           new_TGswKey [125]
[504]    0.0    0.00    0.00       1         TGswKey::TGswKey(TGswParams const*) [504]
                0.00    0.00       1/2           TLweKey::TLweKey(TLweParams const*) [480]
-----------------------------------------------
                0.00    0.00       1/1           destroy_TLweKey [114]
[505]    0.0    0.00    0.00       1         TLweKey::~TLweKey() [505]
                0.00    0.00       1/161         delete_IntPolynomial_array [74]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
[506]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
                0.00    0.00       3/3           unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [479]
-----------------------------------------------
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
[507]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [506]
-----------------------------------------------
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [492]
[508]    0.0    0.00    0.00       1         std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [508]
                0.00    0.00       1/1           std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [507]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [9] IntPolynomial_ifft    [506] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::seed(unsigned long) [40] gaussian32
  [26] LagrangeHalfCPolynomialMul [507] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine(unsigned long) [72] init_IntPolynomial_array
   [7] TorusPolynomial_fft   [508] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::linear_congruential_engine() [17] init_LagrangeHalfCPolynomial_array
  [12] TorusPolynomial_ifft   [35] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::operator()() [117] init_LweKey
 [483] __static_initialization_and_destruction_0(int, int) [20] std::complex<double>::complex(double, double) [99] init_LweSample
 [484] __static_initialization_and_destruction_0(int, int) [38] std::complex<double>& std::complex<double>::operator-=<double>(std::complex<double> const&) [118] init_TGswSample
 [485] __static_initialization_and_destruction_0(int, int) [39] std::complex<double>& std::complex<double>::operator*=<double>(std::complex<double> const&) [119] init_TLweKey
 [486] __static_initialization_and_destruction_0(int, int) [457] std::__detail::_Mod<unsigned long, 2147483647ul, 16807ul, 0ul, true, true>::__calc(unsigned long) [83] init_TLweSample
 [487] __static_initialization_and_destruction_0(int, int) [478] std::__detail::_Mod<unsigned long, 2147483647ul, 1ul, 0ul, true, true>::__calc(unsigned long) [120] init_TLweSample_array
 [488] __static_initialization_and_destruction_0(int, int) [458] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 16807ul, 0ul>(unsigned long) [84] init_TorusPolynomial_array
 [489] __static_initialization_and_destruction_0(int, int) [479] unsigned long std::__detail::__mod<unsigned long, 2147483647ul, 1ul, 0ul>(unsigned long) [62] intPolynomialNormSq2
 [490] __static_initialization_and_destruction_0(int, int) [466] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::_Adaptor(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [81] lweClear
 [491] __static_initialization_and_destruction_0(int, int) [41] std::__detail::_Adaptor<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>, double>::operator()() [51] lweKeyGen
 [492] __static_initialization_and_destruction_0(int, int) [456] std::__complex_abs(double _Complex) [121] lwePhase
 [493] __static_initialization_and_destruction_0(int, int) [42] double std::generate_canonical<double, 53ul, std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [122] lweSymDecrypt
 [494] __static_initialization_and_destruction_0(int, int) [32] double std::abs<double>(std::complex<double> const&) [46] lweSymEncrypt
 [495] __static_initialization_and_destruction_0(int, int) [16] double std::imag<double>(std::complex<double> const&) [103] modSwitchFromTorus32
 [496] __static_initialization_and_destruction_0(int, int) [25] double std::real<double>(std::complex<double> const&) [86] modSwitchToTorus32
 [497] __static_initialization_and_destruction_0(int, int) [33] std::complex<double> std::operator-<double>(std::complex<double> const&, std::complex<double> const&) [104] new_IntPolynomial
 [498] TGswParams::TGswParams(int, int, TLweParams const*) [27] std::complex<double> std::operator*<double>(std::complex<double> const&, std::complex<double> const&) [73] new_IntPolynomial_array
 [499] TGswSample::TGswSample(TLweSample*, TLweSample**, int, int) [52] TLS init function for fp1024_nayuki [18] new_LagrangeHalfCPolynomial_array
 [500] TLweParams::TLweParams(int, int, double, double) [53] TLS wrapper function for fp1024_nayuki [123] new_LweKey
 [501] TLweParams::~TLweParams() [467] operator new(unsigned long, void*) [124] new_LweParams
 [473] TLweSample::TLweSample(TLweParams const*) [31] _init [100] new_LweSample
 [475] TLweSample::~TLweSample() [71] alloc_IntPolynomial_array [125] new_TGswKey
 [471] IntPolynomial::IntPolynomial(int) [58] alloc_LagrangeHalfCPolynomial_array [126] new_TGswParams
 [472] IntPolynomial::~IntPolynomial() [105] alloc_LweKey [127] new_TGswSample
 [469] TorusPolynomial::TorusPolynomial(int) [88] alloc_LweSample [128] new_TLweKey
 [470] TorusPolynomial::~TorusPolynomial() [106] alloc_TGswSample [129] new_TLweParams
  [10] FFT_Processor_nayuki::execute_reverse_int(std::complex<double>*, int const*) [107] alloc_TLweKey [101] new_TLweSample
  [11] FFT_Processor_nayuki::check_alternate_real() [89] alloc_TLweSample [130] new_TLweSample_array
  [30] FFT_Processor_nayuki::check_conjugate_cplx() [108] alloc_TLweSample_array [57] new_TorusPolynomial
   [8] FFT_Processor_nayuki::execute_direct_torus32(int*, std::complex<double> const*) [82] alloc_TorusPolynomial_array [85] new_TorusPolynomial_array
  [13] FFT_Processor_nayuki::execute_reverse_torus32(std::complex<double>*, int const*) [63] approxPhase [87] tGswClear
  [54] FFT_Processor_nayuki::FFT_Processor_nayuki(int) [102] delete_IntPolynomial [15] tGswEncryptZero
  [19] LagrangeHalfCPolynomial_IMPL::LagrangeHalfCPolynomial_IMPL(int) [74] delete_IntPolynomial_array [6] tGswExternProduct
 [468] LagrangeHalfCPolynomial_IMPL::~LagrangeHalfCPolynomial_IMPL() [59] delete_LagrangeHalfCPolynomial_array [77] tGswTLweDecompH
 [502] LweKey::LweKey(LweParams const*) [109] delete_LweKey [67] tGswTorus32PolynomialDecompH
 [503] LweKey::~LweKey()     [110] delete_LweParams        [5] tLweAddMulRTo
 [504] TGswKey::TGswKey(TGswParams const*) [90] delete_LweSample [78] tLweAddMulTo
 [480] TLweKey::TLweKey(TLweParams const*) [111] delete_TLweKey [45] tLweAddTo
 [505] TLweKey::~TLweKey()   [112] delete_TLweParams     [131] tLweApproxPhase
 [481] LweParams::LweParams(int, double, double) [91] delete_TLweSample [70] tLweClear
 [482] LweParams::~LweParams() [56] delete_TorusPolynomial [65] tLweCopy
 [476] LweSample::LweSample(LweParams const*) [92] delete_TorusPolynomial_array [47] tLweKeyGen
 [477] LweSample::~LweSample() [75] destroy_IntPolynomial_array [49] tLwePhase
 [462] std::normal_distribution<double>::param_type::mean() const [60] destroy_LagrangeHalfCPolynomial_array [79] tLweSubMulTo
 [463] std::normal_distribution<double>::param_type::stddev() const [113] destroy_LweKey [80] tLweSubTo
  [36] std::uniform_int_distribution<int>::param_type::a() const [93] destroy_LweSample [50] tLweSymDecrypt
 [459] std::uniform_int_distribution<int>::param_type::b() const [114] destroy_TLweKey [37] tLweSymEncrypt
  [34] std::complex<double>::imag[abi:cxx11]() const [94] destroy_TLweSample [14] tLweSymEncryptZero
  [24] std::complex<double>::real[abi:cxx11]() const [95] destroy_TorusPolynomial_array [4] torusPolynomialAddMulRFFT
  [29] std::complex<double>::__rep() const [55] dtot32    [68] torusPolynomialAddMulZTo
 [464] std::normal_distribution<double>::param_type::param_type(double, double) [2] fft_transform [28] torusPolynomialAddTo
 [465] std::normal_distribution<double>::normal_distribution(double, double) [1] fft_transform_reverse [64] torusPolynomialClear
  [43] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [76] free_IntPolynomial_array [132] torusPolynomialCopy
  [44] double std::normal_distribution<double>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::normal_distribution<double>::param_type const&) [61] free_LagrangeHalfCPolynomial_array [48] torusPolynomialSubMulRFFT
 [461] std::uniform_int_distribution<int>::param_type::param_type(int, int) [115] free_LweKey [69] torusPolynomialSubMulZTo
 [474] std::uniform_int_distribution<int>::uniform_int_distribution(int, int) [96] free_LweSample [66] torusPolynomialSubTo
  [21] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&) [116] free_TLweKey [23] torusPolynomialUniform
  [22] int std::uniform_int_distribution<int>::operator()<std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul> >(std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>&, std::uniform_int_distribution<int>::param_type const&) [97] free_TLweSample
 [460] std::linear_congruential_engine<unsigned long, 16807ul, 0ul, 2147483647ul>::min() [98] free_TorusPolynomial_array
